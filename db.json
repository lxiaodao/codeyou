{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/back_favicon.ico","path":"images/back_favicon.ico","modified":0,"renderable":0},{"_id":"source/images/code.svg","path":"images/code.svg","modified":0,"renderable":0},{"_id":"source/images/codey.png","path":"images/codey.png","modified":0,"renderable":0},{"_id":"themes/material-flow/source/style.less","path":"style.less","modified":0,"renderable":1},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":0},{"_id":"themes/material-flow/source/fonts/icomoon.eot","path":"fonts/icomoon.eot","modified":0,"renderable":1},{"_id":"themes/material-flow/source/fonts/icomoon.svg","path":"fonts/icomoon.svg","modified":0,"renderable":1},{"_id":"themes/material-flow/source/fonts/icomoon.ttf","path":"fonts/icomoon.ttf","modified":0,"renderable":1},{"_id":"themes/material-flow/source/fonts/icomoon.woff","path":"fonts/icomoon.woff","modified":0,"renderable":1},{"_id":"themes/material-flow/source/fonts/selection.json","path":"fonts/selection.json","modified":0,"renderable":1},{"_id":"themes/material-flow/source/js/app.js","path":"js/app.js","modified":0,"renderable":1},{"_id":"themes/material-flow/source/js/jquery.fitvids.js","path":"js/jquery.fitvids.js","modified":0,"renderable":1},{"_id":"themes/material-flow/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"source/images/appdemo.png","path":"images/appdemo.png","modified":0,"renderable":0},{"_id":"source/about/index/about.jpg","path":"about/index/about.jpg","modified":0,"renderable":0},{"_id":"source/images/about.jpg","path":"images/about.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"themes/material-flow/README.md","hash":"9d1c177b082bfd250844f5eeb0e32e3528abc053","modified":1570773015730},{"_id":"themes/material-flow/LICENSE","hash":"0e12aed461110e809af1a52728f499f852e85e0a","modified":1570773015728},{"_id":"themes/material-flow/_config.yml","hash":"91fccda69400a7f172a7592b1ce1e01cc6a1799d","modified":1571645042416},{"_id":"source/about/index.md","hash":"74f3df464460141e02d0e8670a98d10b5af9d368","modified":1570773015707},{"_id":"source/_posts/2014-multi-university-training-contest-4.md","hash":"6ef5087cce3eaa56aaf3a13d607ae89fe2b4d025","modified":1570773015624},{"_id":"source/_posts/Basic Algorithms in Go.md","hash":"94a425fc6c4df521d0d7b1296891b09923de1acd","modified":1570773015630},{"_id":"source/_posts/CentOS1@1-3.md","hash":"fb405bc8b267a5c44942c895c01adaa8f97287e5","modified":1570773015631},{"_id":"source/_posts/CentOS2@1-4.md","hash":"51dfb688da2911632abe3433862a139caf29b4b9","modified":1570773015632},{"_id":"source/_posts/Kubernetes-&-Deepin-Settings@1-12.md","hash":"25425ec6116a7c81a95d1134d47cc16c4f15fc12","modified":1570773015641},{"_id":"source/_posts/Kubernetes部署@1-5.md","hash":"3fbe1b79e4e0d13d97a027aac8456f516c17eba1","modified":1570773015643},{"_id":"source/_posts/_hello-world.md","hash":"0db4d8b162ec0f35404f8bd085f18deadd9045d7","modified":1570773015648},{"_id":"source/_posts/_tired.md","hash":"eb4fdcc56daacadf58006768b22211b2e9d47a30","modified":1570773015650},{"_id":"source/_posts/acm-international-collegiate-programming-contest-asia-regional-contest-tokyo-problem-d-space-golf.md","hash":"0f997dfc70f3f6b886369816ff3ed03962d2b9f0","modified":1570773015651},{"_id":"source/_posts/baylor6622-absurdistan-roads.md","hash":"a07326817f4432eadb36f4a340d0ee7bb25c596f","modified":1570773015653},{"_id":"source/_posts/beautifull-i3.md","hash":"e822b0ea4d23ab9083f77c176e7c62c06577be35","modified":1570773015654},{"_id":"source/_posts/kde-to-mac.md","hash":"58e7a5a7187636e97f106105914814700ed4fd02","modified":1570773015681},{"_id":"source/_posts/intro-of-fft.md","hash":"eb41faade6135ab3a8c3b95b0e5e75953613c0eb","modified":1570773015679},{"_id":"source/_posts/kde4-config.md","hash":"1390e398b284c4206ca90d4672000c95c813a879","modified":1570773015682},{"_id":"source/images/back_favicon.ico","hash":"57e19c18bfe2f77a1bc3229dc104114dc171ce72","modified":1570773015724},{"_id":"source/images/code.svg","hash":"ac38cfd4b89734536d02cd3d0c6d690afb2e980d","modified":1570773015723},{"_id":"source/images/codey.png","hash":"82ad7516faf58d44e85ab5aa7449a65cb7aced51","modified":1571122556402},{"_id":"themes/material-flow/layout/archive.ejs","hash":"ca51625164abe022be8a440fe62b5f66f5b4421b","modified":1570773015754},{"_id":"themes/material-flow/layout/category.ejs","hash":"c97be36b33bb44957778587f00c978f2d28016f8","modified":1570773015755},{"_id":"themes/material-flow/layout/index.ejs","hash":"c97be36b33bb44957778587f00c978f2d28016f8","modified":1570773015756},{"_id":"themes/material-flow/layout/layout.ejs","hash":"f493debff25d73371c536f9dc15414e2d0f54af2","modified":1570773015757},{"_id":"themes/material-flow/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1570773015759},{"_id":"themes/material-flow/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1570773015760},{"_id":"themes/material-flow/layout/tag.ejs","hash":"c97be36b33bb44957778587f00c978f2d28016f8","modified":1570773015762},{"_id":"themes/material-flow/source/style.less","hash":"a003dab76221b7a4076bb7a15a60dcc456fad672","modified":1570773015800},{"_id":"source/images/avatar.jpg","hash":"445c00332b7f381b21820ea422e5bc7f4f236aaa","modified":1570773015722},{"_id":"source/_posts/microservices/minikube.md","hash":"279948d81e0fe39d6c47a53b6a85427c43acb91b","modified":1571123414012},{"_id":"source/_posts/servicemesh/istio-and-springcloud.md","hash":"7207db8eddd6ecba92c774df8f15722a5d20bcc3","modified":1571305706391},{"_id":"source/_posts/microservices/k8s-windows.md","hash":"52ad9ec415c704eaaff66c4f11e14c1f12b2e8b4","modified":1571123754653},{"_id":"themes/material-flow/layout/_partial/archive.ejs","hash":"a92ccba847e9687b0d118a5de41837fa6d9bf8ee","modified":1570773015733},{"_id":"themes/material-flow/layout/_partial/article.ejs","hash":"67688e727cacba0c09cbb61bf3a1583d8e6fbc3a","modified":1570773015734},{"_id":"themes/material-flow/layout/_partial/categories.ejs","hash":"67a1281303e6e32607b232cb2a16c2d8878c011e","modified":1570773015736},{"_id":"themes/material-flow/layout/_partial/footer.ejs","hash":"81bf99424865dd96bf970f5ff4cea2bdcb1562ce","modified":1570773015737},{"_id":"themes/material-flow/layout/_partial/head.ejs","hash":"c9c800d6a2245df41e8a8950c32aab45bc469812","modified":1570773015738},{"_id":"themes/material-flow/layout/_partial/header.ejs","hash":"0ad2e27130fd714244831cf15f07279e1faceee6","modified":1571645017372},{"_id":"themes/material-flow/layout/_partial/loading.ejs","hash":"02bd745f5177e589c7febe1ee1a02031c861b199","modified":1570773015741},{"_id":"themes/material-flow/layout/_partial/post.ejs","hash":"6a83c16809f7afa581a1b22be8a933d4e25f4b50","modified":1570773015743},{"_id":"themes/material-flow/layout/_partial/scripts.ejs","hash":"9c936ea339d7b4b4453b9430452ef75beed2222c","modified":1570773015745},{"_id":"themes/material-flow/layout/_partial/side.ejs","hash":"97baa21b3428268128f764e89cd85e6d0274cd45","modified":1570773015746},{"_id":"themes/material-flow/layout/_widget/about.ejs","hash":"e05c412af33fa91079e99857a03052b4be6ed67d","modified":1571645186147},{"_id":"themes/material-flow/layout/_widget/categories.ejs","hash":"bde7f44e08fd9046fd9b44876f4b2fec9357bf7d","modified":1570773015749},{"_id":"themes/material-flow/layout/_widget/links.ejs","hash":"9634db1722323a0637a8e8cbe82d4363b1c2d293","modified":1570773015751},{"_id":"themes/material-flow/layout/_widget/tagcloud.ejs","hash":"9fc962c86dd577d34910225a0b503cfe45e1b824","modified":1570773015752},{"_id":"themes/material-flow/source/fonts/icomoon.eot","hash":"931a892fd6307c0cfcbb71511ad4a38b3dd20edf","modified":1570773015765},{"_id":"themes/material-flow/source/fonts/icomoon.svg","hash":"d2f6755d619e577d90537e7e92640a2e1b833f6f","modified":1570773015767},{"_id":"themes/material-flow/source/fonts/icomoon.ttf","hash":"6192fb2b38c94f77d1fed08c1969fab5ffe9a30c","modified":1570773015768},{"_id":"themes/material-flow/source/fonts/icomoon.woff","hash":"0356e9be814a04187c641371fd95a7a8d9111200","modified":1570773015770},{"_id":"themes/material-flow/source/fonts/selection.json","hash":"63e57a0fdd6138c8872f8cafa24b951eaf9fd564","modified":1570773015771},{"_id":"themes/material-flow/source/js/app.js","hash":"fbd6b7f2b270a68acf4a92d8519540a06ecaeab0","modified":1570773015774},{"_id":"themes/material-flow/source/js/jquery.fitvids.js","hash":"498d2b1a5cfd53ce9b320c9ccd7d53ea7b04ffb7","modified":1570773015775},{"_id":"themes/material-flow/source/js/search.js","hash":"bd98ebee93f42ea04d10a7e77bda30fccdf67822","modified":1570773015777},{"_id":"themes/material-flow/source/less/_base.less","hash":"50e21f998d7903cb0fa3700a4e535c3ac55e70f9","modified":1570773015783},{"_id":"themes/material-flow/source/less/_article.less","hash":"18436487ed48bb5eefe8e5079ce6adf6841be3ac","modified":1570773015781},{"_id":"themes/material-flow/source/less/_archive.less","hash":"306c2e1b4a62ba1a241d11efd3935f69178e0927","modified":1570773015780},{"_id":"themes/material-flow/source/less/_defines.less","hash":"9f8e54c4f05e9fa76649aa3abb9d0a8d3a3ce76a","modified":1570773015784},{"_id":"themes/material-flow/source/less/_fonts.less","hash":"cdb77d9bd7a3e62ec3f29ece0b258719a8c5691c","modified":1570773015785},{"_id":"themes/material-flow/source/less/_footer.less","hash":"712ff89e8a4085966ceb5130a07c0a05a2c380b2","modified":1570773015787},{"_id":"themes/material-flow/source/less/_header.less","hash":"83f4fef0a16299b47bcefb16bd5896e436027498","modified":1570773015788},{"_id":"themes/material-flow/source/less/_main.less","hash":"6dba91f400478b6ff526a671a0a6e841c32e3732","modified":1570773015789},{"_id":"themes/material-flow/source/less/_normalize.less","hash":"08678839e42ca4fea4367a847f38464081a4d35b","modified":1570773015791},{"_id":"themes/material-flow/source/less/_pagination.less","hash":"616db8447e79e902bf7b207d1fe3c2fd6a4785b9","modified":1570773015793},{"_id":"themes/material-flow/source/less/_search.less","hash":"d3fdc7b15a80eb0b4204426c2351ea4464d167ff","modified":1570773015794},{"_id":"themes/material-flow/source/less/_side.less","hash":"196ca8a94a40b9bb6694e652bd449b7620a5d5f8","modified":1570773015796},{"_id":"themes/material-flow/source/less/_toc.less","hash":"0d46c18a05e7b26c416791b90a5bd3f4669c3268","modified":1570773015797},{"_id":"themes/material-flow/source/less/_widget.less","hash":"6fbeb4e44bcceeb7dcc4a12f1682672a2ee90596","modified":1570773015798},{"_id":"source/images/appdemo.png","hash":"9976f8682c05951a99d18f6b16d5e7c886ed236e","modified":1566876798505},{"_id":"source/about/index/about.jpg","hash":"5fe63645d5dc28c2e4eb42c6c4a7ff5641b111e3","modified":1570773015710},{"_id":"source/images/about.jpg","hash":"a97c9f444ad256f09c48bf94ffc84e0798dae790","modified":1570773015719},{"_id":"public/atom.xml","hash":"2cb380d421b5d3f608dcf9621f7eca7744c05ead","modified":1571304491979},{"_id":"public/content.json","hash":"e0c95c5425df9bd2cc196be8b9cb3ba2ec8cf7dd","modified":1571304491979},{"_id":"public/search.xml","hash":"64eff130efa1d59b6b98c8538d19a3b56a1dac38","modified":1571304492454},{"_id":"public/about/index.html","hash":"5167d0d97488b159836252c8eba4419abf60e4a8","modified":1571304492484},{"_id":"public/2019/10/12/microservices/minikube/index.html","hash":"f21a90ca58e9449659319356005e3eb040073316","modified":1571304492484},{"_id":"public/2014/10/31/kde4-config/index.html","hash":"b8b55222f8e996fd53402cdea3ab40e228920420","modified":1571304492491},{"_id":"public/2014/07/31/2014-multi-university-training-contest-4/index.html","hash":"1b09f8a761cf97f5801fcb6366e37769617bb479","modified":1571304492491},{"_id":"public/archives/index.html","hash":"57f3a3fc71daccf4e072345abcd42d22b3d133a6","modified":1571304492492},{"_id":"public/archives/page/2/index.html","hash":"07babe709c74c7c0c86836584153b30ccc8c50c8","modified":1571304492492},{"_id":"public/archives/page/3/index.html","hash":"fbf3903da4a5d6cb17432272543e1c9e2f3b9061","modified":1571304492492},{"_id":"public/archives/2014/page/2/index.html","hash":"19e77844d85b573c85c1b0e4942d41a61ca4fa76","modified":1571304492492},{"_id":"public/archives/2014/07/index.html","hash":"2501e81b18d5c93ff62b6860f89a93fea35de48a","modified":1571304492493},{"_id":"public/archives/2014/10/index.html","hash":"a567727456efce82bdd96c0108fde8ebe66bbf23","modified":1571304492493},{"_id":"public/archives/2014/11/index.html","hash":"16e8b7064d12200234c009125f20ae0307ae4fe8","modified":1571304492493},{"_id":"public/archives/2014/12/index.html","hash":"ddf038028a8846a321646de40e8606169d6709eb","modified":1571304492493},{"_id":"public/archives/2017/page/2/index.html","hash":"e2b09840e4ade5335af5b191dbe4ad744b098baf","modified":1571304492493},{"_id":"public/archives/2017/03/index.html","hash":"59d9c1f25e8857cd0fbc56b6bb453cb2158e3587","modified":1571304492493},{"_id":"public/categories/Linux/page/2/index.html","hash":"e2efcd26399635dc5be4bb8e58c7e50bb3721e8d","modified":1571304492494},{"_id":"public/categories/Cloud-Computing/index.html","hash":"70132ecf2c7adacc3f2af84cc2ba6f552e7ba508","modified":1571304492494},{"_id":"public/tags/只言片语/index.html","hash":"f5618a95b7f7d1334d0e3bb1009ae7f0a8c426da","modified":1571304492494},{"_id":"public/tags/algorithm/index.html","hash":"af7dd74637d7306b8109ba6789afa807f216d160","modified":1571304492494},{"_id":"public/tags/golang/index.html","hash":"cd90c00f018febaf4f1bf26c0f6516328408463e","modified":1571304492494},{"_id":"public/tags/centos/index.html","hash":"77ff08cbef82f86b41aa7a26928e2b331a484712","modified":1571304492494},{"_id":"public/tags/meow/index.html","hash":"a36f60396107310b576f98bdb76fd53e5a6ba20a","modified":1571304492494},{"_id":"public/tags/tmux/index.html","hash":"c81306c4e562b5b2b84d7d70b0bc05d684cfaa10","modified":1571304492495},{"_id":"public/tags/prezto/index.html","hash":"dc8002201e5f93b7e8d740fed6dfe714a2c58548","modified":1571304492495},{"_id":"public/tags/deepin/index.html","hash":"f403ac8c8fcd239f82eb449a21e96380887395c9","modified":1571304492495},{"_id":"public/tags/ppa/index.html","hash":"f0afae90e5c0f3d33c43297cc3f7575ed63d61c9","modified":1571304492495},{"_id":"public/tags/octotree/index.html","hash":"da88bfd41474bb1836b4f2e98a5f8ed9c24959c6","modified":1571304492495},{"_id":"public/tags/infinality-fonts/index.html","hash":"745c9a4a169455301f7899fde85d9ecfdeefd8e9","modified":1571304492495},{"_id":"public/tags/暴力/index.html","hash":"5fd3dd7ec84a181e98337976bf10243c04679fd4","modified":1571304492495},{"_id":"public/tags/图论/index.html","hash":"5fe620ef3ab652640195a7cf018e5a3d43f801f1","modified":1571304492495},{"_id":"public/tags/gnome/index.html","hash":"52e2922ebec230b48b1453bfba3c2a1817a3a2d1","modified":1571304492495},{"_id":"public/tags/i3wm/index.html","hash":"8898b05735a0e6ecc796a8dbe56d5d2b36769e2a","modified":1571304492495},{"_id":"public/tags/数论/index.html","hash":"f01f63caa17bcc1418939fc69b411ff4a8d34753","modified":1571304492496},{"_id":"public/tags/DE-WM/index.html","hash":"dd58eaea521dd4cfd161245f91cbe7f532a98e93","modified":1571304492496},{"_id":"public/2017/03/20/beautifull-i3/index.html","hash":"3537ef11c2ae99b402987710c15295516af7bceb","modified":1571304492496},{"_id":"public/2019/10/11/microservices/k8s-windows/index.html","hash":"6342b87d3fa793b76dcdfe71914d5a2db8c4827f","modified":1571304492496},{"_id":"public/2017/01/12/Kubernetes-&-Deepin-Settings@1-12/index.html","hash":"8960c7e009ec0622c0079e1da5f20acc4c5752a8","modified":1571304492496},{"_id":"public/2017/01/10/Basic Algorithms in Go/index.html","hash":"7568644592c00d931ed7e2f9bdd45405e9585240","modified":1571304492496},{"_id":"public/2017/01/04/Kubernetes部署@1-5/index.html","hash":"b2458e490efb15d79cd55e3852948da3d23bbe0a","modified":1571304492497},{"_id":"public/2017/01/04/CentOS2@1-4/index.html","hash":"f946ec618aed779b50e53ddf6f4af2398e546019","modified":1571304492497},{"_id":"public/2017/01/03/CentOS1@1-3/index.html","hash":"2599339bd9855db943da3afdbcef59009757e7f1","modified":1571304492497},{"_id":"public/2014/12/07/kde-to-mac/index.html","hash":"45aae202a34bfb69251d082f754b6b63b38e48ae","modified":1571304492497},{"_id":"public/2014/11/06/baylor6622-absurdistan-roads/index.html","hash":"9b2b15a1c507f5efdc8652850aeec74995d99bfd","modified":1571304492497},{"_id":"public/2014/11/05/intro-of-fft/index.html","hash":"53da03f4061b4390b3dc6389b38fa69564953553","modified":1571304492497},{"_id":"public/2014/10/19/acm-international-collegiate-programming-contest-asia-regional-contest-tokyo-problem-d-space-golf/index.html","hash":"ba3b293b2079e56ca95f49c0ca7b951c6b4dc3d8","modified":1571304492498},{"_id":"public/archives/2014/index.html","hash":"902e9efee914b15b02c75f68e2bc577a5e62544e","modified":1571304492499},{"_id":"public/archives/2017/index.html","hash":"22747f5133087f08b4978a18a620909f4c67e822","modified":1571304492499},{"_id":"public/archives/2017/01/index.html","hash":"dcf52046793870dc10b4df3a63a43627955ea65d","modified":1571304492499},{"_id":"public/archives/2019/index.html","hash":"8c3474ed38303a33a9c3b57acb88409060fa9775","modified":1571304492499},{"_id":"public/archives/2019/10/index.html","hash":"d9374cc18ce3da0612819cc6714b81b5b68bf369","modified":1571304492499},{"_id":"public/categories/ACM/index.html","hash":"4b9c605fe190683b138c91c49126df934e637b3c","modified":1571304492499},{"_id":"public/categories/Linux/index.html","hash":"55ed30b24f6fe309c493bf946441a01e9418c3b9","modified":1571304492499},{"_id":"public/categories/Service-Mesh/index.html","hash":"f6b9dabcfeee9456ca58c9b67f9dd37c54bec49c","modified":1571304492499},{"_id":"public/categories/Microservice/index.html","hash":"407305243861c14d6e315c626c8fb521dc05896c","modified":1571304492500},{"_id":"public/index.html","hash":"bce354c3194b63760255f204edf972798670cdb8","modified":1571304492500},{"_id":"public/page/2/index.html","hash":"d9a5afbe9153e633032bb7f85d9dfeb1ba517ee8","modified":1571304492500},{"_id":"public/page/3/index.html","hash":"dae596038bb60b32526b0cb94bc927d44dd94ce7","modified":1571304492500},{"_id":"public/tags/docker/index.html","hash":"a8a5a28f3cc4d22ae1423db635b2c285c2a71d66","modified":1571304492500},{"_id":"public/tags/kubernetes/index.html","hash":"e8ee5c9bdcb60ed6dfc6e805babdc0e66eb60d00","modified":1571304492500},{"_id":"public/tags/k8s/index.html","hash":"1338e4f80033c4b4bd5152363af05ba48f22c721","modified":1571304492500},{"_id":"public/2019/10/17/servicemesh/istio-and-springcloud/index.html","hash":"cb42649eb25f1d9fa796b1d6f4b829432a2f0a99","modified":1571304492521},{"_id":"public/tags/istio/index.html","hash":"f2208b4a319ac0eb5bb591730a32e2b77101cf49","modified":1571304492529},{"_id":"public/images/back_favicon.ico","hash":"57e19c18bfe2f77a1bc3229dc104114dc171ce72","modified":1571304492529},{"_id":"public/images/codey.png","hash":"82ad7516faf58d44e85ab5aa7449a65cb7aced51","modified":1571304492529},{"_id":"public/images/appdemo.png","hash":"9976f8682c05951a99d18f6b16d5e7c886ed236e","modified":1571304492611},{"_id":"source/_posts/istio-and-springcloud.md","hash":"c8b59027c1c509d7a84d55a22efe4fd877ae241f","modified":1571304228109},{"_id":"source/_posts/k8s-windows.md","hash":"52ad9ec415c704eaaff66c4f11e14c1f12b2e8b4","modified":1571123754653},{"_id":"source/_posts/minikube.md","hash":"279948d81e0fe39d6c47a53b6a85427c43acb91b","modified":1571123414012},{"_id":"source/_posts/1571643031013.md","hash":"d2541bb87be1afbb5ee21c87cac8b97d98dba974","modified":1571643031016}],"Category":[{"name":"ACM","_id":"ck1uam0pt0003s8qqzpser6nk"},{"name":"Linux","_id":"ck1uam0qf000ds8qqbu5xd7ul"},{"name":"Cloud Computing","_id":"ck1uam0qr000js8qqoouzfivn"},{"name":"Service-Mesh","_id":"ck1uam0te0024s8qqgzm1pfyb"},{"name":"Microservice","_id":"ck1uam0tg0026s8qqqyvc61il"}],"Data":[],"Page":[{"title":"关于我","date":"2016-11-23T10:11:44.000Z","_content":"\n一个热衷于造轮子的少年，喜欢：\n- Python\n- Javascript\n- Go\n\n同时我也喜欢：\n- Doctor Who\n- Chopin && Rachmaninov\n\n我的联系方式：\n\n- Telegram:  `@kevinsfork`\n- Github：   [stkevintan](https://github.com/stkevintan)\n- Twttier:   [Kevinsfork](https://twitter.com/kevinsfork)\n- Mail:      <stkevintan@zju.edu.cn>","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2016-11-23 18:11:44\n---\n\n一个热衷于造轮子的少年，喜欢：\n- Python\n- Javascript\n- Go\n\n同时我也喜欢：\n- Doctor Who\n- Chopin && Rachmaninov\n\n我的联系方式：\n\n- Telegram:  `@kevinsfork`\n- Github：   [stkevintan](https://github.com/stkevintan)\n- Twttier:   [Kevinsfork](https://twitter.com/kevinsfork)\n- Mail:      <stkevintan@zju.edu.cn>","updated":"2019-10-11T05:50:15.707Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck1uam0pi0000s8qqpnam70xh","content":"<p>一个热衷于造轮子的少年，喜欢：</p>\n<ul>\n<li>Python</li>\n<li>Javascript</li>\n<li>Go</li>\n</ul>\n<p>同时我也喜欢：</p>\n<ul>\n<li>Doctor Who</li>\n<li>Chopin &amp;&amp; Rachmaninov</li>\n</ul>\n<p>我的联系方式：</p>\n<ul>\n<li>Telegram:  <code>@kevinsfork</code></li>\n<li>Github：   <a href=\"https://github.com/stkevintan\" target=\"_blank\" rel=\"noopener\">stkevintan</a></li>\n<li>Twttier:   <a href=\"https://twitter.com/kevinsfork\" target=\"_blank\" rel=\"noopener\">Kevinsfork</a></li>\n<li>Mail:      <a href=\"mailto:&#115;&#116;&#107;&#101;&#x76;&#105;&#x6e;&#116;&#x61;&#110;&#x40;&#122;&#106;&#x75;&#x2e;&#101;&#x64;&#117;&#x2e;&#x63;&#x6e;\" target=\"_blank\" rel=\"noopener\">&#115;&#116;&#107;&#101;&#x76;&#105;&#x6e;&#116;&#x61;&#110;&#x40;&#122;&#106;&#x75;&#x2e;&#101;&#x64;&#117;&#x2e;&#x63;&#x6e;</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>一个热衷于造轮子的少年，喜欢：</p>\n<ul>\n<li>Python</li>\n<li>Javascript</li>\n<li>Go</li>\n</ul>\n<p>同时我也喜欢：</p>\n<ul>\n<li>Doctor Who</li>\n<li>Chopin &amp;&amp; Rachmaninov</li>\n</ul>\n<p>我的联系方式：</p>\n<ul>\n<li>Telegram:  <code>@kevinsfork</code></li>\n<li>Github：   <a href=\"https://github.com/stkevintan\" target=\"_blank\" rel=\"noopener\">stkevintan</a></li>\n<li>Twttier:   <a href=\"https://twitter.com/kevinsfork\" target=\"_blank\" rel=\"noopener\">Kevinsfork</a></li>\n<li>Mail:      <a href=\"mailto:&#115;&#116;&#107;&#101;&#x76;&#105;&#x6e;&#116;&#x61;&#110;&#x40;&#122;&#106;&#x75;&#x2e;&#101;&#x64;&#117;&#x2e;&#x63;&#x6e;\" target=\"_blank\" rel=\"noopener\">&#115;&#116;&#107;&#101;&#x76;&#105;&#x6e;&#116;&#x61;&#110;&#x40;&#122;&#106;&#x75;&#x2e;&#101;&#x64;&#117;&#x2e;&#x63;&#x6e;</a></li>\n</ul>\n"}],"Post":[{"title":"2014 Multi-University Training Contest 4","id":"36","date":"2014-07-31T11:09:32.000Z","_content":"心情就像倒数第二楼那样。\n\nCLJ，我也保证不打死你……\n\nPS:最后一楼朱大神还暴露了。","source":"_posts/2014-multi-university-training-contest-4.md","raw":"title: 2014 Multi-University Training Contest 4\ncategories:\n  - ACM\nid: 36\ndate: 2014-07-31 19:09:32\ntags: 只言片语\n---\n心情就像倒数第二楼那样。\n\nCLJ，我也保证不打死你……\n\nPS:最后一楼朱大神还暴露了。","slug":"2014-multi-university-training-contest-4","published":1,"updated":"2019-10-11T05:50:15.624Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1uam0pk0001s8qqvfxjfma8","content":"<p>心情就像倒数第二楼那样。</p>\n<p>CLJ，我也保证不打死你……</p>\n<p>PS:最后一楼朱大神还暴露了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>心情就像倒数第二楼那样。</p>\n<p>CLJ，我也保证不打死你……</p>\n<p>PS:最后一楼朱大神还暴露了。</p>\n"},{"title":"Basic Algorithms in Go","date":"2017-01-09T16:00:00.000Z","grammar_cjkRuby":true,"_content":"最近学Go，感觉挺不错的。闲来无事用它写了几种常用的基础算法。\n## 快排\n思想很简单，实现起来为了方便每次以left作为基准，也可以使用BFS来节省递归栈：\n```go\n// QuickSort returns a sorted slice\nfunc QuickSort(arr []int) {\n\tif len(arr) <= 1 {\n\t\treturn\n\t}\n\tleft, right := 0, len(arr)-1\n\tfor left < right {\n\t\tif arr[left+1] > arr[left] {\n\t\t\tarr[left+1], arr[right] = arr[right], arr[left+1]\n\t\t\tright--\n\t\t} else {\n\t\t\tarr[left+1], arr[left] = arr[left], arr[left+1]\n\t\t\tleft++\n\t\t}\n\t}\n\tQuickSort(arr[:left])\n\tQuickSort(arr[left+1:])\n}\n```\n<!--more-->\n## 最短路\n最短路核心思想就是Relax操作。效率高的单源最短路有下面两种算法：\n1. Dijikstra，不能处理负权路,但是时间复杂度比较稳定.\n2. SPFA是我比较喜欢的一种算法，可以判断负权路。正常情况的时间复杂度为`O(kE)`  其中`k<<V`；最好的情况即一次BFS，时间复杂度为 `O(E)`，然而对于某些精心构造的图，复杂度可以达到Bellman-ford级别：`O(VE)`。\n下面构图使用的是邻接表（适用于稀疏图），也可以用邻接矩阵（适用于稠密图）。\n```go\n// adjacency list definition\ntype edge struct {\n\tv, w int\n\tnext *edge\n}\n\ntype Graph struct {\n\thead []*edge\n\tn, m int\n}\n\nfunc (G *Graph) init(n, m int) {\n\tG.n, G.m = n, m\n\tG.head = make([]*edge, n)\n}\n\nfunc (G *Graph) add(u, v, w int) {\n\tG.head[u] = &edge{\n\t\tv:    v,\n\t\tw:    w,\n\t\tnext: G.head[u],\n\t}\n}\n\n// SPFA returns the shortest path from begin to end\n// begin: the begin node number\n// end: the end node number\nfunc (G *Graph) SPFA(begin, end int) int {\n\tvisit := make([]bool, G.n)\n\tdist := make([]int, G.n)\n\tQ := make([]int, 0)\n\tfor i := 0; i < G.n; i++ {\n\t\tdist[i] = -1\n\t}\n\tdist[begin] = 0\n\tQ = append(Q, begin)\n\tvisit[begin] = true\n\tfor len(Q) != 0 {\n\t\tu := Q[0]\n\t\tfor e := G.head[u]; e != nil; e = e.next {\n\t\t\tif dist[e.v] == -1 || dist[e.v] > dist[u]+e.w {\n\t\t\t\tdist[e.v] = dist[u] + e.w\n\t\t\t\tif !visit[e.v] {\n\t\t\t\t\tQ = append(Q, e.v)\n\t\t\t\t\tvisit[e.v] = true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// pop the front node\n\t\tQ = Q[1:]\n\t\tvisit[u] = false\n\t}\n\treturn dist[end]\n}\n```\n## KMP\n字符串匹配经典算法。关键在于维护一个这样的关系：`x[i-next[i]...i-1]=x[0...next[i]-1]`\n```go\ntype Kmp struct {\n\tpattern string\n\tnext    []int\n}\n\n// x[i-p...i-1]=x[0...p-1]\nfunc (K *Kmp) getNext() {\n\tK.next = make([]int, len(K.pattern)+1)\n\tK.next[0] = -1\n\ti := 0\n\tp := -1\n\tfor i < len(K.pattern) {\n\t\tfor p != -1 && K.pattern[i] != K.pattern[p] {\n\t\t\tp = K.next[p]\n\t\t}\n\t\tp++\n\t\ti++\n\t\tif i < len(K.pattern) && K.pattern[i] == K.pattern[p] {\n\t\t\tK.next[i] = K.next[p]\n\t\t} else {\n\t\t\tK.next[i] = p\n\t\t}\n\t}\n}\n\nfunc (K *Kmp) match(matcher string) int {\n\tret := 0\n\tp := 0\n\ti := 0\n\tfor i < len(matcher) {\n\t\tfor p != -1 && matcher[i] != K.pattern[p] {\n\t\t\tp = K.next[p]\n\t\t}\n\t\ti++\n\t\tp++\n\t\tif p >= len(K.pattern) {\n\t\t\tret++\n\t\t\tp = K.next[p]\n\t\t}\n\t}\n\treturn ret\n}\n```\n\n\n___To Be Continue...___","source":"_posts/Basic Algorithms in Go.md","raw":"---\ntitle: Basic Algorithms in Go\ntags: [algorithm,golang]\ncategories: [ACM]\ndate: 2017-1-10\ngrammar_cjkRuby: true\n---\n最近学Go，感觉挺不错的。闲来无事用它写了几种常用的基础算法。\n## 快排\n思想很简单，实现起来为了方便每次以left作为基准，也可以使用BFS来节省递归栈：\n```go\n// QuickSort returns a sorted slice\nfunc QuickSort(arr []int) {\n\tif len(arr) <= 1 {\n\t\treturn\n\t}\n\tleft, right := 0, len(arr)-1\n\tfor left < right {\n\t\tif arr[left+1] > arr[left] {\n\t\t\tarr[left+1], arr[right] = arr[right], arr[left+1]\n\t\t\tright--\n\t\t} else {\n\t\t\tarr[left+1], arr[left] = arr[left], arr[left+1]\n\t\t\tleft++\n\t\t}\n\t}\n\tQuickSort(arr[:left])\n\tQuickSort(arr[left+1:])\n}\n```\n<!--more-->\n## 最短路\n最短路核心思想就是Relax操作。效率高的单源最短路有下面两种算法：\n1. Dijikstra，不能处理负权路,但是时间复杂度比较稳定.\n2. SPFA是我比较喜欢的一种算法，可以判断负权路。正常情况的时间复杂度为`O(kE)`  其中`k<<V`；最好的情况即一次BFS，时间复杂度为 `O(E)`，然而对于某些精心构造的图，复杂度可以达到Bellman-ford级别：`O(VE)`。\n下面构图使用的是邻接表（适用于稀疏图），也可以用邻接矩阵（适用于稠密图）。\n```go\n// adjacency list definition\ntype edge struct {\n\tv, w int\n\tnext *edge\n}\n\ntype Graph struct {\n\thead []*edge\n\tn, m int\n}\n\nfunc (G *Graph) init(n, m int) {\n\tG.n, G.m = n, m\n\tG.head = make([]*edge, n)\n}\n\nfunc (G *Graph) add(u, v, w int) {\n\tG.head[u] = &edge{\n\t\tv:    v,\n\t\tw:    w,\n\t\tnext: G.head[u],\n\t}\n}\n\n// SPFA returns the shortest path from begin to end\n// begin: the begin node number\n// end: the end node number\nfunc (G *Graph) SPFA(begin, end int) int {\n\tvisit := make([]bool, G.n)\n\tdist := make([]int, G.n)\n\tQ := make([]int, 0)\n\tfor i := 0; i < G.n; i++ {\n\t\tdist[i] = -1\n\t}\n\tdist[begin] = 0\n\tQ = append(Q, begin)\n\tvisit[begin] = true\n\tfor len(Q) != 0 {\n\t\tu := Q[0]\n\t\tfor e := G.head[u]; e != nil; e = e.next {\n\t\t\tif dist[e.v] == -1 || dist[e.v] > dist[u]+e.w {\n\t\t\t\tdist[e.v] = dist[u] + e.w\n\t\t\t\tif !visit[e.v] {\n\t\t\t\t\tQ = append(Q, e.v)\n\t\t\t\t\tvisit[e.v] = true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// pop the front node\n\t\tQ = Q[1:]\n\t\tvisit[u] = false\n\t}\n\treturn dist[end]\n}\n```\n## KMP\n字符串匹配经典算法。关键在于维护一个这样的关系：`x[i-next[i]...i-1]=x[0...next[i]-1]`\n```go\ntype Kmp struct {\n\tpattern string\n\tnext    []int\n}\n\n// x[i-p...i-1]=x[0...p-1]\nfunc (K *Kmp) getNext() {\n\tK.next = make([]int, len(K.pattern)+1)\n\tK.next[0] = -1\n\ti := 0\n\tp := -1\n\tfor i < len(K.pattern) {\n\t\tfor p != -1 && K.pattern[i] != K.pattern[p] {\n\t\t\tp = K.next[p]\n\t\t}\n\t\tp++\n\t\ti++\n\t\tif i < len(K.pattern) && K.pattern[i] == K.pattern[p] {\n\t\t\tK.next[i] = K.next[p]\n\t\t} else {\n\t\t\tK.next[i] = p\n\t\t}\n\t}\n}\n\nfunc (K *Kmp) match(matcher string) int {\n\tret := 0\n\tp := 0\n\ti := 0\n\tfor i < len(matcher) {\n\t\tfor p != -1 && matcher[i] != K.pattern[p] {\n\t\t\tp = K.next[p]\n\t\t}\n\t\ti++\n\t\tp++\n\t\tif p >= len(K.pattern) {\n\t\t\tret++\n\t\t\tp = K.next[p]\n\t\t}\n\t}\n\treturn ret\n}\n```\n\n\n___To Be Continue...___","slug":"Basic Algorithms in Go","published":1,"updated":"2019-10-11T05:50:15.630Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1uam0pq0002s8qqqyp2c595","content":"<p>最近学Go，感觉挺不错的。闲来无事用它写了几种常用的基础算法。</p>\n<h2 id=\"快排\"><a href=\"#快排\" class=\"headerlink\" title=\"快排\"></a>快排</h2><p>思想很简单，实现起来为了方便每次以left作为基准，也可以使用BFS来节省递归栈：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// QuickSort returns a sorted slice</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">QuickSort</span><span class=\"params\">(arr []<span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(arr) &lt;= <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tleft, right := <span class=\"number\">0</span>, <span class=\"built_in\">len</span>(arr)<span class=\"number\">-1</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> left &lt; right &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> arr[left+<span class=\"number\">1</span>] &gt; arr[left] &#123;</span><br><span class=\"line\">\t\t\tarr[left+<span class=\"number\">1</span>], arr[right] = arr[right], arr[left+<span class=\"number\">1</span>]</span><br><span class=\"line\">\t\t\tright--</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tarr[left+<span class=\"number\">1</span>], arr[left] = arr[left], arr[left+<span class=\"number\">1</span>]</span><br><span class=\"line\">\t\t\tleft++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tQuickSort(arr[:left])</span><br><span class=\"line\">\tQuickSort(arr[left+<span class=\"number\">1</span>:])</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h2 id=\"最短路\"><a href=\"#最短路\" class=\"headerlink\" title=\"最短路\"></a>最短路</h2><p>最短路核心思想就是Relax操作。效率高的单源最短路有下面两种算法：</p>\n<ol>\n<li>Dijikstra，不能处理负权路,但是时间复杂度比较稳定.</li>\n<li>SPFA是我比较喜欢的一种算法，可以判断负权路。正常情况的时间复杂度为<code>O(kE)</code>  其中<code>k&lt;&lt;V</code>；最好的情况即一次BFS，时间复杂度为 <code>O(E)</code>，然而对于某些精心构造的图，复杂度可以达到Bellman-ford级别：<code>O(VE)</code>。<br>下面构图使用的是邻接表（适用于稀疏图），也可以用邻接矩阵（适用于稠密图）。<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// adjacency list definition</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> edge <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tv, w <span class=\"keyword\">int</span></span><br><span class=\"line\">\tnext *edge</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Graph <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\thead []*edge</span><br><span class=\"line\">\tn, m <span class=\"keyword\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(G *Graph)</span> <span class=\"title\">init</span><span class=\"params\">(n, m <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tG.n, G.m = n, m</span><br><span class=\"line\">\tG.head = <span class=\"built_in\">make</span>([]*edge, n)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(G *Graph)</span> <span class=\"title\">add</span><span class=\"params\">(u, v, w <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tG.head[u] = &amp;edge&#123;</span><br><span class=\"line\">\t\tv:    v,</span><br><span class=\"line\">\t\tw:    w,</span><br><span class=\"line\">\t\tnext: G.head[u],</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// SPFA returns the shortest path from begin to end</span></span><br><span class=\"line\"><span class=\"comment\">// begin: the begin node number</span></span><br><span class=\"line\"><span class=\"comment\">// end: the end node number</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(G *Graph)</span> <span class=\"title\">SPFA</span><span class=\"params\">(begin, end <span class=\"keyword\">int</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">\tvisit := <span class=\"built_in\">make</span>([]<span class=\"keyword\">bool</span>, G.n)</span><br><span class=\"line\">\tdist := <span class=\"built_in\">make</span>([]<span class=\"keyword\">int</span>, G.n)</span><br><span class=\"line\">\tQ := <span class=\"built_in\">make</span>([]<span class=\"keyword\">int</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; G.n; i++ &#123;</span><br><span class=\"line\">\t\tdist[i] = <span class=\"number\">-1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdist[begin] = <span class=\"number\">0</span></span><br><span class=\"line\">\tQ = <span class=\"built_in\">append</span>(Q, begin)</span><br><span class=\"line\">\tvisit[begin] = <span class=\"literal\">true</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> <span class=\"built_in\">len</span>(Q) != <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\tu := Q[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> e := G.head[u]; e != <span class=\"literal\">nil</span>; e = e.next &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> dist[e.v] == <span class=\"number\">-1</span> || dist[e.v] &gt; dist[u]+e.w &#123;</span><br><span class=\"line\">\t\t\t\tdist[e.v] = dist[u] + e.w</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> !visit[e.v] &#123;</span><br><span class=\"line\">\t\t\t\t\tQ = <span class=\"built_in\">append</span>(Q, e.v)</span><br><span class=\"line\">\t\t\t\t\tvisit[e.v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// pop the front node</span></span><br><span class=\"line\">\t\tQ = Q[<span class=\"number\">1</span>:]</span><br><span class=\"line\">\t\tvisit[u] = <span class=\"literal\">false</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dist[end]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"KMP\"><a href=\"#KMP\" class=\"headerlink\" title=\"KMP\"></a>KMP</h2><p>字符串匹配经典算法。关键在于维护一个这样的关系：<code>x[i-next[i]...i-1]=x[0...next[i]-1]</code><br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Kmp <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tpattern <span class=\"keyword\">string</span></span><br><span class=\"line\">\tnext    []<span class=\"keyword\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// x[i-p...i-1]=x[0...p-1]</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(K *Kmp)</span> <span class=\"title\">getNext</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tK.next = <span class=\"built_in\">make</span>([]<span class=\"keyword\">int</span>, <span class=\"built_in\">len</span>(K.pattern)+<span class=\"number\">1</span>)</span><br><span class=\"line\">\tK.next[<span class=\"number\">0</span>] = <span class=\"number\">-1</span></span><br><span class=\"line\">\ti := <span class=\"number\">0</span></span><br><span class=\"line\">\tp := <span class=\"number\">-1</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i &lt; <span class=\"built_in\">len</span>(K.pattern) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> p != <span class=\"number\">-1</span> &amp;&amp; K.pattern[i] != K.pattern[p] &#123;</span><br><span class=\"line\">\t\t\tp = K.next[p]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tp++</span><br><span class=\"line\">\t\ti++</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i &lt; <span class=\"built_in\">len</span>(K.pattern) &amp;&amp; K.pattern[i] == K.pattern[p] &#123;</span><br><span class=\"line\">\t\t\tK.next[i] = K.next[p]</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tK.next[i] = p</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(K *Kmp)</span> <span class=\"title\">match</span><span class=\"params\">(matcher <span class=\"keyword\">string</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">\tret := <span class=\"number\">0</span></span><br><span class=\"line\">\tp := <span class=\"number\">0</span></span><br><span class=\"line\">\ti := <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i &lt; <span class=\"built_in\">len</span>(matcher) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> p != <span class=\"number\">-1</span> &amp;&amp; matcher[i] != K.pattern[p] &#123;</span><br><span class=\"line\">\t\t\tp = K.next[p]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ti++</span><br><span class=\"line\">\t\tp++</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> p &gt;= <span class=\"built_in\">len</span>(K.pattern) &#123;</span><br><span class=\"line\">\t\t\tret++</span><br><span class=\"line\">\t\t\tp = K.next[p]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>To Be Continue…</em></strong></p>\n","site":{"data":{}},"excerpt":"<p>最近学Go，感觉挺不错的。闲来无事用它写了几种常用的基础算法。</p>\n<h2 id=\"快排\"><a href=\"#快排\" class=\"headerlink\" title=\"快排\"></a>快排</h2><p>思想很简单，实现起来为了方便每次以left作为基准，也可以使用BFS来节省递归栈：<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// QuickSort returns a sorted slice</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">QuickSort</span><span class=\"params\">(arr []<span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(arr) &lt;= <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tleft, right := <span class=\"number\">0</span>, <span class=\"built_in\">len</span>(arr)<span class=\"number\">-1</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> left &lt; right &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> arr[left+<span class=\"number\">1</span>] &gt; arr[left] &#123;</span><br><span class=\"line\">\t\t\tarr[left+<span class=\"number\">1</span>], arr[right] = arr[right], arr[left+<span class=\"number\">1</span>]</span><br><span class=\"line\">\t\t\tright--</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tarr[left+<span class=\"number\">1</span>], arr[left] = arr[left], arr[left+<span class=\"number\">1</span>]</span><br><span class=\"line\">\t\t\tleft++</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tQuickSort(arr[:left])</span><br><span class=\"line\">\tQuickSort(arr[left+<span class=\"number\">1</span>:])</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>","more":"<h2 id=\"最短路\"><a href=\"#最短路\" class=\"headerlink\" title=\"最短路\"></a>最短路</h2><p>最短路核心思想就是Relax操作。效率高的单源最短路有下面两种算法：</p>\n<ol>\n<li>Dijikstra，不能处理负权路,但是时间复杂度比较稳定.</li>\n<li>SPFA是我比较喜欢的一种算法，可以判断负权路。正常情况的时间复杂度为<code>O(kE)</code>  其中<code>k&lt;&lt;V</code>；最好的情况即一次BFS，时间复杂度为 <code>O(E)</code>，然而对于某些精心构造的图，复杂度可以达到Bellman-ford级别：<code>O(VE)</code>。<br>下面构图使用的是邻接表（适用于稀疏图），也可以用邻接矩阵（适用于稠密图）。<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// adjacency list definition</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> edge <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tv, w <span class=\"keyword\">int</span></span><br><span class=\"line\">\tnext *edge</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Graph <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\thead []*edge</span><br><span class=\"line\">\tn, m <span class=\"keyword\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(G *Graph)</span> <span class=\"title\">init</span><span class=\"params\">(n, m <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tG.n, G.m = n, m</span><br><span class=\"line\">\tG.head = <span class=\"built_in\">make</span>([]*edge, n)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(G *Graph)</span> <span class=\"title\">add</span><span class=\"params\">(u, v, w <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">\tG.head[u] = &amp;edge&#123;</span><br><span class=\"line\">\t\tv:    v,</span><br><span class=\"line\">\t\tw:    w,</span><br><span class=\"line\">\t\tnext: G.head[u],</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// SPFA returns the shortest path from begin to end</span></span><br><span class=\"line\"><span class=\"comment\">// begin: the begin node number</span></span><br><span class=\"line\"><span class=\"comment\">// end: the end node number</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(G *Graph)</span> <span class=\"title\">SPFA</span><span class=\"params\">(begin, end <span class=\"keyword\">int</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">\tvisit := <span class=\"built_in\">make</span>([]<span class=\"keyword\">bool</span>, G.n)</span><br><span class=\"line\">\tdist := <span class=\"built_in\">make</span>([]<span class=\"keyword\">int</span>, G.n)</span><br><span class=\"line\">\tQ := <span class=\"built_in\">make</span>([]<span class=\"keyword\">int</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; G.n; i++ &#123;</span><br><span class=\"line\">\t\tdist[i] = <span class=\"number\">-1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdist[begin] = <span class=\"number\">0</span></span><br><span class=\"line\">\tQ = <span class=\"built_in\">append</span>(Q, begin)</span><br><span class=\"line\">\tvisit[begin] = <span class=\"literal\">true</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> <span class=\"built_in\">len</span>(Q) != <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\tu := Q[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> e := G.head[u]; e != <span class=\"literal\">nil</span>; e = e.next &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> dist[e.v] == <span class=\"number\">-1</span> || dist[e.v] &gt; dist[u]+e.w &#123;</span><br><span class=\"line\">\t\t\t\tdist[e.v] = dist[u] + e.w</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> !visit[e.v] &#123;</span><br><span class=\"line\">\t\t\t\t\tQ = <span class=\"built_in\">append</span>(Q, e.v)</span><br><span class=\"line\">\t\t\t\t\tvisit[e.v] = <span class=\"literal\">true</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// pop the front node</span></span><br><span class=\"line\">\t\tQ = Q[<span class=\"number\">1</span>:]</span><br><span class=\"line\">\t\tvisit[u] = <span class=\"literal\">false</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dist[end]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"KMP\"><a href=\"#KMP\" class=\"headerlink\" title=\"KMP\"></a>KMP</h2><p>字符串匹配经典算法。关键在于维护一个这样的关系：<code>x[i-next[i]...i-1]=x[0...next[i]-1]</code><br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> Kmp <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tpattern <span class=\"keyword\">string</span></span><br><span class=\"line\">\tnext    []<span class=\"keyword\">int</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// x[i-p...i-1]=x[0...p-1]</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(K *Kmp)</span> <span class=\"title\">getNext</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tK.next = <span class=\"built_in\">make</span>([]<span class=\"keyword\">int</span>, <span class=\"built_in\">len</span>(K.pattern)+<span class=\"number\">1</span>)</span><br><span class=\"line\">\tK.next[<span class=\"number\">0</span>] = <span class=\"number\">-1</span></span><br><span class=\"line\">\ti := <span class=\"number\">0</span></span><br><span class=\"line\">\tp := <span class=\"number\">-1</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i &lt; <span class=\"built_in\">len</span>(K.pattern) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> p != <span class=\"number\">-1</span> &amp;&amp; K.pattern[i] != K.pattern[p] &#123;</span><br><span class=\"line\">\t\t\tp = K.next[p]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tp++</span><br><span class=\"line\">\t\ti++</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> i &lt; <span class=\"built_in\">len</span>(K.pattern) &amp;&amp; K.pattern[i] == K.pattern[p] &#123;</span><br><span class=\"line\">\t\t\tK.next[i] = K.next[p]</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tK.next[i] = p</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(K *Kmp)</span> <span class=\"title\">match</span><span class=\"params\">(matcher <span class=\"keyword\">string</span>)</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">\tret := <span class=\"number\">0</span></span><br><span class=\"line\">\tp := <span class=\"number\">0</span></span><br><span class=\"line\">\ti := <span class=\"number\">0</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i &lt; <span class=\"built_in\">len</span>(matcher) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> p != <span class=\"number\">-1</span> &amp;&amp; matcher[i] != K.pattern[p] &#123;</span><br><span class=\"line\">\t\t\tp = K.next[p]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ti++</span><br><span class=\"line\">\t\tp++</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> p &gt;= <span class=\"built_in\">len</span>(K.pattern) &#123;</span><br><span class=\"line\">\t\t\tret++</span><br><span class=\"line\">\t\t\tp = K.next[p]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>To Be Continue…</em></strong></p>"},{"title":"Centos初始化","date":"2017-01-03T08:21:43.000Z","_content":"\n\n\n## 换源\n\n### 备份\n\n```bash\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n```\n\n### 写入国内源(centos 7)\n\nustc： https://lug.ustc.edu.cn/wiki/mirrors/help/centos\n\n<!-- more -->\n\n163：\n\n``` \n# CentOS-Base.repo\n#\n# The mirror system uses the connecting IP address of the client and the\n# update status of each mirror to pick mirrors that are updated to and\n# geographically close to the client.  You should use this for CentOS updates\n# unless you are manually picking other mirrors.\n#\n# If the mirrorlist= does not work for you, as a fall back you can try the \n# remarked out baseurl= line instead.\n#\n#\n[base]\nname=CentOS-$releasever - Base - 163.com\n#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=os\nbaseurl=http://mirrors.163.com/centos/$releasever/os/$basearch/\ngpgcheck=1\ngpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7\n\n#released updates\n[updates]\nname=CentOS-$releasever - Updates - 163.com\n#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=updates\nbaseurl=http://mirrors.163.com/centos/$releasever/updates/$basearch/\ngpgcheck=1\ngpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7\n\n#additional packages that may be useful\n[extras]\nname=CentOS-$releasever - Extras - 163.com\n#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=extras\nbaseurl=http://mirrors.163.com/centos/$releasever/extras/$basearch/\ngpgcheck=1\ngpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7\n\n#additional packages that extend functionality of existing packages\n[centosplus]\nname=CentOS-$releasever - Plus - 163.com\nbaseurl=http://mirrors.163.com/centos/$releasever/centosplus/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7\n```\n\n\n\n### 更新\n\n```bash\nyum clean all\nyum makecache\n```\n\n\n\n## 设置代理\n\n```bash\n#! /bin/bash\n# Author: Kevin Tan\n# Update-Date: 2017-1-14\nURL=$1\nACTION=('\\nSet' '\\nDel')\nmode=1\nif [ -z $URL ]; then\n    echo '[Warning]: URL parameter is empty, default action change to remove'\n    mode=2\nfi\nset_proxy(){\n  file=$1;prefix=$2;value=\"$2=$3\";\n  echo \"Set \\\"$value\\\" to \\\"$file\\\"\"\n  if [ -e \"$file\" ]; then\n    if grep -q \"^\\s*$prefix\" \"$file\"; then\n        sed -i \"s#^\\s*$prefix=.*#$value#g\" $file\n    else\n        echo $value >> $file\n    fi\n  fi\n}\n\ndel_proxy(){\n    file=$1;prefix=$2\n    echo \"Del \\\"$prefix\\\" from \\\"$file\\\"\"\n    if [ -e \"$file\" ]; then\n        sed -i \"/^\\s*$prefix=.*/d\" $file\n    fi\n    eval $prefix=\"\"\n}\n\nSHELL_NAME=`ps -p $$ | awk 'NR==2 {print $4}'`\necho 'Current shell is '$SHELL_NAME\nsource_file(){\n    ## bash\n    if [ \"$SHELL_NAME\" = \"bash\" ]; then\n        source $HOME'/.bashrc'\n    fi\n    ## zsh\n    if [ \"$SHELL_NAME\" = \"zsh\" ]; then\n        source $HOME'/.zshrc'\n    fi\n}\n\n# yum\necho -n ${ACTION[$mode]}' the yum? (y/n/r) ';read F\nif [ $F = 'y' ] && [ $mode -eq 1 ]; then\n    set_proxy '/etc/yum.conf' 'proxy' $URL\nelif [ $F = 'r' ] || ([ $F = 'y' ] && [ $mode -eq 2 ]); then\n    del_proxy '/etc/yum.conf' 'proxy'\nfi\n\n# environment\necho -n ${ACTION[$mode]}' the environment var?(y/n/r) ';read F\nshell_names=(zsh bash)\nif [ $F = 'y' ] && [ $mode -eq 1 ]; then\n    for name in ${shell_names[@]}; do\n        set_proxy \"$HOME/.${name}rc\" \"export http_proxy\" $URL\n        set_proxy \"$HOME/.${name}rc\" \"export https_proxy\" $URL\n    done\n    source_file\nelif [ $F = 'r' ] || ([ $F = 'y' ] && [ $mode -eq 2 ]); then\n    for name in ${shell_names[@]}; do\n        del_proxy \"$HOME/.${name}rc\" \"export http_proxy\"\n        del_proxy \"$HOME/.${name}rc\" \"export https_proxy\"\n    done\nfi\n\n#curl\necho -n ${ACTION[$mode]}' the curl proxy alias?(y/n/r) ';read F\nshell_names=(zsh bash)\nif [ $F = 'y' ] && [ $mode -eq 1 ]; then\n    for name in ${shell_names[@]}; do\n    \tset_proxy \"$HOME/.${name}rc\" \"alias curl\" \"\\\"curl -x $URL\\\"\"   \n    done\n    source_file\nelif [ $F = 'r' ] || ([ $F = 'y' ] && [ $mode -eq 2 ]); then\n    for name in ${shell_names[@]}; do\n        del_proxy \"$HOME/.${name}rc\" \"alias curl\"\n        unalias curl\n    done\nfi\n\n# kubernetes\necho -n ${ACTION[$mode]}' kube environment var?(y/n/r) ';read F\nif [ $F = 'y' ] && [ $mode -eq 1 ]; then\n    for name in ${shell_names[@]}; do\n        set_proxy \"$HOME/.${name}rc\" \"export KUBERNETES_HTTP_PROXY\" $URL\n        set_proxy \"$HOME/.${name}rc\" \"export KUBERNETES_HTTPS_PROXY\" $URL\n        set_proxy \"$HOME/.${name}rc\" \"export KUBE_BUILD_HTTPS_PROXY\" $URL\n        set_proxy \"$HOME/.${name}rc\" \"export KUBE_BUILD_HTTP_PROXY\" $URL\n    done\n    source_file\nelif [ $F = 'r' ] || ([ $F = 'y' ] && [ $mode -eq 2 ]); then\n    for name in ${shell_names[@]}; do\n        del_proxy \"$HOME/.${name}rc\" \"export KUBERNETES_HTTP_PROXY\"\n        del_proxy \"$HOME/.${name}rc\" \"export KUBERNETES_HTTPS_PROXY\"\n        del_proxy \"$HOME/.${name}rc\" \"export KUBE_BUILD_HTTPS_PROXY\"\n        del_proxy \"$HOME/.${name}rc\" \"export KUBE_BUILD_HTTP_PROXY\"\n    done\nfi\n\n# docker\necho -n ${ACTION[$mode]}' the docker?(y/n/r) ';read F\nif type \"docker\" &>/dev/null && ([ $F = 'y' ] || [ $F = 'r' ]); then\n        DOCKER_CONF_DIR='/etc/systemd/system/docker.service.d'\n        DOCKER_CONF=$DOCKER_CONF_DIR'/http-proxy.conf'\n        REGISTRY=\"87129800.m.daodocker.io\"\n        sudo mkdir -p \"$DOCKER_CONF_DIR\"\n        sudo rm -rf $DOCKER_CONF\n        if [ $F = 'y' ] && [ $mode -eq 1 ]; then\n            printf \"[Service]\\nEnvironment=\" | sudo tee $DOCKER_CONF > /dev/null\n            printf \"\\\"HTTP_PROXY=%s\\\" \" $URL | sudo tee -a $DOCKER_CONF > /dev/null\n            printf \"\\\"HTTPS_PROXY=%s\\\" \" $URL | sudo tee -a $DOCKER_CONF > /dev/null\n            printf \"\\\"NO_PROXY=localhost,%s\\\"\" $REGISTRY | sudo tee -a $DOCKER_CONF > /dev/null\n        fi\n        sudo systemctl daemon-reload\n        sudo systemctl restart docker\n        echo \"Daemon reloaded\"\n        systemctl show --property=Environment docker \nfi\n```\n\n将上面脚本保持为setproxy，然后执行,注意，如果当前环境下已经有了http_proxy等变量。则需要我们手动reset\n\n```bash\nchmod u+x setproxy\nsource setproxy http://10.100.100.136:4411\n```\n\n\n\n## 基础建设\n\n### git && gcc\n\n```bash\nyum install git gcc\n```\n\n### pip\n\n```bash\ncurl \"https://bootstrap.pypa.io/get-pip.py\" | python\n```\n\nEPEL\n\n```bash\nrpm -ivh http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \n```\n\n\n\n## ZSH\n\n### 安装 & 激活\n\n```bash\nyum install zsh\nchsh -s /bin/zsh\n```\n\n\n","source":"_posts/CentOS1@1-3.md","raw":"---\ntitle: Centos初始化\ndate: 2017-1-3 16:21:43\ntags: \n  - centos\ncategories:\n  - Linux\n---\n\n\n\n## 换源\n\n### 备份\n\n```bash\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n```\n\n### 写入国内源(centos 7)\n\nustc： https://lug.ustc.edu.cn/wiki/mirrors/help/centos\n\n<!-- more -->\n\n163：\n\n``` \n# CentOS-Base.repo\n#\n# The mirror system uses the connecting IP address of the client and the\n# update status of each mirror to pick mirrors that are updated to and\n# geographically close to the client.  You should use this for CentOS updates\n# unless you are manually picking other mirrors.\n#\n# If the mirrorlist= does not work for you, as a fall back you can try the \n# remarked out baseurl= line instead.\n#\n#\n[base]\nname=CentOS-$releasever - Base - 163.com\n#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=os\nbaseurl=http://mirrors.163.com/centos/$releasever/os/$basearch/\ngpgcheck=1\ngpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7\n\n#released updates\n[updates]\nname=CentOS-$releasever - Updates - 163.com\n#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=updates\nbaseurl=http://mirrors.163.com/centos/$releasever/updates/$basearch/\ngpgcheck=1\ngpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7\n\n#additional packages that may be useful\n[extras]\nname=CentOS-$releasever - Extras - 163.com\n#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=extras\nbaseurl=http://mirrors.163.com/centos/$releasever/extras/$basearch/\ngpgcheck=1\ngpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7\n\n#additional packages that extend functionality of existing packages\n[centosplus]\nname=CentOS-$releasever - Plus - 163.com\nbaseurl=http://mirrors.163.com/centos/$releasever/centosplus/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7\n```\n\n\n\n### 更新\n\n```bash\nyum clean all\nyum makecache\n```\n\n\n\n## 设置代理\n\n```bash\n#! /bin/bash\n# Author: Kevin Tan\n# Update-Date: 2017-1-14\nURL=$1\nACTION=('\\nSet' '\\nDel')\nmode=1\nif [ -z $URL ]; then\n    echo '[Warning]: URL parameter is empty, default action change to remove'\n    mode=2\nfi\nset_proxy(){\n  file=$1;prefix=$2;value=\"$2=$3\";\n  echo \"Set \\\"$value\\\" to \\\"$file\\\"\"\n  if [ -e \"$file\" ]; then\n    if grep -q \"^\\s*$prefix\" \"$file\"; then\n        sed -i \"s#^\\s*$prefix=.*#$value#g\" $file\n    else\n        echo $value >> $file\n    fi\n  fi\n}\n\ndel_proxy(){\n    file=$1;prefix=$2\n    echo \"Del \\\"$prefix\\\" from \\\"$file\\\"\"\n    if [ -e \"$file\" ]; then\n        sed -i \"/^\\s*$prefix=.*/d\" $file\n    fi\n    eval $prefix=\"\"\n}\n\nSHELL_NAME=`ps -p $$ | awk 'NR==2 {print $4}'`\necho 'Current shell is '$SHELL_NAME\nsource_file(){\n    ## bash\n    if [ \"$SHELL_NAME\" = \"bash\" ]; then\n        source $HOME'/.bashrc'\n    fi\n    ## zsh\n    if [ \"$SHELL_NAME\" = \"zsh\" ]; then\n        source $HOME'/.zshrc'\n    fi\n}\n\n# yum\necho -n ${ACTION[$mode]}' the yum? (y/n/r) ';read F\nif [ $F = 'y' ] && [ $mode -eq 1 ]; then\n    set_proxy '/etc/yum.conf' 'proxy' $URL\nelif [ $F = 'r' ] || ([ $F = 'y' ] && [ $mode -eq 2 ]); then\n    del_proxy '/etc/yum.conf' 'proxy'\nfi\n\n# environment\necho -n ${ACTION[$mode]}' the environment var?(y/n/r) ';read F\nshell_names=(zsh bash)\nif [ $F = 'y' ] && [ $mode -eq 1 ]; then\n    for name in ${shell_names[@]}; do\n        set_proxy \"$HOME/.${name}rc\" \"export http_proxy\" $URL\n        set_proxy \"$HOME/.${name}rc\" \"export https_proxy\" $URL\n    done\n    source_file\nelif [ $F = 'r' ] || ([ $F = 'y' ] && [ $mode -eq 2 ]); then\n    for name in ${shell_names[@]}; do\n        del_proxy \"$HOME/.${name}rc\" \"export http_proxy\"\n        del_proxy \"$HOME/.${name}rc\" \"export https_proxy\"\n    done\nfi\n\n#curl\necho -n ${ACTION[$mode]}' the curl proxy alias?(y/n/r) ';read F\nshell_names=(zsh bash)\nif [ $F = 'y' ] && [ $mode -eq 1 ]; then\n    for name in ${shell_names[@]}; do\n    \tset_proxy \"$HOME/.${name}rc\" \"alias curl\" \"\\\"curl -x $URL\\\"\"   \n    done\n    source_file\nelif [ $F = 'r' ] || ([ $F = 'y' ] && [ $mode -eq 2 ]); then\n    for name in ${shell_names[@]}; do\n        del_proxy \"$HOME/.${name}rc\" \"alias curl\"\n        unalias curl\n    done\nfi\n\n# kubernetes\necho -n ${ACTION[$mode]}' kube environment var?(y/n/r) ';read F\nif [ $F = 'y' ] && [ $mode -eq 1 ]; then\n    for name in ${shell_names[@]}; do\n        set_proxy \"$HOME/.${name}rc\" \"export KUBERNETES_HTTP_PROXY\" $URL\n        set_proxy \"$HOME/.${name}rc\" \"export KUBERNETES_HTTPS_PROXY\" $URL\n        set_proxy \"$HOME/.${name}rc\" \"export KUBE_BUILD_HTTPS_PROXY\" $URL\n        set_proxy \"$HOME/.${name}rc\" \"export KUBE_BUILD_HTTP_PROXY\" $URL\n    done\n    source_file\nelif [ $F = 'r' ] || ([ $F = 'y' ] && [ $mode -eq 2 ]); then\n    for name in ${shell_names[@]}; do\n        del_proxy \"$HOME/.${name}rc\" \"export KUBERNETES_HTTP_PROXY\"\n        del_proxy \"$HOME/.${name}rc\" \"export KUBERNETES_HTTPS_PROXY\"\n        del_proxy \"$HOME/.${name}rc\" \"export KUBE_BUILD_HTTPS_PROXY\"\n        del_proxy \"$HOME/.${name}rc\" \"export KUBE_BUILD_HTTP_PROXY\"\n    done\nfi\n\n# docker\necho -n ${ACTION[$mode]}' the docker?(y/n/r) ';read F\nif type \"docker\" &>/dev/null && ([ $F = 'y' ] || [ $F = 'r' ]); then\n        DOCKER_CONF_DIR='/etc/systemd/system/docker.service.d'\n        DOCKER_CONF=$DOCKER_CONF_DIR'/http-proxy.conf'\n        REGISTRY=\"87129800.m.daodocker.io\"\n        sudo mkdir -p \"$DOCKER_CONF_DIR\"\n        sudo rm -rf $DOCKER_CONF\n        if [ $F = 'y' ] && [ $mode -eq 1 ]; then\n            printf \"[Service]\\nEnvironment=\" | sudo tee $DOCKER_CONF > /dev/null\n            printf \"\\\"HTTP_PROXY=%s\\\" \" $URL | sudo tee -a $DOCKER_CONF > /dev/null\n            printf \"\\\"HTTPS_PROXY=%s\\\" \" $URL | sudo tee -a $DOCKER_CONF > /dev/null\n            printf \"\\\"NO_PROXY=localhost,%s\\\"\" $REGISTRY | sudo tee -a $DOCKER_CONF > /dev/null\n        fi\n        sudo systemctl daemon-reload\n        sudo systemctl restart docker\n        echo \"Daemon reloaded\"\n        systemctl show --property=Environment docker \nfi\n```\n\n将上面脚本保持为setproxy，然后执行,注意，如果当前环境下已经有了http_proxy等变量。则需要我们手动reset\n\n```bash\nchmod u+x setproxy\nsource setproxy http://10.100.100.136:4411\n```\n\n\n\n## 基础建设\n\n### git && gcc\n\n```bash\nyum install git gcc\n```\n\n### pip\n\n```bash\ncurl \"https://bootstrap.pypa.io/get-pip.py\" | python\n```\n\nEPEL\n\n```bash\nrpm -ivh http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \n```\n\n\n\n## ZSH\n\n### 安装 & 激活\n\n```bash\nyum install zsh\nchsh -s /bin/zsh\n```\n\n\n","slug":"CentOS1@1-3","published":1,"updated":"2019-10-11T05:50:15.631Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1uam0py0005s8qqo3sw6ffe","content":"<h2 id=\"换源\"><a href=\"#换源\" class=\"headerlink\" title=\"换源\"></a>换源</h2><h3 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure>\n<h3 id=\"写入国内源-centos-7\"><a href=\"#写入国内源-centos-7\" class=\"headerlink\" title=\"写入国内源(centos 7)\"></a>写入国内源(centos 7)</h3><p>ustc： <a href=\"https://lug.ustc.edu.cn/wiki/mirrors/help/centos\" target=\"_blank\" rel=\"noopener\">https://lug.ustc.edu.cn/wiki/mirrors/help/centos</a></p>\n<a id=\"more\"></a>\n<p>163：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># CentOS-Base.repo</span><br><span class=\"line\">#</span><br><span class=\"line\"># The mirror system uses the connecting IP address of the client and the</span><br><span class=\"line\"># update status of each mirror to pick mirrors that are updated to and</span><br><span class=\"line\"># geographically close to the client.  You should use this for CentOS updates</span><br><span class=\"line\"># unless you are manually picking other mirrors.</span><br><span class=\"line\">#</span><br><span class=\"line\"># If the mirrorlist= does not work for you, as a fall back you can try the </span><br><span class=\"line\"># remarked out baseurl= line instead.</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\">[base]</span><br><span class=\"line\">name=CentOS-$releasever - Base - 163.com</span><br><span class=\"line\">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os</span><br><span class=\"line\">baseurl=http://mirrors.163.com/centos/$releasever/os/$basearch/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class=\"line\"></span><br><span class=\"line\">#released updates</span><br><span class=\"line\">[updates]</span><br><span class=\"line\">name=CentOS-$releasever - Updates - 163.com</span><br><span class=\"line\">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=updates</span><br><span class=\"line\">baseurl=http://mirrors.163.com/centos/$releasever/updates/$basearch/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class=\"line\"></span><br><span class=\"line\">#additional packages that may be useful</span><br><span class=\"line\">[extras]</span><br><span class=\"line\">name=CentOS-$releasever - Extras - 163.com</span><br><span class=\"line\">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extras</span><br><span class=\"line\">baseurl=http://mirrors.163.com/centos/$releasever/extras/$basearch/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class=\"line\"></span><br><span class=\"line\">#additional packages that extend functionality of existing packages</span><br><span class=\"line\">[centosplus]</span><br><span class=\"line\">name=CentOS-$releasever - Plus - 163.com</span><br><span class=\"line\">baseurl=http://mirrors.163.com/centos/$releasever/centosplus/$basearch/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure>\n<h3 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum clean all</span><br><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置代理\"><a href=\"#设置代理\" class=\"headerlink\" title=\"设置代理\"></a>设置代理</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#! /bin/bash</span></span><br><span class=\"line\"><span class=\"comment\"># Author: Kevin Tan</span></span><br><span class=\"line\"><span class=\"comment\"># Update-Date: 2017-1-14</span></span><br><span class=\"line\">URL=<span class=\"variable\">$1</span></span><br><span class=\"line\">ACTION=(<span class=\"string\">'\\nSet'</span> <span class=\"string\">'\\nDel'</span>)</span><br><span class=\"line\">mode=1</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -z <span class=\"variable\">$URL</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">'[Warning]: URL parameter is empty, default action change to remove'</span></span><br><span class=\"line\">    mode=2</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">set_proxy</span></span>()&#123;</span><br><span class=\"line\">  file=<span class=\"variable\">$1</span>;prefix=<span class=\"variable\">$2</span>;value=<span class=\"string\">\"<span class=\"variable\">$2</span>=<span class=\"variable\">$3</span>\"</span>;</span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"Set \\\"<span class=\"variable\">$value</span>\\\" to \\\"<span class=\"variable\">$file</span>\\\"\"</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ -e <span class=\"string\">\"<span class=\"variable\">$file</span>\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> grep -q <span class=\"string\">\"^\\s*<span class=\"variable\">$prefix</span>\"</span> <span class=\"string\">\"<span class=\"variable\">$file</span>\"</span>; <span class=\"keyword\">then</span></span><br><span class=\"line\">        sed -i <span class=\"string\">\"s#^\\s*<span class=\"variable\">$prefix</span>=.*#<span class=\"variable\">$value</span>#g\"</span> <span class=\"variable\">$file</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"variable\">$value</span> &gt;&gt; <span class=\"variable\">$file</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">del_proxy</span></span>()&#123;</span><br><span class=\"line\">    file=<span class=\"variable\">$1</span>;prefix=<span class=\"variable\">$2</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"Del \\\"<span class=\"variable\">$prefix</span>\\\" from \\\"<span class=\"variable\">$file</span>\\\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ -e <span class=\"string\">\"<span class=\"variable\">$file</span>\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        sed -i <span class=\"string\">\"/^\\s*<span class=\"variable\">$prefix</span>=.*/d\"</span> <span class=\"variable\">$file</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"built_in\">eval</span> <span class=\"variable\">$prefix</span>=<span class=\"string\">\"\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">SHELL_NAME=`ps -p $$ | awk <span class=\"string\">'NR==2 &#123;print $4&#125;'</span>`</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'Current shell is '</span><span class=\"variable\">$SHELL_NAME</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">source_file</span></span>()&#123;</span><br><span class=\"line\">    <span class=\"comment\">## bash</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$SHELL_NAME</span>\"</span> = <span class=\"string\">\"bash\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">source</span> <span class=\"variable\">$HOME</span><span class=\"string\">'/.bashrc'</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"comment\">## zsh</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$SHELL_NAME</span>\"</span> = <span class=\"string\">\"zsh\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">source</span> <span class=\"variable\">$HOME</span><span class=\"string\">'/.zshrc'</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># yum</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"variable\">$&#123;ACTION[$mode]&#125;</span><span class=\"string\">' the yum? (y/n/r) '</span>;<span class=\"built_in\">read</span> F</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 1 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    set_proxy <span class=\"string\">'/etc/yum.conf'</span> <span class=\"string\">'proxy'</span> <span class=\"variable\">$URL</span></span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'r'</span> ] || ([ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 2 ]); <span class=\"keyword\">then</span></span><br><span class=\"line\">    del_proxy <span class=\"string\">'/etc/yum.conf'</span> <span class=\"string\">'proxy'</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># environment</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"variable\">$&#123;ACTION[$mode]&#125;</span><span class=\"string\">' the environment var?(y/n/r) '</span>;<span class=\"built_in\">read</span> F</span><br><span class=\"line\">shell_names=(zsh bash)</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 1 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;shell_names[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">        set_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export http_proxy\"</span> <span class=\"variable\">$URL</span></span><br><span class=\"line\">        set_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export https_proxy\"</span> <span class=\"variable\">$URL</span></span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\">    source_file</span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'r'</span> ] || ([ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 2 ]); <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;shell_names[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">        del_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export http_proxy\"</span></span><br><span class=\"line\">        del_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export https_proxy\"</span></span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#curl</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"variable\">$&#123;ACTION[$mode]&#125;</span><span class=\"string\">' the curl proxy alias?(y/n/r) '</span>;<span class=\"built_in\">read</span> F</span><br><span class=\"line\">shell_names=(zsh bash)</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 1 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;shell_names[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">    \tset_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"alias curl\"</span> <span class=\"string\">\"\\\"curl -x <span class=\"variable\">$URL</span>\\\"\"</span>   </span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\">    source_file</span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'r'</span> ] || ([ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 2 ]); <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;shell_names[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">        del_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"alias curl\"</span></span><br><span class=\"line\">        <span class=\"built_in\">unalias</span> curl</span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># kubernetes</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"variable\">$&#123;ACTION[$mode]&#125;</span><span class=\"string\">' kube environment var?(y/n/r) '</span>;<span class=\"built_in\">read</span> F</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 1 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;shell_names[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">        set_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBERNETES_HTTP_PROXY\"</span> <span class=\"variable\">$URL</span></span><br><span class=\"line\">        set_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBERNETES_HTTPS_PROXY\"</span> <span class=\"variable\">$URL</span></span><br><span class=\"line\">        set_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBE_BUILD_HTTPS_PROXY\"</span> <span class=\"variable\">$URL</span></span><br><span class=\"line\">        set_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBE_BUILD_HTTP_PROXY\"</span> <span class=\"variable\">$URL</span></span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\">    source_file</span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'r'</span> ] || ([ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 2 ]); <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;shell_names[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">        del_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBERNETES_HTTP_PROXY\"</span></span><br><span class=\"line\">        del_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBERNETES_HTTPS_PROXY\"</span></span><br><span class=\"line\">        del_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBE_BUILD_HTTPS_PROXY\"</span></span><br><span class=\"line\">        del_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBE_BUILD_HTTP_PROXY\"</span></span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># docker</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"variable\">$&#123;ACTION[$mode]&#125;</span><span class=\"string\">' the docker?(y/n/r) '</span>;<span class=\"built_in\">read</span> F</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">type</span> <span class=\"string\">\"docker\"</span> &amp;&gt;/dev/null &amp;&amp; ([ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] || [ <span class=\"variable\">$F</span> = <span class=\"string\">'r'</span> ]); <span class=\"keyword\">then</span></span><br><span class=\"line\">        DOCKER_CONF_DIR=<span class=\"string\">'/etc/systemd/system/docker.service.d'</span></span><br><span class=\"line\">        DOCKER_CONF=<span class=\"variable\">$DOCKER_CONF_DIR</span><span class=\"string\">'/http-proxy.conf'</span></span><br><span class=\"line\">        REGISTRY=<span class=\"string\">\"87129800.m.daodocker.io\"</span></span><br><span class=\"line\">        sudo mkdir -p <span class=\"string\">\"<span class=\"variable\">$DOCKER_CONF_DIR</span>\"</span></span><br><span class=\"line\">        sudo rm -rf <span class=\"variable\">$DOCKER_CONF</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 1 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">printf</span> <span class=\"string\">\"[Service]\\nEnvironment=\"</span> | sudo tee <span class=\"variable\">$DOCKER_CONF</span> &gt; /dev/null</span><br><span class=\"line\">            <span class=\"built_in\">printf</span> <span class=\"string\">\"\\\"HTTP_PROXY=%s\\\" \"</span> <span class=\"variable\">$URL</span> | sudo tee -a <span class=\"variable\">$DOCKER_CONF</span> &gt; /dev/null</span><br><span class=\"line\">            <span class=\"built_in\">printf</span> <span class=\"string\">\"\\\"HTTPS_PROXY=%s\\\" \"</span> <span class=\"variable\">$URL</span> | sudo tee -a <span class=\"variable\">$DOCKER_CONF</span> &gt; /dev/null</span><br><span class=\"line\">            <span class=\"built_in\">printf</span> <span class=\"string\">\"\\\"NO_PROXY=localhost,%s\\\"\"</span> <span class=\"variable\">$REGISTRY</span> | sudo tee -a <span class=\"variable\">$DOCKER_CONF</span> &gt; /dev/null</span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">        sudo systemctl daemon-reload</span><br><span class=\"line\">        sudo systemctl restart docker</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Daemon reloaded\"</span></span><br><span class=\"line\">        systemctl show --property=Environment docker </span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>将上面脚本保持为setproxy，然后执行,注意，如果当前环境下已经有了http_proxy等变量。则需要我们手动reset</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod u+x setproxy</span><br><span class=\"line\"><span class=\"built_in\">source</span> setproxy http://10.100.100.136:4411</span><br></pre></td></tr></table></figure>\n<h2 id=\"基础建设\"><a href=\"#基础建设\" class=\"headerlink\" title=\"基础建设\"></a>基础建设</h2><h3 id=\"git-amp-amp-gcc\"><a href=\"#git-amp-amp-gcc\" class=\"headerlink\" title=\"git &amp;&amp; gcc\"></a>git &amp;&amp; gcc</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install git gcc</span><br></pre></td></tr></table></figure>\n<h3 id=\"pip\"><a href=\"#pip\" class=\"headerlink\" title=\"pip\"></a>pip</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl <span class=\"string\">\"https://bootstrap.pypa.io/get-pip.py\"</span> | python</span><br></pre></td></tr></table></figure>\n<p>EPEL</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br></pre></td></tr></table></figure>\n<h2 id=\"ZSH\"><a href=\"#ZSH\" class=\"headerlink\" title=\"ZSH\"></a>ZSH</h2><h3 id=\"安装-amp-激活\"><a href=\"#安装-amp-激活\" class=\"headerlink\" title=\"安装 &amp; 激活\"></a>安装 &amp; 激活</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install zsh</span><br><span class=\"line\">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"换源\"><a href=\"#换源\" class=\"headerlink\" title=\"换源\"></a>换源</h2><h3 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure>\n<h3 id=\"写入国内源-centos-7\"><a href=\"#写入国内源-centos-7\" class=\"headerlink\" title=\"写入国内源(centos 7)\"></a>写入国内源(centos 7)</h3><p>ustc： <a href=\"https://lug.ustc.edu.cn/wiki/mirrors/help/centos\" target=\"_blank\" rel=\"noopener\">https://lug.ustc.edu.cn/wiki/mirrors/help/centos</a></p>","more":"<p>163：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># CentOS-Base.repo</span><br><span class=\"line\">#</span><br><span class=\"line\"># The mirror system uses the connecting IP address of the client and the</span><br><span class=\"line\"># update status of each mirror to pick mirrors that are updated to and</span><br><span class=\"line\"># geographically close to the client.  You should use this for CentOS updates</span><br><span class=\"line\"># unless you are manually picking other mirrors.</span><br><span class=\"line\">#</span><br><span class=\"line\"># If the mirrorlist= does not work for you, as a fall back you can try the </span><br><span class=\"line\"># remarked out baseurl= line instead.</span><br><span class=\"line\">#</span><br><span class=\"line\">#</span><br><span class=\"line\">[base]</span><br><span class=\"line\">name=CentOS-$releasever - Base - 163.com</span><br><span class=\"line\">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os</span><br><span class=\"line\">baseurl=http://mirrors.163.com/centos/$releasever/os/$basearch/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class=\"line\"></span><br><span class=\"line\">#released updates</span><br><span class=\"line\">[updates]</span><br><span class=\"line\">name=CentOS-$releasever - Updates - 163.com</span><br><span class=\"line\">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=updates</span><br><span class=\"line\">baseurl=http://mirrors.163.com/centos/$releasever/updates/$basearch/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class=\"line\"></span><br><span class=\"line\">#additional packages that may be useful</span><br><span class=\"line\">[extras]</span><br><span class=\"line\">name=CentOS-$releasever - Extras - 163.com</span><br><span class=\"line\">#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extras</span><br><span class=\"line\">baseurl=http://mirrors.163.com/centos/$releasever/extras/$basearch/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class=\"line\"></span><br><span class=\"line\">#additional packages that extend functionality of existing packages</span><br><span class=\"line\">[centosplus]</span><br><span class=\"line\">name=CentOS-$releasever - Plus - 163.com</span><br><span class=\"line\">baseurl=http://mirrors.163.com/centos/$releasever/centosplus/$basearch/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure>\n<h3 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum clean all</span><br><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置代理\"><a href=\"#设置代理\" class=\"headerlink\" title=\"设置代理\"></a>设置代理</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#! /bin/bash</span></span><br><span class=\"line\"><span class=\"comment\"># Author: Kevin Tan</span></span><br><span class=\"line\"><span class=\"comment\"># Update-Date: 2017-1-14</span></span><br><span class=\"line\">URL=<span class=\"variable\">$1</span></span><br><span class=\"line\">ACTION=(<span class=\"string\">'\\nSet'</span> <span class=\"string\">'\\nDel'</span>)</span><br><span class=\"line\">mode=1</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -z <span class=\"variable\">$URL</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">'[Warning]: URL parameter is empty, default action change to remove'</span></span><br><span class=\"line\">    mode=2</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">set_proxy</span></span>()&#123;</span><br><span class=\"line\">  file=<span class=\"variable\">$1</span>;prefix=<span class=\"variable\">$2</span>;value=<span class=\"string\">\"<span class=\"variable\">$2</span>=<span class=\"variable\">$3</span>\"</span>;</span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"Set \\\"<span class=\"variable\">$value</span>\\\" to \\\"<span class=\"variable\">$file</span>\\\"\"</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ -e <span class=\"string\">\"<span class=\"variable\">$file</span>\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> grep -q <span class=\"string\">\"^\\s*<span class=\"variable\">$prefix</span>\"</span> <span class=\"string\">\"<span class=\"variable\">$file</span>\"</span>; <span class=\"keyword\">then</span></span><br><span class=\"line\">        sed -i <span class=\"string\">\"s#^\\s*<span class=\"variable\">$prefix</span>=.*#<span class=\"variable\">$value</span>#g\"</span> <span class=\"variable\">$file</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"variable\">$value</span> &gt;&gt; <span class=\"variable\">$file</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">del_proxy</span></span>()&#123;</span><br><span class=\"line\">    file=<span class=\"variable\">$1</span>;prefix=<span class=\"variable\">$2</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"Del \\\"<span class=\"variable\">$prefix</span>\\\" from \\\"<span class=\"variable\">$file</span>\\\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ -e <span class=\"string\">\"<span class=\"variable\">$file</span>\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        sed -i <span class=\"string\">\"/^\\s*<span class=\"variable\">$prefix</span>=.*/d\"</span> <span class=\"variable\">$file</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"built_in\">eval</span> <span class=\"variable\">$prefix</span>=<span class=\"string\">\"\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">SHELL_NAME=`ps -p $$ | awk <span class=\"string\">'NR==2 &#123;print $4&#125;'</span>`</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'Current shell is '</span><span class=\"variable\">$SHELL_NAME</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">source_file</span></span>()&#123;</span><br><span class=\"line\">    <span class=\"comment\">## bash</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$SHELL_NAME</span>\"</span> = <span class=\"string\">\"bash\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">source</span> <span class=\"variable\">$HOME</span><span class=\"string\">'/.bashrc'</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"comment\">## zsh</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$SHELL_NAME</span>\"</span> = <span class=\"string\">\"zsh\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">source</span> <span class=\"variable\">$HOME</span><span class=\"string\">'/.zshrc'</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># yum</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"variable\">$&#123;ACTION[$mode]&#125;</span><span class=\"string\">' the yum? (y/n/r) '</span>;<span class=\"built_in\">read</span> F</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 1 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    set_proxy <span class=\"string\">'/etc/yum.conf'</span> <span class=\"string\">'proxy'</span> <span class=\"variable\">$URL</span></span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'r'</span> ] || ([ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 2 ]); <span class=\"keyword\">then</span></span><br><span class=\"line\">    del_proxy <span class=\"string\">'/etc/yum.conf'</span> <span class=\"string\">'proxy'</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># environment</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"variable\">$&#123;ACTION[$mode]&#125;</span><span class=\"string\">' the environment var?(y/n/r) '</span>;<span class=\"built_in\">read</span> F</span><br><span class=\"line\">shell_names=(zsh bash)</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 1 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;shell_names[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">        set_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export http_proxy\"</span> <span class=\"variable\">$URL</span></span><br><span class=\"line\">        set_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export https_proxy\"</span> <span class=\"variable\">$URL</span></span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\">    source_file</span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'r'</span> ] || ([ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 2 ]); <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;shell_names[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">        del_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export http_proxy\"</span></span><br><span class=\"line\">        del_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export https_proxy\"</span></span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#curl</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"variable\">$&#123;ACTION[$mode]&#125;</span><span class=\"string\">' the curl proxy alias?(y/n/r) '</span>;<span class=\"built_in\">read</span> F</span><br><span class=\"line\">shell_names=(zsh bash)</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 1 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;shell_names[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">    \tset_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"alias curl\"</span> <span class=\"string\">\"\\\"curl -x <span class=\"variable\">$URL</span>\\\"\"</span>   </span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\">    source_file</span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'r'</span> ] || ([ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 2 ]); <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;shell_names[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">        del_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"alias curl\"</span></span><br><span class=\"line\">        <span class=\"built_in\">unalias</span> curl</span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># kubernetes</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"variable\">$&#123;ACTION[$mode]&#125;</span><span class=\"string\">' kube environment var?(y/n/r) '</span>;<span class=\"built_in\">read</span> F</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 1 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;shell_names[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">        set_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBERNETES_HTTP_PROXY\"</span> <span class=\"variable\">$URL</span></span><br><span class=\"line\">        set_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBERNETES_HTTPS_PROXY\"</span> <span class=\"variable\">$URL</span></span><br><span class=\"line\">        set_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBE_BUILD_HTTPS_PROXY\"</span> <span class=\"variable\">$URL</span></span><br><span class=\"line\">        set_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBE_BUILD_HTTP_PROXY\"</span> <span class=\"variable\">$URL</span></span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\">    source_file</span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'r'</span> ] || ([ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 2 ]); <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;shell_names[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">        del_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBERNETES_HTTP_PROXY\"</span></span><br><span class=\"line\">        del_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBERNETES_HTTPS_PROXY\"</span></span><br><span class=\"line\">        del_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBE_BUILD_HTTPS_PROXY\"</span></span><br><span class=\"line\">        del_proxy <span class=\"string\">\"<span class=\"variable\">$HOME</span>/.<span class=\"variable\">$&#123;name&#125;</span>rc\"</span> <span class=\"string\">\"export KUBE_BUILD_HTTP_PROXY\"</span></span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># docker</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -n <span class=\"variable\">$&#123;ACTION[$mode]&#125;</span><span class=\"string\">' the docker?(y/n/r) '</span>;<span class=\"built_in\">read</span> F</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">type</span> <span class=\"string\">\"docker\"</span> &amp;&gt;/dev/null &amp;&amp; ([ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] || [ <span class=\"variable\">$F</span> = <span class=\"string\">'r'</span> ]); <span class=\"keyword\">then</span></span><br><span class=\"line\">        DOCKER_CONF_DIR=<span class=\"string\">'/etc/systemd/system/docker.service.d'</span></span><br><span class=\"line\">        DOCKER_CONF=<span class=\"variable\">$DOCKER_CONF_DIR</span><span class=\"string\">'/http-proxy.conf'</span></span><br><span class=\"line\">        REGISTRY=<span class=\"string\">\"87129800.m.daodocker.io\"</span></span><br><span class=\"line\">        sudo mkdir -p <span class=\"string\">\"<span class=\"variable\">$DOCKER_CONF_DIR</span>\"</span></span><br><span class=\"line\">        sudo rm -rf <span class=\"variable\">$DOCKER_CONF</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> [ <span class=\"variable\">$F</span> = <span class=\"string\">'y'</span> ] &amp;&amp; [ <span class=\"variable\">$mode</span> -eq 1 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">printf</span> <span class=\"string\">\"[Service]\\nEnvironment=\"</span> | sudo tee <span class=\"variable\">$DOCKER_CONF</span> &gt; /dev/null</span><br><span class=\"line\">            <span class=\"built_in\">printf</span> <span class=\"string\">\"\\\"HTTP_PROXY=%s\\\" \"</span> <span class=\"variable\">$URL</span> | sudo tee -a <span class=\"variable\">$DOCKER_CONF</span> &gt; /dev/null</span><br><span class=\"line\">            <span class=\"built_in\">printf</span> <span class=\"string\">\"\\\"HTTPS_PROXY=%s\\\" \"</span> <span class=\"variable\">$URL</span> | sudo tee -a <span class=\"variable\">$DOCKER_CONF</span> &gt; /dev/null</span><br><span class=\"line\">            <span class=\"built_in\">printf</span> <span class=\"string\">\"\\\"NO_PROXY=localhost,%s\\\"\"</span> <span class=\"variable\">$REGISTRY</span> | sudo tee -a <span class=\"variable\">$DOCKER_CONF</span> &gt; /dev/null</span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">        sudo systemctl daemon-reload</span><br><span class=\"line\">        sudo systemctl restart docker</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Daemon reloaded\"</span></span><br><span class=\"line\">        systemctl show --property=Environment docker </span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>将上面脚本保持为setproxy，然后执行,注意，如果当前环境下已经有了http_proxy等变量。则需要我们手动reset</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod u+x setproxy</span><br><span class=\"line\"><span class=\"built_in\">source</span> setproxy http://10.100.100.136:4411</span><br></pre></td></tr></table></figure>\n<h2 id=\"基础建设\"><a href=\"#基础建设\" class=\"headerlink\" title=\"基础建设\"></a>基础建设</h2><h3 id=\"git-amp-amp-gcc\"><a href=\"#git-amp-amp-gcc\" class=\"headerlink\" title=\"git &amp;&amp; gcc\"></a>git &amp;&amp; gcc</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install git gcc</span><br></pre></td></tr></table></figure>\n<h3 id=\"pip\"><a href=\"#pip\" class=\"headerlink\" title=\"pip\"></a>pip</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl <span class=\"string\">\"https://bootstrap.pypa.io/get-pip.py\"</span> | python</span><br></pre></td></tr></table></figure>\n<p>EPEL</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ivh http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br></pre></td></tr></table></figure>\n<h2 id=\"ZSH\"><a href=\"#ZSH\" class=\"headerlink\" title=\"ZSH\"></a>ZSH</h2><h3 id=\"安装-amp-激活\"><a href=\"#安装-amp-激活\" class=\"headerlink\" title=\"安装 &amp; 激活\"></a>安装 &amp; 激活</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install zsh</span><br><span class=\"line\">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure>"},{"title":"Kubernetes部署","date":"2017-01-03T16:00:00.000Z","_content":"\n\n\n## MEOW\n\n安装\n\n```bash\ncurl -L git.io/meowproxy | bash\n# 建议安装目录 /usr/bin/\n```\n\n复制自己的配置文件\n\n```bash\n# in local computer\nxclip -sel clipboard < ~/.meow/rc\n# in CentOS server\nmv ~/.meow/rc ~/.meow/rc.bak\nxclip -o -sel clipboard > ~/.meow/rc\n```\n\n<!-- more -->\n\n运行\n\n```\nMEOW\n```\n\n\n\n## Hostname\n\n执行下面脚本。**不要执行多次** 如果出错则手动修改\n\n```bash\nsed -i s/localhost\\.localdomain/NAME/g /etc/hosts /etc/hostname \nhostname=\"10-10-103-144.node\"\nrm -rf /etc/hostname\necho $hostname > /etc/hostname \nsed -i \"s/\\slocalhost\\s/ localhost $hostname /g\" /etc/hosts\nsysctl kernel.hostname=$hostname\n```\n\n## Screenfetch\n\n```bash\ncurl -L https://raw.githubusercontent.com/KittyKatt/screenFetch/master/screenfetch-dev -o /usr/bin/screenfetch\n```\n\n## AWK简述\n\n```bash\nawk -v var1=xxx BEGIN{[something]} [ifstatments or regex]{something match the condition}{[always run]}END{[something]}\n# 支持if else,for,i++\n# 支持数组（支持for in遍历，但是顺序会打乱）\n# 最好的批量初始化的方式： \narr[\"\"]=0 # 批量设为0\nstr=\"a b c\"; split(str,arr[,\" \"]);# [\"a\",\"b\",\"c\"]\n```\n\n\n\n## 加Kubernetes源\n\n```Bash\ncat <<EOF > /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=http://yum.kubernetes.io/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\nEOF\n```\n\n## 安装Kubernetes\n\n```bash\nyum install docker kubelet kubeadm kubectl kubernetes-cni\n```\n\n## 启动进程&关闭防火墙\n\n```bash\nsystemctl start docker\nsystemctl start kubelet\nsystemctl enable docker \nsystemctl enable kubelet \nsystemctl stop firewalld\nsystemctl disable firewalld\n```\n\n\n\n## Tear Down(当kubeadm init失败时执行) \n\n```bash\nkubeadm reset && systemctl start kubelet\n```\n\n\n\n## Pull Docker Images\n\n**此方式十分艰难。后面可以通过代理直接安装。见Tech Log@1-12**\n\n```bash\n#! /bin/bash\ndeclare -a images=(\n    'dnsmasq-metrics-amd64:1.0'\n    'etcd-amd64:3.0.14-kubeadm'\n    'exechealthz-amd64:v1.2.0'\n    'kube-apiserver-amd64:v1.5.1'\n    'kube-controller-manager-amd64:v1.5.1'\n    'kube-discovery-amd64:1.0'\n    'kube-dnsmasq-amd64:1.4'\n    'kube-proxy-amd64:v1.5.1'\n    'kube-scheduler-amd64:v1.5.1'\n    'kubedns-amd64:1.9'\n    'kubernetes-dashboard-amd64:v1.5.0'\n    'pause-amd64:3.0'\n#   'weave-kube:1.8.1'\n#   'weave-npc:1.8.1'\n)\nfor imageName in ${images[@]}; do\n    docker pull stkevintan/$imageName\n    docker tag stkevintan/$imageName gcr.io/google_containers/$imageName\n    docker rmi stkevintan/$imageName\ndone\n```\n\n```bash\nxclip -o -sel clipboard > pull_docker\nchmod +x pull_docker\n./pull_docker\n```\n\n\n\n## 初始化（Master）\n\n```bash\n# 首先需要使用@17-1-3的脚本设置代理。\n# Del environment\n# Set curl\n# Set kube env\n# Set docker\n# 在/etc/default/docker的DOCKER_OPTS中加入:--insecure-registry gcr.io\nroot@10-10-103-144 ~ $ kubeadm init\n[kubeadm] WARNING: kubeadm is in alpha, please do not use it for production clusters.\n[preflight] Running pre-flight checks\n[init] Using Kubernetes version: v1.5.2\n[tokens] Generated token: \"c30875.954dc1dda4d0184b\"\n[certificates] Generated Certificate Authority key and certificate.\n[certificates] Generated API Server key and certificate\n[certificates] Generated Service Account signing keys\n[certificates] Created keys and certificates in \"/etc/kubernetes/pki\"\n[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/kubelet.conf\"\n[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/admin.conf\"\n[apiclient] Created API client, waiting for the control plane to become ready\n[apiclient] All control plane components are healthy after 16.391731 seconds\n[apiclient] Waiting for at least one node to register and become ready\n[apiclient] First node is ready after 0.509209 seconds\n[apiclient] Creating a test deployment\n[apiclient] Test deployment succeeded\n[token-discovery] Created the kube-discovery deployment, waiting for it to become ready\n[token-discovery] kube-discovery is ready after 3.505676 seconds\n[addons] Created essential addon: kube-proxy\n[addons] Created essential addon: kube-dns\n\nYour Kubernetes master has initialized successfully!\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n    http://kubernetes.io/docs/admin/addons/\n\nYou can now join any number of machines by running the following on each node:\n\nkubeadm join --token=c30875.954dc1dda4d0184b 10.10.103.144\n```\n\n\n\n\n\n## 初始化（Node）\n\n```bash\n# 需要在子节点上安装kubelet kubectl kubernetes-cni kubeadm\n# 需要使用@17-1-3的脚本设置代理。\n# Del environment\n# Set curl\n# Set kube env\n# Set docker\n# 在/etc/default/docker的DOCKER_OPTS中加入:--insecure-registry gcr.io\nsystemctl enable kubelet\nsystemctl start kubelet\n\nkubeadm join --token=ace10c.73fcdec44f7a4045 10.10.103.146\n```\n\n可以在master节点上看到该子节点：\n\n```bash\nroot@master ~ $ kubectl get node\nNAME      STATUS         AGE\nmaster    Ready,master   5d\nnode1     Ready          1m\n```\n\n\n\n## Weave Network\n\n```bash\n# download config file\ncurl -L https://git.io/weave-kube -o weave-kube.yaml\n# pull docker image\ndocker pull stkevintan/weave-kube:1.8.1\ndocker tag stkevintan/weave-kube:1.8.1 weaveworks/weave-kube:1.8.1\ndocker rmi stkevintan/weave-kube:1.8.1\n# create\nkubectl create -f weave-kube.yaml\n# 或者\nkubectl create -f https://git.io/weave-kube\n```\n\n可以看到结果：\n\n```bash\nroot@master ~ $ kubectl get pod --namespace=kube-system\nNAME                              READY     STATUS              RESTARTS   AGE\ndummy-2088944543-bv5gj            1/1       Running             0          5d\netcd-master                       1/1       Running             0          5d\nkube-apiserver-master             1/1       Running             27         5d\nkube-controller-manager-master    1/1       Running             0          5d\nkube-discovery-1769846148-xbm2h   1/1       Running             0          5d\nkube-dns-2924299975-phn03         0/4       ContainerCreating   0          5d\nkube-proxy-081gt                  1/1       Running             0          5d\nkube-proxy-qc40l                  1/1       Running             0          1h\nkube-scheduler-master             1/1       Running             1          5d\nweave-net-4wvkm                   0/2       ContainerCreating   0          30s\nweave-net-l7dh0                   0/2       ContainerCreating   0          30s\n```\n\n\n\n## Dashboard\n\n```bash\n curl -L https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml -o kubernetes-dashboard.yaml\n \n sed -i 's/v1.5.1/v1.5.0/g' kubernetes-dashboard.yaml # 注意此时gcr上面并没有v1.5.1\n sed -i 's/Alaways/IfNotPresent/g' kubernetes-dashboard.yaml\n \n kubectl create -f kubernetes-dashboard.yaml\n \n kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml\n```\n\n\n\n## Delete Pod\n\n```bash\nkubectl delete -f xxx.yaml\n```\n\n","source":"_posts/Kubernetes部署@1-5.md","raw":"---\ntitle: Kubernetes部署\ndate: 2017-1-4\ntags:\n  - meow\n  - docker\n  - kubernetes\ncategories:\n  - Cloud Computing\n---\n\n\n\n## MEOW\n\n安装\n\n```bash\ncurl -L git.io/meowproxy | bash\n# 建议安装目录 /usr/bin/\n```\n\n复制自己的配置文件\n\n```bash\n# in local computer\nxclip -sel clipboard < ~/.meow/rc\n# in CentOS server\nmv ~/.meow/rc ~/.meow/rc.bak\nxclip -o -sel clipboard > ~/.meow/rc\n```\n\n<!-- more -->\n\n运行\n\n```\nMEOW\n```\n\n\n\n## Hostname\n\n执行下面脚本。**不要执行多次** 如果出错则手动修改\n\n```bash\nsed -i s/localhost\\.localdomain/NAME/g /etc/hosts /etc/hostname \nhostname=\"10-10-103-144.node\"\nrm -rf /etc/hostname\necho $hostname > /etc/hostname \nsed -i \"s/\\slocalhost\\s/ localhost $hostname /g\" /etc/hosts\nsysctl kernel.hostname=$hostname\n```\n\n## Screenfetch\n\n```bash\ncurl -L https://raw.githubusercontent.com/KittyKatt/screenFetch/master/screenfetch-dev -o /usr/bin/screenfetch\n```\n\n## AWK简述\n\n```bash\nawk -v var1=xxx BEGIN{[something]} [ifstatments or regex]{something match the condition}{[always run]}END{[something]}\n# 支持if else,for,i++\n# 支持数组（支持for in遍历，但是顺序会打乱）\n# 最好的批量初始化的方式： \narr[\"\"]=0 # 批量设为0\nstr=\"a b c\"; split(str,arr[,\" \"]);# [\"a\",\"b\",\"c\"]\n```\n\n\n\n## 加Kubernetes源\n\n```Bash\ncat <<EOF > /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=http://yum.kubernetes.io/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\nEOF\n```\n\n## 安装Kubernetes\n\n```bash\nyum install docker kubelet kubeadm kubectl kubernetes-cni\n```\n\n## 启动进程&关闭防火墙\n\n```bash\nsystemctl start docker\nsystemctl start kubelet\nsystemctl enable docker \nsystemctl enable kubelet \nsystemctl stop firewalld\nsystemctl disable firewalld\n```\n\n\n\n## Tear Down(当kubeadm init失败时执行) \n\n```bash\nkubeadm reset && systemctl start kubelet\n```\n\n\n\n## Pull Docker Images\n\n**此方式十分艰难。后面可以通过代理直接安装。见Tech Log@1-12**\n\n```bash\n#! /bin/bash\ndeclare -a images=(\n    'dnsmasq-metrics-amd64:1.0'\n    'etcd-amd64:3.0.14-kubeadm'\n    'exechealthz-amd64:v1.2.0'\n    'kube-apiserver-amd64:v1.5.1'\n    'kube-controller-manager-amd64:v1.5.1'\n    'kube-discovery-amd64:1.0'\n    'kube-dnsmasq-amd64:1.4'\n    'kube-proxy-amd64:v1.5.1'\n    'kube-scheduler-amd64:v1.5.1'\n    'kubedns-amd64:1.9'\n    'kubernetes-dashboard-amd64:v1.5.0'\n    'pause-amd64:3.0'\n#   'weave-kube:1.8.1'\n#   'weave-npc:1.8.1'\n)\nfor imageName in ${images[@]}; do\n    docker pull stkevintan/$imageName\n    docker tag stkevintan/$imageName gcr.io/google_containers/$imageName\n    docker rmi stkevintan/$imageName\ndone\n```\n\n```bash\nxclip -o -sel clipboard > pull_docker\nchmod +x pull_docker\n./pull_docker\n```\n\n\n\n## 初始化（Master）\n\n```bash\n# 首先需要使用@17-1-3的脚本设置代理。\n# Del environment\n# Set curl\n# Set kube env\n# Set docker\n# 在/etc/default/docker的DOCKER_OPTS中加入:--insecure-registry gcr.io\nroot@10-10-103-144 ~ $ kubeadm init\n[kubeadm] WARNING: kubeadm is in alpha, please do not use it for production clusters.\n[preflight] Running pre-flight checks\n[init] Using Kubernetes version: v1.5.2\n[tokens] Generated token: \"c30875.954dc1dda4d0184b\"\n[certificates] Generated Certificate Authority key and certificate.\n[certificates] Generated API Server key and certificate\n[certificates] Generated Service Account signing keys\n[certificates] Created keys and certificates in \"/etc/kubernetes/pki\"\n[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/kubelet.conf\"\n[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/admin.conf\"\n[apiclient] Created API client, waiting for the control plane to become ready\n[apiclient] All control plane components are healthy after 16.391731 seconds\n[apiclient] Waiting for at least one node to register and become ready\n[apiclient] First node is ready after 0.509209 seconds\n[apiclient] Creating a test deployment\n[apiclient] Test deployment succeeded\n[token-discovery] Created the kube-discovery deployment, waiting for it to become ready\n[token-discovery] kube-discovery is ready after 3.505676 seconds\n[addons] Created essential addon: kube-proxy\n[addons] Created essential addon: kube-dns\n\nYour Kubernetes master has initialized successfully!\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n    http://kubernetes.io/docs/admin/addons/\n\nYou can now join any number of machines by running the following on each node:\n\nkubeadm join --token=c30875.954dc1dda4d0184b 10.10.103.144\n```\n\n\n\n\n\n## 初始化（Node）\n\n```bash\n# 需要在子节点上安装kubelet kubectl kubernetes-cni kubeadm\n# 需要使用@17-1-3的脚本设置代理。\n# Del environment\n# Set curl\n# Set kube env\n# Set docker\n# 在/etc/default/docker的DOCKER_OPTS中加入:--insecure-registry gcr.io\nsystemctl enable kubelet\nsystemctl start kubelet\n\nkubeadm join --token=ace10c.73fcdec44f7a4045 10.10.103.146\n```\n\n可以在master节点上看到该子节点：\n\n```bash\nroot@master ~ $ kubectl get node\nNAME      STATUS         AGE\nmaster    Ready,master   5d\nnode1     Ready          1m\n```\n\n\n\n## Weave Network\n\n```bash\n# download config file\ncurl -L https://git.io/weave-kube -o weave-kube.yaml\n# pull docker image\ndocker pull stkevintan/weave-kube:1.8.1\ndocker tag stkevintan/weave-kube:1.8.1 weaveworks/weave-kube:1.8.1\ndocker rmi stkevintan/weave-kube:1.8.1\n# create\nkubectl create -f weave-kube.yaml\n# 或者\nkubectl create -f https://git.io/weave-kube\n```\n\n可以看到结果：\n\n```bash\nroot@master ~ $ kubectl get pod --namespace=kube-system\nNAME                              READY     STATUS              RESTARTS   AGE\ndummy-2088944543-bv5gj            1/1       Running             0          5d\netcd-master                       1/1       Running             0          5d\nkube-apiserver-master             1/1       Running             27         5d\nkube-controller-manager-master    1/1       Running             0          5d\nkube-discovery-1769846148-xbm2h   1/1       Running             0          5d\nkube-dns-2924299975-phn03         0/4       ContainerCreating   0          5d\nkube-proxy-081gt                  1/1       Running             0          5d\nkube-proxy-qc40l                  1/1       Running             0          1h\nkube-scheduler-master             1/1       Running             1          5d\nweave-net-4wvkm                   0/2       ContainerCreating   0          30s\nweave-net-l7dh0                   0/2       ContainerCreating   0          30s\n```\n\n\n\n## Dashboard\n\n```bash\n curl -L https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml -o kubernetes-dashboard.yaml\n \n sed -i 's/v1.5.1/v1.5.0/g' kubernetes-dashboard.yaml # 注意此时gcr上面并没有v1.5.1\n sed -i 's/Alaways/IfNotPresent/g' kubernetes-dashboard.yaml\n \n kubectl create -f kubernetes-dashboard.yaml\n \n kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml\n```\n\n\n\n## Delete Pod\n\n```bash\nkubectl delete -f xxx.yaml\n```\n\n","slug":"Kubernetes部署@1-5","published":1,"updated":"2019-10-11T05:50:15.643Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1uam0q00006s8qqg1d6qz7a","content":"<h2 id=\"MEOW\"><a href=\"#MEOW\" class=\"headerlink\" title=\"MEOW\"></a>MEOW</h2><p>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L git.io/meowproxy | bash</span><br><span class=\"line\"><span class=\"comment\"># 建议安装目录 /usr/bin/</span></span><br></pre></td></tr></table></figure>\n<p>复制自己的配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># in local computer</span></span><br><span class=\"line\">xclip -sel clipboard &lt; ~/.meow/rc</span><br><span class=\"line\"><span class=\"comment\"># in CentOS server</span></span><br><span class=\"line\">mv ~/.meow/rc ~/.meow/rc.bak</span><br><span class=\"line\">xclip -o -sel clipboard &gt; ~/.meow/rc</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MEOW</span><br></pre></td></tr></table></figure>\n<h2 id=\"Hostname\"><a href=\"#Hostname\" class=\"headerlink\" title=\"Hostname\"></a>Hostname</h2><p>执行下面脚本。<strong>不要执行多次</strong> 如果出错则手动修改</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i s/localhost\\.localdomain/NAME/g /etc/hosts /etc/hostname </span><br><span class=\"line\">hostname=<span class=\"string\">\"10-10-103-144.node\"</span></span><br><span class=\"line\">rm -rf /etc/hostname</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$hostname</span> &gt; /etc/hostname </span><br><span class=\"line\">sed -i <span class=\"string\">\"s/\\slocalhost\\s/ localhost <span class=\"variable\">$hostname</span> /g\"</span> /etc/hosts</span><br><span class=\"line\">sysctl kernel.hostname=<span class=\"variable\">$hostname</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Screenfetch\"><a href=\"#Screenfetch\" class=\"headerlink\" title=\"Screenfetch\"></a>Screenfetch</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L https://raw.githubusercontent.com/KittyKatt/screenFetch/master/screenfetch-dev -o /usr/bin/screenfetch</span><br></pre></td></tr></table></figure>\n<h2 id=\"AWK简述\"><a href=\"#AWK简述\" class=\"headerlink\" title=\"AWK简述\"></a>AWK简述</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -v var1=xxx BEGIN&#123;[something]&#125; [ifstatments or regex]&#123;something match the condition&#125;&#123;[always run]&#125;END&#123;[something]&#125;</span><br><span class=\"line\"><span class=\"comment\"># 支持if else,for,i++</span></span><br><span class=\"line\"><span class=\"comment\"># 支持数组（支持for in遍历，但是顺序会打乱）</span></span><br><span class=\"line\"><span class=\"comment\"># 最好的批量初始化的方式： </span></span><br><span class=\"line\">arr[<span class=\"string\">\"\"</span>]=0 <span class=\"comment\"># 批量设为0</span></span><br><span class=\"line\">str=<span class=\"string\">\"a b c\"</span>; split(str,arr[,<span class=\"string\">\" \"</span>]);<span class=\"comment\"># [\"a\",\"b\",\"c\"]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"加Kubernetes源\"><a href=\"#加Kubernetes源\" class=\"headerlink\" title=\"加Kubernetes源\"></a>加Kubernetes源</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name=Kubernetes</span><br><span class=\"line\">baseurl=http://yum.kubernetes.io/repos/kubernetes-el7-x86_64</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">repo_gpgcheck=0</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Kubernetes\"><a href=\"#安装Kubernetes\" class=\"headerlink\" title=\"安装Kubernetes\"></a>安装Kubernetes</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install docker kubelet kubeadm kubectl kubernetes-cni</span><br></pre></td></tr></table></figure>\n<h2 id=\"启动进程-amp-关闭防火墙\"><a href=\"#启动进程-amp-关闭防火墙\" class=\"headerlink\" title=\"启动进程&amp;关闭防火墙\"></a>启动进程&amp;关闭防火墙</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start docker</span><br><span class=\"line\">systemctl start kubelet</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> docker </span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> kubelet </span><br><span class=\"line\">systemctl stop firewalld</span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld</span><br></pre></td></tr></table></figure>\n<h2 id=\"Tear-Down-当kubeadm-init失败时执行\"><a href=\"#Tear-Down-当kubeadm-init失败时执行\" class=\"headerlink\" title=\"Tear Down(当kubeadm init失败时执行)\"></a>Tear Down(当kubeadm init失败时执行)</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm reset &amp;&amp; systemctl start kubelet</span><br></pre></td></tr></table></figure>\n<h2 id=\"Pull-Docker-Images\"><a href=\"#Pull-Docker-Images\" class=\"headerlink\" title=\"Pull Docker Images\"></a>Pull Docker Images</h2><p><strong>此方式十分艰难。后面可以通过代理直接安装。见Tech Log@1-12</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#! /bin/bash</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -a images=(</span><br><span class=\"line\">    <span class=\"string\">'dnsmasq-metrics-amd64:1.0'</span></span><br><span class=\"line\">    <span class=\"string\">'etcd-amd64:3.0.14-kubeadm'</span></span><br><span class=\"line\">    <span class=\"string\">'exechealthz-amd64:v1.2.0'</span></span><br><span class=\"line\">    <span class=\"string\">'kube-apiserver-amd64:v1.5.1'</span></span><br><span class=\"line\">    <span class=\"string\">'kube-controller-manager-amd64:v1.5.1'</span></span><br><span class=\"line\">    <span class=\"string\">'kube-discovery-amd64:1.0'</span></span><br><span class=\"line\">    <span class=\"string\">'kube-dnsmasq-amd64:1.4'</span></span><br><span class=\"line\">    <span class=\"string\">'kube-proxy-amd64:v1.5.1'</span></span><br><span class=\"line\">    <span class=\"string\">'kube-scheduler-amd64:v1.5.1'</span></span><br><span class=\"line\">    <span class=\"string\">'kubedns-amd64:1.9'</span></span><br><span class=\"line\">    <span class=\"string\">'kubernetes-dashboard-amd64:v1.5.0'</span></span><br><span class=\"line\">    <span class=\"string\">'pause-amd64:3.0'</span></span><br><span class=\"line\"><span class=\"comment\">#   'weave-kube:1.8.1'</span></span><br><span class=\"line\"><span class=\"comment\">#   'weave-npc:1.8.1'</span></span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">for</span> imageName <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;images[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">    docker pull stkevintan/<span class=\"variable\">$imageName</span></span><br><span class=\"line\">    docker tag stkevintan/<span class=\"variable\">$imageName</span> gcr.io/google_containers/<span class=\"variable\">$imageName</span></span><br><span class=\"line\">    docker rmi stkevintan/<span class=\"variable\">$imageName</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xclip -o -sel clipboard &gt; pull_docker</span><br><span class=\"line\">chmod +x pull_docker</span><br><span class=\"line\">./pull_docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"初始化（Master）\"><a href=\"#初始化（Master）\" class=\"headerlink\" title=\"初始化（Master）\"></a>初始化（Master）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 首先需要使用@17-1-3的脚本设置代理。</span></span><br><span class=\"line\"><span class=\"comment\"># Del environment</span></span><br><span class=\"line\"><span class=\"comment\"># Set curl</span></span><br><span class=\"line\"><span class=\"comment\"># Set kube env</span></span><br><span class=\"line\"><span class=\"comment\"># Set docker</span></span><br><span class=\"line\"><span class=\"comment\"># 在/etc/default/docker的DOCKER_OPTS中加入:--insecure-registry gcr.io</span></span><br><span class=\"line\">root@10-10-103-144 ~ $ kubeadm init</span><br><span class=\"line\">[kubeadm] WARNING: kubeadm is <span class=\"keyword\">in</span> alpha, please <span class=\"keyword\">do</span> not use it <span class=\"keyword\">for</span> production clusters.</span><br><span class=\"line\">[preflight] Running pre-flight checks</span><br><span class=\"line\">[init] Using Kubernetes version: v1.5.2</span><br><span class=\"line\">[tokens] Generated token: <span class=\"string\">\"c30875.954dc1dda4d0184b\"</span></span><br><span class=\"line\">[certificates] Generated Certificate Authority key and certificate.</span><br><span class=\"line\">[certificates] Generated API Server key and certificate</span><br><span class=\"line\">[certificates] Generated Service Account signing keys</span><br><span class=\"line\">[certificates] Created keys and certificates <span class=\"keyword\">in</span> <span class=\"string\">\"/etc/kubernetes/pki\"</span></span><br><span class=\"line\">[kubeconfig] Wrote KubeConfig file to disk: <span class=\"string\">\"/etc/kubernetes/kubelet.conf\"</span></span><br><span class=\"line\">[kubeconfig] Wrote KubeConfig file to disk: <span class=\"string\">\"/etc/kubernetes/admin.conf\"</span></span><br><span class=\"line\">[apiclient] Created API client, waiting <span class=\"keyword\">for</span> the control plane to become ready</span><br><span class=\"line\">[apiclient] All control plane components are healthy after 16.391731 seconds</span><br><span class=\"line\">[apiclient] Waiting <span class=\"keyword\">for</span> at least one node to register and become ready</span><br><span class=\"line\">[apiclient] First node is ready after 0.509209 seconds</span><br><span class=\"line\">[apiclient] Creating a <span class=\"built_in\">test</span> deployment</span><br><span class=\"line\">[apiclient] Test deployment succeeded</span><br><span class=\"line\">[token-discovery] Created the kube-discovery deployment, waiting <span class=\"keyword\">for</span> it to become ready</span><br><span class=\"line\">[token-discovery] kube-discovery is ready after 3.505676 seconds</span><br><span class=\"line\">[addons] Created essential addon: kube-proxy</span><br><span class=\"line\">[addons] Created essential addon: kube-dns</span><br><span class=\"line\"></span><br><span class=\"line\">Your Kubernetes master has initialized successfully!</span><br><span class=\"line\"></span><br><span class=\"line\">You should now deploy a pod network to the cluster.</span><br><span class=\"line\">Run <span class=\"string\">\"kubectl apply -f [podnetwork].yaml\"</span> with one of the options listed at:</span><br><span class=\"line\">    http://kubernetes.io/docs/admin/addons/</span><br><span class=\"line\"></span><br><span class=\"line\">You can now join any number of machines by running the following on each node:</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join --token=c30875.954dc1dda4d0184b 10.10.103.144</span><br></pre></td></tr></table></figure>\n<h2 id=\"初始化（Node）\"><a href=\"#初始化（Node）\" class=\"headerlink\" title=\"初始化（Node）\"></a>初始化（Node）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 需要在子节点上安装kubelet kubectl kubernetes-cni kubeadm</span></span><br><span class=\"line\"><span class=\"comment\"># 需要使用@17-1-3的脚本设置代理。</span></span><br><span class=\"line\"><span class=\"comment\"># Del environment</span></span><br><span class=\"line\"><span class=\"comment\"># Set curl</span></span><br><span class=\"line\"><span class=\"comment\"># Set kube env</span></span><br><span class=\"line\"><span class=\"comment\"># Set docker</span></span><br><span class=\"line\"><span class=\"comment\"># 在/etc/default/docker的DOCKER_OPTS中加入:--insecure-registry gcr.io</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> kubelet</span><br><span class=\"line\">systemctl start kubelet</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join --token=ace10c.73fcdec44f7a4045 10.10.103.146</span><br></pre></td></tr></table></figure>\n<p>可以在master节点上看到该子节点：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@master ~ $ kubectl get node</span><br><span class=\"line\">NAME      STATUS         AGE</span><br><span class=\"line\">master    Ready,master   5d</span><br><span class=\"line\">node1     Ready          1m</span><br></pre></td></tr></table></figure>\n<h2 id=\"Weave-Network\"><a href=\"#Weave-Network\" class=\"headerlink\" title=\"Weave Network\"></a>Weave Network</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># download config file</span></span><br><span class=\"line\">curl -L https://git.io/weave-kube -o weave-kube.yaml</span><br><span class=\"line\"><span class=\"comment\"># pull docker image</span></span><br><span class=\"line\">docker pull stkevintan/weave-kube:1.8.1</span><br><span class=\"line\">docker tag stkevintan/weave-kube:1.8.1 weaveworks/weave-kube:1.8.1</span><br><span class=\"line\">docker rmi stkevintan/weave-kube:1.8.1</span><br><span class=\"line\"><span class=\"comment\"># create</span></span><br><span class=\"line\">kubectl create -f weave-kube.yaml</span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">kubectl create -f https://git.io/weave-kube</span><br></pre></td></tr></table></figure>\n<p>可以看到结果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@master ~ $ kubectl get pod --namespace=kube-system</span><br><span class=\"line\">NAME                              READY     STATUS              RESTARTS   AGE</span><br><span class=\"line\">dummy-2088944543-bv5gj            1/1       Running             0          5d</span><br><span class=\"line\">etcd-master                       1/1       Running             0          5d</span><br><span class=\"line\">kube-apiserver-master             1/1       Running             27         5d</span><br><span class=\"line\">kube-controller-manager-master    1/1       Running             0          5d</span><br><span class=\"line\">kube-discovery-1769846148-xbm2h   1/1       Running             0          5d</span><br><span class=\"line\">kube-dns-2924299975-phn03         0/4       ContainerCreating   0          5d</span><br><span class=\"line\">kube-proxy-081gt                  1/1       Running             0          5d</span><br><span class=\"line\">kube-proxy-qc40l                  1/1       Running             0          1h</span><br><span class=\"line\">kube-scheduler-master             1/1       Running             1          5d</span><br><span class=\"line\">weave-net-4wvkm                   0/2       ContainerCreating   0          30s</span><br><span class=\"line\">weave-net-l7dh0                   0/2       ContainerCreating   0          30s</span><br></pre></td></tr></table></figure>\n<h2 id=\"Dashboard\"><a href=\"#Dashboard\" class=\"headerlink\" title=\"Dashboard\"></a>Dashboard</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml -o kubernetes-dashboard.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i <span class=\"string\">'s/v1.5.1/v1.5.0/g'</span> kubernetes-dashboard.yaml <span class=\"comment\"># 注意此时gcr上面并没有v1.5.1</span></span><br><span class=\"line\">sed -i <span class=\"string\">'s/Alaways/IfNotPresent/g'</span> kubernetes-dashboard.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl create -f kubernetes-dashboard.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure>\n<h2 id=\"Delete-Pod\"><a href=\"#Delete-Pod\" class=\"headerlink\" title=\"Delete Pod\"></a>Delete Pod</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl delete -f xxx.yaml</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"MEOW\"><a href=\"#MEOW\" class=\"headerlink\" title=\"MEOW\"></a>MEOW</h2><p>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L git.io/meowproxy | bash</span><br><span class=\"line\"><span class=\"comment\"># 建议安装目录 /usr/bin/</span></span><br></pre></td></tr></table></figure>\n<p>复制自己的配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># in local computer</span></span><br><span class=\"line\">xclip -sel clipboard &lt; ~/.meow/rc</span><br><span class=\"line\"><span class=\"comment\"># in CentOS server</span></span><br><span class=\"line\">mv ~/.meow/rc ~/.meow/rc.bak</span><br><span class=\"line\">xclip -o -sel clipboard &gt; ~/.meow/rc</span><br></pre></td></tr></table></figure>","more":"<p>运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MEOW</span><br></pre></td></tr></table></figure>\n<h2 id=\"Hostname\"><a href=\"#Hostname\" class=\"headerlink\" title=\"Hostname\"></a>Hostname</h2><p>执行下面脚本。<strong>不要执行多次</strong> 如果出错则手动修改</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i s/localhost\\.localdomain/NAME/g /etc/hosts /etc/hostname </span><br><span class=\"line\">hostname=<span class=\"string\">\"10-10-103-144.node\"</span></span><br><span class=\"line\">rm -rf /etc/hostname</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$hostname</span> &gt; /etc/hostname </span><br><span class=\"line\">sed -i <span class=\"string\">\"s/\\slocalhost\\s/ localhost <span class=\"variable\">$hostname</span> /g\"</span> /etc/hosts</span><br><span class=\"line\">sysctl kernel.hostname=<span class=\"variable\">$hostname</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Screenfetch\"><a href=\"#Screenfetch\" class=\"headerlink\" title=\"Screenfetch\"></a>Screenfetch</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L https://raw.githubusercontent.com/KittyKatt/screenFetch/master/screenfetch-dev -o /usr/bin/screenfetch</span><br></pre></td></tr></table></figure>\n<h2 id=\"AWK简述\"><a href=\"#AWK简述\" class=\"headerlink\" title=\"AWK简述\"></a>AWK简述</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -v var1=xxx BEGIN&#123;[something]&#125; [ifstatments or regex]&#123;something match the condition&#125;&#123;[always run]&#125;END&#123;[something]&#125;</span><br><span class=\"line\"><span class=\"comment\"># 支持if else,for,i++</span></span><br><span class=\"line\"><span class=\"comment\"># 支持数组（支持for in遍历，但是顺序会打乱）</span></span><br><span class=\"line\"><span class=\"comment\"># 最好的批量初始化的方式： </span></span><br><span class=\"line\">arr[<span class=\"string\">\"\"</span>]=0 <span class=\"comment\"># 批量设为0</span></span><br><span class=\"line\">str=<span class=\"string\">\"a b c\"</span>; split(str,arr[,<span class=\"string\">\" \"</span>]);<span class=\"comment\"># [\"a\",\"b\",\"c\"]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"加Kubernetes源\"><a href=\"#加Kubernetes源\" class=\"headerlink\" title=\"加Kubernetes源\"></a>加Kubernetes源</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name=Kubernetes</span><br><span class=\"line\">baseurl=http://yum.kubernetes.io/repos/kubernetes-el7-x86_64</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">repo_gpgcheck=0</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Kubernetes\"><a href=\"#安装Kubernetes\" class=\"headerlink\" title=\"安装Kubernetes\"></a>安装Kubernetes</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install docker kubelet kubeadm kubectl kubernetes-cni</span><br></pre></td></tr></table></figure>\n<h2 id=\"启动进程-amp-关闭防火墙\"><a href=\"#启动进程-amp-关闭防火墙\" class=\"headerlink\" title=\"启动进程&amp;关闭防火墙\"></a>启动进程&amp;关闭防火墙</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start docker</span><br><span class=\"line\">systemctl start kubelet</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> docker </span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> kubelet </span><br><span class=\"line\">systemctl stop firewalld</span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld</span><br></pre></td></tr></table></figure>\n<h2 id=\"Tear-Down-当kubeadm-init失败时执行\"><a href=\"#Tear-Down-当kubeadm-init失败时执行\" class=\"headerlink\" title=\"Tear Down(当kubeadm init失败时执行)\"></a>Tear Down(当kubeadm init失败时执行)</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm reset &amp;&amp; systemctl start kubelet</span><br></pre></td></tr></table></figure>\n<h2 id=\"Pull-Docker-Images\"><a href=\"#Pull-Docker-Images\" class=\"headerlink\" title=\"Pull Docker Images\"></a>Pull Docker Images</h2><p><strong>此方式十分艰难。后面可以通过代理直接安装。见Tech Log@1-12</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#! /bin/bash</span></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -a images=(</span><br><span class=\"line\">    <span class=\"string\">'dnsmasq-metrics-amd64:1.0'</span></span><br><span class=\"line\">    <span class=\"string\">'etcd-amd64:3.0.14-kubeadm'</span></span><br><span class=\"line\">    <span class=\"string\">'exechealthz-amd64:v1.2.0'</span></span><br><span class=\"line\">    <span class=\"string\">'kube-apiserver-amd64:v1.5.1'</span></span><br><span class=\"line\">    <span class=\"string\">'kube-controller-manager-amd64:v1.5.1'</span></span><br><span class=\"line\">    <span class=\"string\">'kube-discovery-amd64:1.0'</span></span><br><span class=\"line\">    <span class=\"string\">'kube-dnsmasq-amd64:1.4'</span></span><br><span class=\"line\">    <span class=\"string\">'kube-proxy-amd64:v1.5.1'</span></span><br><span class=\"line\">    <span class=\"string\">'kube-scheduler-amd64:v1.5.1'</span></span><br><span class=\"line\">    <span class=\"string\">'kubedns-amd64:1.9'</span></span><br><span class=\"line\">    <span class=\"string\">'kubernetes-dashboard-amd64:v1.5.0'</span></span><br><span class=\"line\">    <span class=\"string\">'pause-amd64:3.0'</span></span><br><span class=\"line\"><span class=\"comment\">#   'weave-kube:1.8.1'</span></span><br><span class=\"line\"><span class=\"comment\">#   'weave-npc:1.8.1'</span></span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">for</span> imageName <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;images[@]&#125;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">    docker pull stkevintan/<span class=\"variable\">$imageName</span></span><br><span class=\"line\">    docker tag stkevintan/<span class=\"variable\">$imageName</span> gcr.io/google_containers/<span class=\"variable\">$imageName</span></span><br><span class=\"line\">    docker rmi stkevintan/<span class=\"variable\">$imageName</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xclip -o -sel clipboard &gt; pull_docker</span><br><span class=\"line\">chmod +x pull_docker</span><br><span class=\"line\">./pull_docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"初始化（Master）\"><a href=\"#初始化（Master）\" class=\"headerlink\" title=\"初始化（Master）\"></a>初始化（Master）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 首先需要使用@17-1-3的脚本设置代理。</span></span><br><span class=\"line\"><span class=\"comment\"># Del environment</span></span><br><span class=\"line\"><span class=\"comment\"># Set curl</span></span><br><span class=\"line\"><span class=\"comment\"># Set kube env</span></span><br><span class=\"line\"><span class=\"comment\"># Set docker</span></span><br><span class=\"line\"><span class=\"comment\"># 在/etc/default/docker的DOCKER_OPTS中加入:--insecure-registry gcr.io</span></span><br><span class=\"line\">root@10-10-103-144 ~ $ kubeadm init</span><br><span class=\"line\">[kubeadm] WARNING: kubeadm is <span class=\"keyword\">in</span> alpha, please <span class=\"keyword\">do</span> not use it <span class=\"keyword\">for</span> production clusters.</span><br><span class=\"line\">[preflight] Running pre-flight checks</span><br><span class=\"line\">[init] Using Kubernetes version: v1.5.2</span><br><span class=\"line\">[tokens] Generated token: <span class=\"string\">\"c30875.954dc1dda4d0184b\"</span></span><br><span class=\"line\">[certificates] Generated Certificate Authority key and certificate.</span><br><span class=\"line\">[certificates] Generated API Server key and certificate</span><br><span class=\"line\">[certificates] Generated Service Account signing keys</span><br><span class=\"line\">[certificates] Created keys and certificates <span class=\"keyword\">in</span> <span class=\"string\">\"/etc/kubernetes/pki\"</span></span><br><span class=\"line\">[kubeconfig] Wrote KubeConfig file to disk: <span class=\"string\">\"/etc/kubernetes/kubelet.conf\"</span></span><br><span class=\"line\">[kubeconfig] Wrote KubeConfig file to disk: <span class=\"string\">\"/etc/kubernetes/admin.conf\"</span></span><br><span class=\"line\">[apiclient] Created API client, waiting <span class=\"keyword\">for</span> the control plane to become ready</span><br><span class=\"line\">[apiclient] All control plane components are healthy after 16.391731 seconds</span><br><span class=\"line\">[apiclient] Waiting <span class=\"keyword\">for</span> at least one node to register and become ready</span><br><span class=\"line\">[apiclient] First node is ready after 0.509209 seconds</span><br><span class=\"line\">[apiclient] Creating a <span class=\"built_in\">test</span> deployment</span><br><span class=\"line\">[apiclient] Test deployment succeeded</span><br><span class=\"line\">[token-discovery] Created the kube-discovery deployment, waiting <span class=\"keyword\">for</span> it to become ready</span><br><span class=\"line\">[token-discovery] kube-discovery is ready after 3.505676 seconds</span><br><span class=\"line\">[addons] Created essential addon: kube-proxy</span><br><span class=\"line\">[addons] Created essential addon: kube-dns</span><br><span class=\"line\"></span><br><span class=\"line\">Your Kubernetes master has initialized successfully!</span><br><span class=\"line\"></span><br><span class=\"line\">You should now deploy a pod network to the cluster.</span><br><span class=\"line\">Run <span class=\"string\">\"kubectl apply -f [podnetwork].yaml\"</span> with one of the options listed at:</span><br><span class=\"line\">    http://kubernetes.io/docs/admin/addons/</span><br><span class=\"line\"></span><br><span class=\"line\">You can now join any number of machines by running the following on each node:</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join --token=c30875.954dc1dda4d0184b 10.10.103.144</span><br></pre></td></tr></table></figure>\n<h2 id=\"初始化（Node）\"><a href=\"#初始化（Node）\" class=\"headerlink\" title=\"初始化（Node）\"></a>初始化（Node）</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 需要在子节点上安装kubelet kubectl kubernetes-cni kubeadm</span></span><br><span class=\"line\"><span class=\"comment\"># 需要使用@17-1-3的脚本设置代理。</span></span><br><span class=\"line\"><span class=\"comment\"># Del environment</span></span><br><span class=\"line\"><span class=\"comment\"># Set curl</span></span><br><span class=\"line\"><span class=\"comment\"># Set kube env</span></span><br><span class=\"line\"><span class=\"comment\"># Set docker</span></span><br><span class=\"line\"><span class=\"comment\"># 在/etc/default/docker的DOCKER_OPTS中加入:--insecure-registry gcr.io</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> kubelet</span><br><span class=\"line\">systemctl start kubelet</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join --token=ace10c.73fcdec44f7a4045 10.10.103.146</span><br></pre></td></tr></table></figure>\n<p>可以在master节点上看到该子节点：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@master ~ $ kubectl get node</span><br><span class=\"line\">NAME      STATUS         AGE</span><br><span class=\"line\">master    Ready,master   5d</span><br><span class=\"line\">node1     Ready          1m</span><br></pre></td></tr></table></figure>\n<h2 id=\"Weave-Network\"><a href=\"#Weave-Network\" class=\"headerlink\" title=\"Weave Network\"></a>Weave Network</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># download config file</span></span><br><span class=\"line\">curl -L https://git.io/weave-kube -o weave-kube.yaml</span><br><span class=\"line\"><span class=\"comment\"># pull docker image</span></span><br><span class=\"line\">docker pull stkevintan/weave-kube:1.8.1</span><br><span class=\"line\">docker tag stkevintan/weave-kube:1.8.1 weaveworks/weave-kube:1.8.1</span><br><span class=\"line\">docker rmi stkevintan/weave-kube:1.8.1</span><br><span class=\"line\"><span class=\"comment\"># create</span></span><br><span class=\"line\">kubectl create -f weave-kube.yaml</span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">kubectl create -f https://git.io/weave-kube</span><br></pre></td></tr></table></figure>\n<p>可以看到结果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@master ~ $ kubectl get pod --namespace=kube-system</span><br><span class=\"line\">NAME                              READY     STATUS              RESTARTS   AGE</span><br><span class=\"line\">dummy-2088944543-bv5gj            1/1       Running             0          5d</span><br><span class=\"line\">etcd-master                       1/1       Running             0          5d</span><br><span class=\"line\">kube-apiserver-master             1/1       Running             27         5d</span><br><span class=\"line\">kube-controller-manager-master    1/1       Running             0          5d</span><br><span class=\"line\">kube-discovery-1769846148-xbm2h   1/1       Running             0          5d</span><br><span class=\"line\">kube-dns-2924299975-phn03         0/4       ContainerCreating   0          5d</span><br><span class=\"line\">kube-proxy-081gt                  1/1       Running             0          5d</span><br><span class=\"line\">kube-proxy-qc40l                  1/1       Running             0          1h</span><br><span class=\"line\">kube-scheduler-master             1/1       Running             1          5d</span><br><span class=\"line\">weave-net-4wvkm                   0/2       ContainerCreating   0          30s</span><br><span class=\"line\">weave-net-l7dh0                   0/2       ContainerCreating   0          30s</span><br></pre></td></tr></table></figure>\n<h2 id=\"Dashboard\"><a href=\"#Dashboard\" class=\"headerlink\" title=\"Dashboard\"></a>Dashboard</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml -o kubernetes-dashboard.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i <span class=\"string\">'s/v1.5.1/v1.5.0/g'</span> kubernetes-dashboard.yaml <span class=\"comment\"># 注意此时gcr上面并没有v1.5.1</span></span><br><span class=\"line\">sed -i <span class=\"string\">'s/Alaways/IfNotPresent/g'</span> kubernetes-dashboard.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl create -f kubernetes-dashboard.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure>\n<h2 id=\"Delete-Pod\"><a href=\"#Delete-Pod\" class=\"headerlink\" title=\"Delete Pod\"></a>Delete Pod</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl delete -f xxx.yaml</span><br></pre></td></tr></table></figure>"},{"title":"Centos初始化2","date":"2017-01-03T16:00:00.000Z","_content":"\n## proxychains-ng\n\n```bash\ngit clone https://github.com/rofl0r/proxychains-ng\ncd proxychains-ng                                 \n./configure --prefix=/usr --sysconfdir=/etc \nmake\nmake install\nmake install-config   # 生成配置文件\necho 'http 10.100.100.136 4411' >> /etc/proxychains.conf  # 输入代理设置\n```\n\n<!-- more -->\n\n## TMUX\n\nCentOS的版本太老，手动编译最新版本\n\n```bash\nyum install ncurses-devel libevent-devel\ncurl -L https://github.com/tmux/tmux/releases/download/2.3/tmux-2.3.tar.gz | tar xz\ncd tmux-2.3\n./configure\nmake\nmake install\n```\n\n如果出现`protocol version mismatch`错误，说明现在tmux正在运行，手动结束掉即可。\n\n```bash\nkill -9 `pidof tmux`\n```\n\n\n\n### theme\n\n```bash\ngit clone https://github.com/gpakosz/.tmux.git\nln -s -f .tmux/.tmux.conf\ncp .tmux/.tmux.conf.local .\nvim .tmux.conf.local #编辑配置文件\n# 去掉status left/right sections separators后面几行的注释（终端字体需要支持Powerline）\n# 启用 force vi mode\n```\n\n### shortcuts\n\n```bash\n# Session\n:new[-s name]  # new session\n:kill-session[-t name] # kill session\n:ls # list sessions\nC-c # new session\ns  # list and select sessions\n$  # name session\n\n==============================================\n\n# Window\nc  # create window\nw  # list windows\nn  # next window\np  # previous window\nf  # find window\n,  # name window\n&  # kill window\n\n===============================================\n\n# Panes\n%  #vertical split\n\"  # horizontal split\no  # swap panes\nq  # show pane numbers\nx  # kill pane\n+  # 最大化pane，再按一次还原\n-  # restore pane from window\n⍽  # space - toggle between layouts\nq  # (Show pane numbers, when the numbers show up type the key to goto that pane)\n{  # (Move the current pane left)\n}  # (Move the current pane right)\nz  # toggle pane zoom\n方向键 # select the sibling pane\nC-方向键 # resize current pane\n\n================================================\n\n# Misc\nd  # detach\nt  # big clock\n?  # list shortcuts\n:  # prompt\n```\n\n### Tmux Plugin Manager && tmux-yank\n\ntmux-yank可以将tmux的paste-buffer中的文字拷贝到系统剪贴板\n\n```bash\nyumi xclip # 安装依赖\ngit clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm \nvim .tmux.conf # 在最后添加下面几行，注意不是 .tmux.conf.local!!!\n```\n\n```bash\n# List of plugins\nset -g @plugin 'tmux-plugins/tpm'\nset -g @plugin 'tmux-plugins/tmux-yank'\n\n# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)\nrun '~/.tmux/plugins/tpm/tpm'\n```\n\n然后，重新加载tmux，按<prefix> + I 安装`tmux-yank`插件\n\n然后，并不能奏效，因为xclip需要有X服务。然而ssh客户端Centos只是纯命令行。需要开启`X11Forwarding`\n\n## X11Forwarding\n\n1. 在远程Centos中的`/etc/ssh/ssh_config`文件中，添加`X11Forwarding yes`\n\n2. 在远程Centos中安装认证软件：`yumi xorg-x11-xauth`\n\n3. 在本地ssh连接命令添加`-Y`参数\n\n   启用x11转发之后就可以在Centos中启动x11程序了，可以安装轻量级的xfce4-terminal方便操作。\n\n## Prezto\n\n```bash\n  git clone --recursive https://github.com/sorin-ionescu/prezto.git \"${ZDOTDIR:-$HOME}/.zprezto\"\nrm -rf .zshrc .zpreztorc .zlogin .zlogout .zprofile .zshenv .zhistory .zcompdump\nsetopt EXTENDED_GLOB\nfor rcfile in \"${ZDOTDIR:-$HOME}\"/.zprezto/runcoms/^README.md(.N); do\n  ln -s \"$rcfile\" \"${ZDOTDIR:-$HOME}/.${rcfile:t}\"\ndone\n\n# 主题列表\nprompt -l\n# 预览主题\nprompt -p NAME\n# 做个备份\nmv .zpreztorc .zpreztorc.tmp\n# 添加常用插件(不要第二次运行，而是手动修改.zpreztorc文件)\nawk -v s=\"syntax-highlighting git command-not-found yum history-substring-search autosuggestions\" \\\n'BEGIN{n=split(s,m)}/'\\''utility'\\''\\s+\\\\/{for(i=1;i<=n;i++)printf(\"  '\\''%s'\\'' \\\\\\n\",m[i])}{print}' .zpreztorc.tmp > .zpreztorc\n# 修改默认主题（推荐 skwp）\nsed -i \"s/\\(zstyle.*theme\\s\\).*/\\1'skwp'/\" .zpreztorc\n```\n\n\nYum Aliases\n-------\n\n- `yumc` removes package(s) and leaves.\n- `yumi` installs package(s).\n- `yumh` displays history.\n- `yuml` lists packages.\n- `yumL` lists installed packages.\n- `yumq` displays package information.\n- `yumr` removes package(s).\n- `yums` searches for a package.\n- `yumu` updates packages.\n- `yumU` upgrades packages.\n\n\n## spf13 Vim\n\n```bash\ncurl https://j.mp/spf13-vim3 -L > spf13-vim.sh && sh spf13-vim.sh\n```\n\n","source":"_posts/CentOS2@1-4.md","raw":"---\ntitle: Centos初始化2\ndate: 2017-1-4\ntags:\n  - centos\n  - tmux\n  - prezto\ncategories:\n  - Linux\n---\n\n## proxychains-ng\n\n```bash\ngit clone https://github.com/rofl0r/proxychains-ng\ncd proxychains-ng                                 \n./configure --prefix=/usr --sysconfdir=/etc \nmake\nmake install\nmake install-config   # 生成配置文件\necho 'http 10.100.100.136 4411' >> /etc/proxychains.conf  # 输入代理设置\n```\n\n<!-- more -->\n\n## TMUX\n\nCentOS的版本太老，手动编译最新版本\n\n```bash\nyum install ncurses-devel libevent-devel\ncurl -L https://github.com/tmux/tmux/releases/download/2.3/tmux-2.3.tar.gz | tar xz\ncd tmux-2.3\n./configure\nmake\nmake install\n```\n\n如果出现`protocol version mismatch`错误，说明现在tmux正在运行，手动结束掉即可。\n\n```bash\nkill -9 `pidof tmux`\n```\n\n\n\n### theme\n\n```bash\ngit clone https://github.com/gpakosz/.tmux.git\nln -s -f .tmux/.tmux.conf\ncp .tmux/.tmux.conf.local .\nvim .tmux.conf.local #编辑配置文件\n# 去掉status left/right sections separators后面几行的注释（终端字体需要支持Powerline）\n# 启用 force vi mode\n```\n\n### shortcuts\n\n```bash\n# Session\n:new[-s name]  # new session\n:kill-session[-t name] # kill session\n:ls # list sessions\nC-c # new session\ns  # list and select sessions\n$  # name session\n\n==============================================\n\n# Window\nc  # create window\nw  # list windows\nn  # next window\np  # previous window\nf  # find window\n,  # name window\n&  # kill window\n\n===============================================\n\n# Panes\n%  #vertical split\n\"  # horizontal split\no  # swap panes\nq  # show pane numbers\nx  # kill pane\n+  # 最大化pane，再按一次还原\n-  # restore pane from window\n⍽  # space - toggle between layouts\nq  # (Show pane numbers, when the numbers show up type the key to goto that pane)\n{  # (Move the current pane left)\n}  # (Move the current pane right)\nz  # toggle pane zoom\n方向键 # select the sibling pane\nC-方向键 # resize current pane\n\n================================================\n\n# Misc\nd  # detach\nt  # big clock\n?  # list shortcuts\n:  # prompt\n```\n\n### Tmux Plugin Manager && tmux-yank\n\ntmux-yank可以将tmux的paste-buffer中的文字拷贝到系统剪贴板\n\n```bash\nyumi xclip # 安装依赖\ngit clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm \nvim .tmux.conf # 在最后添加下面几行，注意不是 .tmux.conf.local!!!\n```\n\n```bash\n# List of plugins\nset -g @plugin 'tmux-plugins/tpm'\nset -g @plugin 'tmux-plugins/tmux-yank'\n\n# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)\nrun '~/.tmux/plugins/tpm/tpm'\n```\n\n然后，重新加载tmux，按<prefix> + I 安装`tmux-yank`插件\n\n然后，并不能奏效，因为xclip需要有X服务。然而ssh客户端Centos只是纯命令行。需要开启`X11Forwarding`\n\n## X11Forwarding\n\n1. 在远程Centos中的`/etc/ssh/ssh_config`文件中，添加`X11Forwarding yes`\n\n2. 在远程Centos中安装认证软件：`yumi xorg-x11-xauth`\n\n3. 在本地ssh连接命令添加`-Y`参数\n\n   启用x11转发之后就可以在Centos中启动x11程序了，可以安装轻量级的xfce4-terminal方便操作。\n\n## Prezto\n\n```bash\n  git clone --recursive https://github.com/sorin-ionescu/prezto.git \"${ZDOTDIR:-$HOME}/.zprezto\"\nrm -rf .zshrc .zpreztorc .zlogin .zlogout .zprofile .zshenv .zhistory .zcompdump\nsetopt EXTENDED_GLOB\nfor rcfile in \"${ZDOTDIR:-$HOME}\"/.zprezto/runcoms/^README.md(.N); do\n  ln -s \"$rcfile\" \"${ZDOTDIR:-$HOME}/.${rcfile:t}\"\ndone\n\n# 主题列表\nprompt -l\n# 预览主题\nprompt -p NAME\n# 做个备份\nmv .zpreztorc .zpreztorc.tmp\n# 添加常用插件(不要第二次运行，而是手动修改.zpreztorc文件)\nawk -v s=\"syntax-highlighting git command-not-found yum history-substring-search autosuggestions\" \\\n'BEGIN{n=split(s,m)}/'\\''utility'\\''\\s+\\\\/{for(i=1;i<=n;i++)printf(\"  '\\''%s'\\'' \\\\\\n\",m[i])}{print}' .zpreztorc.tmp > .zpreztorc\n# 修改默认主题（推荐 skwp）\nsed -i \"s/\\(zstyle.*theme\\s\\).*/\\1'skwp'/\" .zpreztorc\n```\n\n\nYum Aliases\n-------\n\n- `yumc` removes package(s) and leaves.\n- `yumi` installs package(s).\n- `yumh` displays history.\n- `yuml` lists packages.\n- `yumL` lists installed packages.\n- `yumq` displays package information.\n- `yumr` removes package(s).\n- `yums` searches for a package.\n- `yumu` updates packages.\n- `yumU` upgrades packages.\n\n\n## spf13 Vim\n\n```bash\ncurl https://j.mp/spf13-vim3 -L > spf13-vim.sh && sh spf13-vim.sh\n```\n\n","slug":"CentOS2@1-4","published":1,"updated":"2019-10-11T05:50:15.632Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1uam0q20007s8qqtjvyapn0","content":"<h2 id=\"proxychains-ng\"><a href=\"#proxychains-ng\" class=\"headerlink\" title=\"proxychains-ng\"></a>proxychains-ng</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/rofl0r/proxychains-ng</span><br><span class=\"line\"><span class=\"built_in\">cd</span> proxychains-ng                                 </span><br><span class=\"line\">./configure --prefix=/usr --sysconfdir=/etc </span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br><span class=\"line\">make install-config   <span class=\"comment\"># 生成配置文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'http 10.100.100.136 4411'</span> &gt;&gt; /etc/proxychains.conf  <span class=\"comment\"># 输入代理设置</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"TMUX\"><a href=\"#TMUX\" class=\"headerlink\" title=\"TMUX\"></a>TMUX</h2><p>CentOS的版本太老，手动编译最新版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install ncurses-devel libevent-devel</span><br><span class=\"line\">curl -L https://github.com/tmux/tmux/releases/download/2.3/tmux-2.3.tar.gz | tar xz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> tmux-2.3</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n<p>如果出现<code>protocol version mismatch</code>错误，说明现在tmux正在运行，手动结束掉即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">kill</span> -9 `pidof tmux`</span><br></pre></td></tr></table></figure>\n<h3 id=\"theme\"><a href=\"#theme\" class=\"headerlink\" title=\"theme\"></a>theme</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/gpakosz/.tmux.git</span><br><span class=\"line\">ln -s -f .tmux/.tmux.conf</span><br><span class=\"line\">cp .tmux/.tmux.conf.local .</span><br><span class=\"line\">vim .tmux.conf.local <span class=\"comment\">#编辑配置文件</span></span><br><span class=\"line\"><span class=\"comment\"># 去掉status left/right sections separators后面几行的注释（终端字体需要支持Powerline）</span></span><br><span class=\"line\"><span class=\"comment\"># 启用 force vi mode</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"shortcuts\"><a href=\"#shortcuts\" class=\"headerlink\" title=\"shortcuts\"></a>shortcuts</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Session</span></span><br><span class=\"line\">:new[-s name]  <span class=\"comment\"># new session</span></span><br><span class=\"line\">:<span class=\"built_in\">kill</span>-session[-t name] <span class=\"comment\"># kill session</span></span><br><span class=\"line\">:ls <span class=\"comment\"># list sessions</span></span><br><span class=\"line\">C-c <span class=\"comment\"># new session</span></span><br><span class=\"line\">s  <span class=\"comment\"># list and select sessions</span></span><br><span class=\"line\">$  <span class=\"comment\"># name session</span></span><br><span class=\"line\"></span><br><span class=\"line\">==============================================</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Window</span></span><br><span class=\"line\">c  <span class=\"comment\"># create window</span></span><br><span class=\"line\">w  <span class=\"comment\"># list windows</span></span><br><span class=\"line\">n  <span class=\"comment\"># next window</span></span><br><span class=\"line\">p  <span class=\"comment\"># previous window</span></span><br><span class=\"line\">f  <span class=\"comment\"># find window</span></span><br><span class=\"line\">,  <span class=\"comment\"># name window</span></span><br><span class=\"line\">&amp;  <span class=\"comment\"># kill window</span></span><br><span class=\"line\"></span><br><span class=\"line\">===============================================</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Panes</span></span><br><span class=\"line\">%  <span class=\"comment\">#vertical split</span></span><br><span class=\"line\"><span class=\"string\">\"  # horizontal split</span></span><br><span class=\"line\"><span class=\"string\">o  # swap panes</span></span><br><span class=\"line\"><span class=\"string\">q  # show pane numbers</span></span><br><span class=\"line\"><span class=\"string\">x  # kill pane</span></span><br><span class=\"line\"><span class=\"string\">+  # 最大化pane，再按一次还原</span></span><br><span class=\"line\"><span class=\"string\">-  # restore pane from window</span></span><br><span class=\"line\"><span class=\"string\">⍽  # space - toggle between layouts</span></span><br><span class=\"line\"><span class=\"string\">q  # (Show pane numbers, when the numbers show up type the key to goto that pane)</span></span><br><span class=\"line\"><span class=\"string\">&#123;  # (Move the current pane left)</span></span><br><span class=\"line\"><span class=\"string\">&#125;  # (Move the current pane right)</span></span><br><span class=\"line\"><span class=\"string\">z  # toggle pane zoom</span></span><br><span class=\"line\"><span class=\"string\">方向键 # select the sibling pane</span></span><br><span class=\"line\"><span class=\"string\">C-方向键 # resize current pane</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">================================================</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># Misc</span></span><br><span class=\"line\"><span class=\"string\">d  # detach</span></span><br><span class=\"line\"><span class=\"string\">t  # big clock</span></span><br><span class=\"line\"><span class=\"string\">?  # list shortcuts</span></span><br><span class=\"line\"><span class=\"string\">:  # prompt</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Tmux-Plugin-Manager-amp-amp-tmux-yank\"><a href=\"#Tmux-Plugin-Manager-amp-amp-tmux-yank\" class=\"headerlink\" title=\"Tmux Plugin Manager &amp;&amp; tmux-yank\"></a>Tmux Plugin Manager &amp;&amp; tmux-yank</h3><p>tmux-yank可以将tmux的paste-buffer中的文字拷贝到系统剪贴板</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yumi xclip <span class=\"comment\"># 安装依赖</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm </span><br><span class=\"line\">vim .tmux.conf <span class=\"comment\"># 在最后添加下面几行，注意不是 .tmux.conf.local!!!</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># List of plugins</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> -g @plugin <span class=\"string\">'tmux-plugins/tpm'</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> -g @plugin <span class=\"string\">'tmux-plugins/tmux-yank'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)</span></span><br><span class=\"line\">run <span class=\"string\">'~/.tmux/plugins/tpm/tpm'</span></span><br></pre></td></tr></table></figure>\n<p>然后，重新加载tmux，按<prefix> + I 安装<code>tmux-yank</code>插件</prefix></p>\n<p>然后，并不能奏效，因为xclip需要有X服务。然而ssh客户端Centos只是纯命令行。需要开启<code>X11Forwarding</code></p>\n<h2 id=\"X11Forwarding\"><a href=\"#X11Forwarding\" class=\"headerlink\" title=\"X11Forwarding\"></a>X11Forwarding</h2><ol>\n<li><p>在远程Centos中的<code>/etc/ssh/ssh_config</code>文件中，添加<code>X11Forwarding yes</code></p>\n</li>\n<li><p>在远程Centos中安装认证软件：<code>yumi xorg-x11-xauth</code></p>\n</li>\n<li><p>在本地ssh连接命令添加<code>-Y</code>参数</p>\n<p>启用x11转发之后就可以在Centos中启动x11程序了，可以安装轻量级的xfce4-terminal方便操作。</p>\n</li>\n</ol>\n<h2 id=\"Prezto\"><a href=\"#Prezto\" class=\"headerlink\" title=\"Prezto\"></a>Prezto</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  git <span class=\"built_in\">clone</span> --recursive https://github.com/sorin-ionescu/prezto.git <span class=\"string\">\"<span class=\"variable\">$&#123;ZDOTDIR:-$HOME&#125;</span>/.zprezto\"</span></span><br><span class=\"line\">rm -rf .zshrc .zpreztorc .zlogin .zlogout .zprofile .zshenv .zhistory .zcompdump</span><br><span class=\"line\"><span class=\"built_in\">setopt</span> EXTENDED_GLOB</span><br><span class=\"line\"><span class=\"keyword\">for</span> rcfile <span class=\"keyword\">in</span> <span class=\"string\">\"<span class=\"variable\">$&#123;ZDOTDIR:-$HOME&#125;</span>\"</span>/.zprezto/runcoms/^README.md(.N); <span class=\"keyword\">do</span></span><br><span class=\"line\">  ln -s <span class=\"string\">\"<span class=\"variable\">$rcfile</span>\"</span> <span class=\"string\">\"<span class=\"variable\">$&#123;ZDOTDIR:-$HOME&#125;</span>/.<span class=\"variable\">$&#123;rcfile:t&#125;</span>\"</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 主题列表</span></span><br><span class=\"line\">prompt -l</span><br><span class=\"line\"><span class=\"comment\"># 预览主题</span></span><br><span class=\"line\">prompt -p NAME</span><br><span class=\"line\"><span class=\"comment\"># 做个备份</span></span><br><span class=\"line\">mv .zpreztorc .zpreztorc.tmp</span><br><span class=\"line\"><span class=\"comment\"># 添加常用插件(不要第二次运行，而是手动修改.zpreztorc文件)</span></span><br><span class=\"line\">awk -v s=<span class=\"string\">\"syntax-highlighting git command-not-found yum history-substring-search autosuggestions\"</span> \\</span><br><span class=\"line\"><span class=\"string\">'BEGIN&#123;n=split(s,m)&#125;/'</span>\\<span class=\"string\">''</span>utility<span class=\"string\">'\\'</span><span class=\"string\">'\\s+\\\\/&#123;for(i=1;i&lt;=n;i++)printf(\"  '</span>\\<span class=\"string\">''</span>%s<span class=\"string\">'\\'</span><span class=\"string\">' \\\\\\n\",m[i])&#125;&#123;print&#125;'</span> .zpreztorc.tmp &gt; .zpreztorc</span><br><span class=\"line\"><span class=\"comment\"># 修改默认主题（推荐 skwp）</span></span><br><span class=\"line\">sed -i <span class=\"string\">\"s/\\(zstyle.*theme\\s\\).*/\\1'skwp'/\"</span> .zpreztorc</span><br></pre></td></tr></table></figure>\n<h2 id=\"Yum-Aliases\"><a href=\"#Yum-Aliases\" class=\"headerlink\" title=\"Yum Aliases\"></a>Yum Aliases</h2><ul>\n<li><code>yumc</code> removes package(s) and leaves.</li>\n<li><code>yumi</code> installs package(s).</li>\n<li><code>yumh</code> displays history.</li>\n<li><code>yuml</code> lists packages.</li>\n<li><code>yumL</code> lists installed packages.</li>\n<li><code>yumq</code> displays package information.</li>\n<li><code>yumr</code> removes package(s).</li>\n<li><code>yums</code> searches for a package.</li>\n<li><code>yumu</code> updates packages.</li>\n<li><code>yumU</code> upgrades packages.</li>\n</ul>\n<h2 id=\"spf13-Vim\"><a href=\"#spf13-Vim\" class=\"headerlink\" title=\"spf13 Vim\"></a>spf13 Vim</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://j.mp/spf13-vim3 -L &gt; spf13-vim.sh &amp;&amp; sh spf13-vim.sh</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"proxychains-ng\"><a href=\"#proxychains-ng\" class=\"headerlink\" title=\"proxychains-ng\"></a>proxychains-ng</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/rofl0r/proxychains-ng</span><br><span class=\"line\"><span class=\"built_in\">cd</span> proxychains-ng                                 </span><br><span class=\"line\">./configure --prefix=/usr --sysconfdir=/etc </span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br><span class=\"line\">make install-config   <span class=\"comment\"># 生成配置文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'http 10.100.100.136 4411'</span> &gt;&gt; /etc/proxychains.conf  <span class=\"comment\"># 输入代理设置</span></span><br></pre></td></tr></table></figure>","more":"<h2 id=\"TMUX\"><a href=\"#TMUX\" class=\"headerlink\" title=\"TMUX\"></a>TMUX</h2><p>CentOS的版本太老，手动编译最新版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install ncurses-devel libevent-devel</span><br><span class=\"line\">curl -L https://github.com/tmux/tmux/releases/download/2.3/tmux-2.3.tar.gz | tar xz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> tmux-2.3</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n<p>如果出现<code>protocol version mismatch</code>错误，说明现在tmux正在运行，手动结束掉即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">kill</span> -9 `pidof tmux`</span><br></pre></td></tr></table></figure>\n<h3 id=\"theme\"><a href=\"#theme\" class=\"headerlink\" title=\"theme\"></a>theme</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/gpakosz/.tmux.git</span><br><span class=\"line\">ln -s -f .tmux/.tmux.conf</span><br><span class=\"line\">cp .tmux/.tmux.conf.local .</span><br><span class=\"line\">vim .tmux.conf.local <span class=\"comment\">#编辑配置文件</span></span><br><span class=\"line\"><span class=\"comment\"># 去掉status left/right sections separators后面几行的注释（终端字体需要支持Powerline）</span></span><br><span class=\"line\"><span class=\"comment\"># 启用 force vi mode</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"shortcuts\"><a href=\"#shortcuts\" class=\"headerlink\" title=\"shortcuts\"></a>shortcuts</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Session</span></span><br><span class=\"line\">:new[-s name]  <span class=\"comment\"># new session</span></span><br><span class=\"line\">:<span class=\"built_in\">kill</span>-session[-t name] <span class=\"comment\"># kill session</span></span><br><span class=\"line\">:ls <span class=\"comment\"># list sessions</span></span><br><span class=\"line\">C-c <span class=\"comment\"># new session</span></span><br><span class=\"line\">s  <span class=\"comment\"># list and select sessions</span></span><br><span class=\"line\">$  <span class=\"comment\"># name session</span></span><br><span class=\"line\"></span><br><span class=\"line\">==============================================</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Window</span></span><br><span class=\"line\">c  <span class=\"comment\"># create window</span></span><br><span class=\"line\">w  <span class=\"comment\"># list windows</span></span><br><span class=\"line\">n  <span class=\"comment\"># next window</span></span><br><span class=\"line\">p  <span class=\"comment\"># previous window</span></span><br><span class=\"line\">f  <span class=\"comment\"># find window</span></span><br><span class=\"line\">,  <span class=\"comment\"># name window</span></span><br><span class=\"line\">&amp;  <span class=\"comment\"># kill window</span></span><br><span class=\"line\"></span><br><span class=\"line\">===============================================</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Panes</span></span><br><span class=\"line\">%  <span class=\"comment\">#vertical split</span></span><br><span class=\"line\"><span class=\"string\">\"  # horizontal split</span></span><br><span class=\"line\"><span class=\"string\">o  # swap panes</span></span><br><span class=\"line\"><span class=\"string\">q  # show pane numbers</span></span><br><span class=\"line\"><span class=\"string\">x  # kill pane</span></span><br><span class=\"line\"><span class=\"string\">+  # 最大化pane，再按一次还原</span></span><br><span class=\"line\"><span class=\"string\">-  # restore pane from window</span></span><br><span class=\"line\"><span class=\"string\">⍽  # space - toggle between layouts</span></span><br><span class=\"line\"><span class=\"string\">q  # (Show pane numbers, when the numbers show up type the key to goto that pane)</span></span><br><span class=\"line\"><span class=\"string\">&#123;  # (Move the current pane left)</span></span><br><span class=\"line\"><span class=\"string\">&#125;  # (Move the current pane right)</span></span><br><span class=\"line\"><span class=\"string\">z  # toggle pane zoom</span></span><br><span class=\"line\"><span class=\"string\">方向键 # select the sibling pane</span></span><br><span class=\"line\"><span class=\"string\">C-方向键 # resize current pane</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">================================================</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># Misc</span></span><br><span class=\"line\"><span class=\"string\">d  # detach</span></span><br><span class=\"line\"><span class=\"string\">t  # big clock</span></span><br><span class=\"line\"><span class=\"string\">?  # list shortcuts</span></span><br><span class=\"line\"><span class=\"string\">:  # prompt</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Tmux-Plugin-Manager-amp-amp-tmux-yank\"><a href=\"#Tmux-Plugin-Manager-amp-amp-tmux-yank\" class=\"headerlink\" title=\"Tmux Plugin Manager &amp;&amp; tmux-yank\"></a>Tmux Plugin Manager &amp;&amp; tmux-yank</h3><p>tmux-yank可以将tmux的paste-buffer中的文字拷贝到系统剪贴板</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yumi xclip <span class=\"comment\"># 安装依赖</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm </span><br><span class=\"line\">vim .tmux.conf <span class=\"comment\"># 在最后添加下面几行，注意不是 .tmux.conf.local!!!</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># List of plugins</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> -g @plugin <span class=\"string\">'tmux-plugins/tpm'</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> -g @plugin <span class=\"string\">'tmux-plugins/tmux-yank'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)</span></span><br><span class=\"line\">run <span class=\"string\">'~/.tmux/plugins/tpm/tpm'</span></span><br></pre></td></tr></table></figure>\n<p>然后，重新加载tmux，按<prefix> + I 安装<code>tmux-yank</code>插件</prefix></p>\n<p>然后，并不能奏效，因为xclip需要有X服务。然而ssh客户端Centos只是纯命令行。需要开启<code>X11Forwarding</code></p>\n<h2 id=\"X11Forwarding\"><a href=\"#X11Forwarding\" class=\"headerlink\" title=\"X11Forwarding\"></a>X11Forwarding</h2><ol>\n<li><p>在远程Centos中的<code>/etc/ssh/ssh_config</code>文件中，添加<code>X11Forwarding yes</code></p>\n</li>\n<li><p>在远程Centos中安装认证软件：<code>yumi xorg-x11-xauth</code></p>\n</li>\n<li><p>在本地ssh连接命令添加<code>-Y</code>参数</p>\n<p>启用x11转发之后就可以在Centos中启动x11程序了，可以安装轻量级的xfce4-terminal方便操作。</p>\n</li>\n</ol>\n<h2 id=\"Prezto\"><a href=\"#Prezto\" class=\"headerlink\" title=\"Prezto\"></a>Prezto</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  git <span class=\"built_in\">clone</span> --recursive https://github.com/sorin-ionescu/prezto.git <span class=\"string\">\"<span class=\"variable\">$&#123;ZDOTDIR:-$HOME&#125;</span>/.zprezto\"</span></span><br><span class=\"line\">rm -rf .zshrc .zpreztorc .zlogin .zlogout .zprofile .zshenv .zhistory .zcompdump</span><br><span class=\"line\"><span class=\"built_in\">setopt</span> EXTENDED_GLOB</span><br><span class=\"line\"><span class=\"keyword\">for</span> rcfile <span class=\"keyword\">in</span> <span class=\"string\">\"<span class=\"variable\">$&#123;ZDOTDIR:-$HOME&#125;</span>\"</span>/.zprezto/runcoms/^README.md(.N); <span class=\"keyword\">do</span></span><br><span class=\"line\">  ln -s <span class=\"string\">\"<span class=\"variable\">$rcfile</span>\"</span> <span class=\"string\">\"<span class=\"variable\">$&#123;ZDOTDIR:-$HOME&#125;</span>/.<span class=\"variable\">$&#123;rcfile:t&#125;</span>\"</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 主题列表</span></span><br><span class=\"line\">prompt -l</span><br><span class=\"line\"><span class=\"comment\"># 预览主题</span></span><br><span class=\"line\">prompt -p NAME</span><br><span class=\"line\"><span class=\"comment\"># 做个备份</span></span><br><span class=\"line\">mv .zpreztorc .zpreztorc.tmp</span><br><span class=\"line\"><span class=\"comment\"># 添加常用插件(不要第二次运行，而是手动修改.zpreztorc文件)</span></span><br><span class=\"line\">awk -v s=<span class=\"string\">\"syntax-highlighting git command-not-found yum history-substring-search autosuggestions\"</span> \\</span><br><span class=\"line\"><span class=\"string\">'BEGIN&#123;n=split(s,m)&#125;/'</span>\\<span class=\"string\">''</span>utility<span class=\"string\">'\\'</span><span class=\"string\">'\\s+\\\\/&#123;for(i=1;i&lt;=n;i++)printf(\"  '</span>\\<span class=\"string\">''</span>%s<span class=\"string\">'\\'</span><span class=\"string\">' \\\\\\n\",m[i])&#125;&#123;print&#125;'</span> .zpreztorc.tmp &gt; .zpreztorc</span><br><span class=\"line\"><span class=\"comment\"># 修改默认主题（推荐 skwp）</span></span><br><span class=\"line\">sed -i <span class=\"string\">\"s/\\(zstyle.*theme\\s\\).*/\\1'skwp'/\"</span> .zpreztorc</span><br></pre></td></tr></table></figure>\n<h2 id=\"Yum-Aliases\"><a href=\"#Yum-Aliases\" class=\"headerlink\" title=\"Yum Aliases\"></a>Yum Aliases</h2><ul>\n<li><code>yumc</code> removes package(s) and leaves.</li>\n<li><code>yumi</code> installs package(s).</li>\n<li><code>yumh</code> displays history.</li>\n<li><code>yuml</code> lists packages.</li>\n<li><code>yumL</code> lists installed packages.</li>\n<li><code>yumq</code> displays package information.</li>\n<li><code>yumr</code> removes package(s).</li>\n<li><code>yums</code> searches for a package.</li>\n<li><code>yumu</code> updates packages.</li>\n<li><code>yumU</code> upgrades packages.</li>\n</ul>\n<h2 id=\"spf13-Vim\"><a href=\"#spf13-Vim\" class=\"headerlink\" title=\"spf13 Vim\"></a>spf13 Vim</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://j.mp/spf13-vim3 -L &gt; spf13-vim.sh &amp;&amp; sh spf13-vim.sh</span><br></pre></td></tr></table></figure>"},{"title":"Deepin初始化","date":"2017-01-11T16:00:00.000Z","_content":"\n\n\n## Infinality and Harfbuzz\n\n会发生冲突，这是今天Archlinux无法启动输入法界面的元凶。重新安装freetype2\\fontconfig\\cairo以替换infinality-bundle。\n\n\n\n## 添加PPA出现GPG问题\n\n#### 问题：\n\n```bash\ngpg: keybox '/tmp/tmpyiw6jvck/pubring.gpg' created\ngpg: /tmp/tmpyiw6jvck/trustdb.gpg：建立了信任度数据库\ngpg: 密钥 531EE72F4C9D234C：公钥“Launchpad webupd8”已导入\ngpg: 合计被处理的数量：1\ngpg:           已导入：1\ngpg: 找不到有效的 OpenPGP 数据。\n```\n<!-- more -->\n\n\n#### 可能原因：\n\nkeyserver.ubuntu.com使用非标准的11371端口，而一般公司的防火墙都屏蔽掉了该端口，而允许标准的80端口。\n\n#### 解决方法：\n\n```bash\nsudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 531EE72F4C9D234C\n# 或者\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E985B27B\n```\n\n\n\n## Telnet\n\n需要安装server的\n\n```bash\n# ubuntu\nsudo apt install telnetd\nsudo systemctl start inetd\nsudo systemctl enable inetd\n# arch\nsudo systemctl start telnet.socket\nsudo systemctl enable telnet.socket\n```\n\n使用telnet测试端口是否打开：\n\n```bash\ntelnet localhost 33171\n```\n\n\n\n## Github Online File Tree View Plugin\n\n[Octotree](https://github.com/buunguyen/octotree)\n\n\n\n","source":"_posts/Kubernetes-&-Deepin-Settings@1-12.md","raw":"---\ntitle: Deepin初始化\ndate: 2017-1-12\ntags:\n  - deepin\n  - ppa\n  - octotree\n  - infinality fonts\ncategories:\n  - Linux\n---\n\n\n\n## Infinality and Harfbuzz\n\n会发生冲突，这是今天Archlinux无法启动输入法界面的元凶。重新安装freetype2\\fontconfig\\cairo以替换infinality-bundle。\n\n\n\n## 添加PPA出现GPG问题\n\n#### 问题：\n\n```bash\ngpg: keybox '/tmp/tmpyiw6jvck/pubring.gpg' created\ngpg: /tmp/tmpyiw6jvck/trustdb.gpg：建立了信任度数据库\ngpg: 密钥 531EE72F4C9D234C：公钥“Launchpad webupd8”已导入\ngpg: 合计被处理的数量：1\ngpg:           已导入：1\ngpg: 找不到有效的 OpenPGP 数据。\n```\n<!-- more -->\n\n\n#### 可能原因：\n\nkeyserver.ubuntu.com使用非标准的11371端口，而一般公司的防火墙都屏蔽掉了该端口，而允许标准的80端口。\n\n#### 解决方法：\n\n```bash\nsudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 531EE72F4C9D234C\n# 或者\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E985B27B\n```\n\n\n\n## Telnet\n\n需要安装server的\n\n```bash\n# ubuntu\nsudo apt install telnetd\nsudo systemctl start inetd\nsudo systemctl enable inetd\n# arch\nsudo systemctl start telnet.socket\nsudo systemctl enable telnet.socket\n```\n\n使用telnet测试端口是否打开：\n\n```bash\ntelnet localhost 33171\n```\n\n\n\n## Github Online File Tree View Plugin\n\n[Octotree](https://github.com/buunguyen/octotree)\n\n\n\n","slug":"Kubernetes-&-Deepin-Settings@1-12","published":1,"updated":"2019-10-11T05:50:15.641Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1uam0q9000bs8qqidhpk7tl","content":"<h2 id=\"Infinality-and-Harfbuzz\"><a href=\"#Infinality-and-Harfbuzz\" class=\"headerlink\" title=\"Infinality and Harfbuzz\"></a>Infinality and Harfbuzz</h2><p>会发生冲突，这是今天Archlinux无法启动输入法界面的元凶。重新安装freetype2\\fontconfig\\cairo以替换infinality-bundle。</p>\n<h2 id=\"添加PPA出现GPG问题\"><a href=\"#添加PPA出现GPG问题\" class=\"headerlink\" title=\"添加PPA出现GPG问题\"></a>添加PPA出现GPG问题</h2><h4 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpg: keybox <span class=\"string\">'/tmp/tmpyiw6jvck/pubring.gpg'</span> created</span><br><span class=\"line\">gpg: /tmp/tmpyiw6jvck/trustdb.gpg：建立了信任度数据库</span><br><span class=\"line\">gpg: 密钥 531EE72F4C9D234C：公钥“Launchpad webupd8”已导入</span><br><span class=\"line\">gpg: 合计被处理的数量：1</span><br><span class=\"line\">gpg:           已导入：1</span><br><span class=\"line\">gpg: 找不到有效的 OpenPGP 数据。</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h4 id=\"可能原因：\"><a href=\"#可能原因：\" class=\"headerlink\" title=\"可能原因：\"></a>可能原因：</h4><p>keyserver.ubuntu.com使用非标准的11371端口，而一般公司的防火墙都屏蔽掉了该端口，而允许标准的80端口。</p>\n<h4 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 531EE72F4C9D234C</span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E985B27B</span><br></pre></td></tr></table></figure>\n<h2 id=\"Telnet\"><a href=\"#Telnet\" class=\"headerlink\" title=\"Telnet\"></a>Telnet</h2><p>需要安装server的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ubuntu</span></span><br><span class=\"line\">sudo apt install telnetd</span><br><span class=\"line\">sudo systemctl start inetd</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> inetd</span><br><span class=\"line\"><span class=\"comment\"># arch</span></span><br><span class=\"line\">sudo systemctl start telnet.socket</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> telnet.socket</span><br></pre></td></tr></table></figure>\n<p>使用telnet测试端口是否打开：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">telnet localhost 33171</span><br></pre></td></tr></table></figure>\n<h2 id=\"Github-Online-File-Tree-View-Plugin\"><a href=\"#Github-Online-File-Tree-View-Plugin\" class=\"headerlink\" title=\"Github Online File Tree View Plugin\"></a>Github Online File Tree View Plugin</h2><p><a href=\"https://github.com/buunguyen/octotree\" target=\"_blank\" rel=\"noopener\">Octotree</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"Infinality-and-Harfbuzz\"><a href=\"#Infinality-and-Harfbuzz\" class=\"headerlink\" title=\"Infinality and Harfbuzz\"></a>Infinality and Harfbuzz</h2><p>会发生冲突，这是今天Archlinux无法启动输入法界面的元凶。重新安装freetype2\\fontconfig\\cairo以替换infinality-bundle。</p>\n<h2 id=\"添加PPA出现GPG问题\"><a href=\"#添加PPA出现GPG问题\" class=\"headerlink\" title=\"添加PPA出现GPG问题\"></a>添加PPA出现GPG问题</h2><h4 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpg: keybox <span class=\"string\">'/tmp/tmpyiw6jvck/pubring.gpg'</span> created</span><br><span class=\"line\">gpg: /tmp/tmpyiw6jvck/trustdb.gpg：建立了信任度数据库</span><br><span class=\"line\">gpg: 密钥 531EE72F4C9D234C：公钥“Launchpad webupd8”已导入</span><br><span class=\"line\">gpg: 合计被处理的数量：1</span><br><span class=\"line\">gpg:           已导入：1</span><br><span class=\"line\">gpg: 找不到有效的 OpenPGP 数据。</span><br></pre></td></tr></table></figure>","more":"<h4 id=\"可能原因：\"><a href=\"#可能原因：\" class=\"headerlink\" title=\"可能原因：\"></a>可能原因：</h4><p>keyserver.ubuntu.com使用非标准的11371端口，而一般公司的防火墙都屏蔽掉了该端口，而允许标准的80端口。</p>\n<h4 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 531EE72F4C9D234C</span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E985B27B</span><br></pre></td></tr></table></figure>\n<h2 id=\"Telnet\"><a href=\"#Telnet\" class=\"headerlink\" title=\"Telnet\"></a>Telnet</h2><p>需要安装server的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ubuntu</span></span><br><span class=\"line\">sudo apt install telnetd</span><br><span class=\"line\">sudo systemctl start inetd</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> inetd</span><br><span class=\"line\"><span class=\"comment\"># arch</span></span><br><span class=\"line\">sudo systemctl start telnet.socket</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> telnet.socket</span><br></pre></td></tr></table></figure>\n<p>使用telnet测试端口是否打开：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">telnet localhost 33171</span><br></pre></td></tr></table></figure>\n<h2 id=\"Github-Online-File-Tree-View-Plugin\"><a href=\"#Github-Online-File-Tree-View-Plugin\" class=\"headerlink\" title=\"Github Online File Tree View Plugin\"></a>Github Online File Tree View Plugin</h2><p><a href=\"https://github.com/buunguyen/octotree\" target=\"_blank\" rel=\"noopener\">Octotree</a></p>"},{"title":"ACM International Collegiate Programming Contest Asia Regional Contest, Tokyo Problem D Space Golf","date":"2014-10-19T13:20:03.000Z","_content":"原题pdf：[click here](http://judge.u-aizu.ac.jp/onlinejudge/contest/ICPCOOC2014/D.pdf)\n<br/>\n\n- - -\n\n日本的亚洲区域赛真心简单啊。两个小时就刷了5题有余了。排名第一的队伍才做出7道。\n\n题目真心长的可以了，看了半个小时才明白。。\n\n题意其实也就是太空中向前方抛小球，问小球能够穿过N个障碍物后到达制定地点的最小初始速度是多少。非常暴力的模拟题。离散化后直接枚举弹跳的次数再取最小值即可。注意45°方向能成功的话，那还是45°最优。\n<!--more-->\n```C++\n#include&lt;map&gt;\n#include&lt;set&gt;\n#include&lt;cmath&gt;\n#include&lt;stack&gt;\n#include&lt;queue&gt;\n#include&lt;string&gt;\n#include&lt;cstdio&gt;\n#include&lt;vector&gt;\n#include&lt;cctype&gt;\n#include&lt;cassert&gt;\n#include&lt;utility&gt;\n#include&lt;numeric&gt;\n#include&lt;cstring&gt;\n#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\n#define pr pair\n#define PR pair&lt;int,int&gt;\n#define MP make_pair\n#define SI(x) set::iterator\n#define VI(x) vector::iterator\n#define MI(x,y) map&lt;x,y&gt;::iterator\n#define SRI(x) set::reverse_iterator\n#define VRI(x) vector::reverse_iterator\n#define MRI(x,y) map&lt;x,y&gt;::reverse_iterator\n#define F first\n#define S second\n#define Sz(x) (int)x.size()\n#define clrQ(x) while(!x.empty)x.pop();\n#define clr(x,y) memset(x,y,sizeof(x));\n#if defined (_WIN32) || defined (__WIN32) || defined (WIN32) || defined (__WIN32__)\n#define LL __int64\n#define LLS \"%\" \"I\" \"6\" \"4\" \"d\"\n#define LLU \"%\" \"I\" \"6\" \"4\" \"u\"\n#define LL_MAX _I64_MAX\n#else\n#define LL long long\n#define LLS \"%\" \"l\" \"l\" \"d\"\n#define LLU \"%\" \"l\" \"l\" \"u\"\n#define LL_MAX _I64_MAX\n#endif\nconst int inf = ~0u &gt;&gt; 1;\nconst LL lnf = ~0ull &gt;&gt; 1;\n#define eps 1e-8\n/*start*/\nint d, n, b;\nPR ob[20];\nvector&lt;pair&lt;double, double&gt; &gt; vt;\npair&lt;double, double&gt; dpr;\ndouble a[2][2], e[2];\npair&lt;double, double&gt; Cramer(pair&lt;double, double&gt; dpr) {\n\tpair&lt;double, double&gt; res;\n\ta[1][0] = dpr.F * dpr.F;\n\ta[1][1] = dpr.F;\n\te[1] = dpr.S;\n\tdouble div = a[0][0] * a[1][1] - a[1][0] * a[0][1];\n\tres.F = (e[0] * a[1][1] - e[1] * a[0][1]) / div;\n\tres.S = (e[1] * a[0][0] - e[0] * a[1][0]) / div;\n\treturn res;\n}\nint main(int argc, char **argv) {\n\twhile (~scanf(\"%d%d%d\", &amp;d, &amp;n, &amp;b)) {\n\t\tfor (int i = 0; i &lt; n; i++) {\n\t\t\tscanf(\"%d%d\", &amp;ob[i].F, &amp;ob[i].S);\n\t\t}\n\t\tdouble ans = inf;\n\t\tfor (int c = 0; c &lt;= b; c++) {//enumerate the times bullet bounces the surface\n\t\t\tdouble dist = 1.0 * d / (c + 1);\n\t\t\tint f = 1;\n\t\t\ta[0][0] = dist * dist;\n\t\t\ta[0][1] = dist;\n\t\t\te[0] = 0;\n\t\t\tvt.clear();\n\t\t\tfor (int i = 0; i &lt; n; i++) {\n\t\t\t\tdpr = ob[i];\n\t\t\t\twhile (dpr.F + eps &gt;= dist) {\n\t\t\t\t\tdpr.F -= dist;\n\t\t\t\t}\n\t\t\t\tif (dpr.F &lt;= eps) {\n\t\t\t\t\tf = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tvt.push_back(dpr);\n\t\t\t}\n\t\t\tif (f == 0) continue;\n\t\t\tpair&lt;double, double&gt; res;   \n\t\t\tfor (int i = 0; i &lt; Sz(vt); i++) {\n\t\t\t\tdpr = vt[i];\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tres = Cramer(dpr);\n\t\t\t\t} else {\n\t\t\t\t\tdouble tmph = dpr.F * dpr.F * res.F + dpr.F * res.S;\n\t\t\t\t\tif (tmph + eps &lt; dpr.S) {\n\t\t\t\t\t\tres = Cramer(dpr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tres.F = -1.0 / (2 * res.F);\n\t\t\tres.S = res.F * res.S * res.S;\n\t\t\tans = min(ans, sqrt(res.F + res.S));\n                        //if the vector's angle is less than 45\n\t\t\tif (res.S + eps &lt; res.F) ans = min(ans, sqrt(dist));\n\t\t}\n\t\tprintf(\"%.5f\\n\", ans);\n\t}\n}\n```\n","source":"_posts/acm-international-collegiate-programming-contest-asia-regional-contest-tokyo-problem-d-space-golf.md","raw":"title: \"ACM International Collegiate Programming Contest Asia Regional Contest, Tokyo Problem D Space Golf\"\ncategories:\n  - ACM\ndate: 2014-10-19 21:20:03\ntags: 暴力\n---\n原题pdf：[click here](http://judge.u-aizu.ac.jp/onlinejudge/contest/ICPCOOC2014/D.pdf)\n<br/>\n\n- - -\n\n日本的亚洲区域赛真心简单啊。两个小时就刷了5题有余了。排名第一的队伍才做出7道。\n\n题目真心长的可以了，看了半个小时才明白。。\n\n题意其实也就是太空中向前方抛小球，问小球能够穿过N个障碍物后到达制定地点的最小初始速度是多少。非常暴力的模拟题。离散化后直接枚举弹跳的次数再取最小值即可。注意45°方向能成功的话，那还是45°最优。\n<!--more-->\n```C++\n#include&lt;map&gt;\n#include&lt;set&gt;\n#include&lt;cmath&gt;\n#include&lt;stack&gt;\n#include&lt;queue&gt;\n#include&lt;string&gt;\n#include&lt;cstdio&gt;\n#include&lt;vector&gt;\n#include&lt;cctype&gt;\n#include&lt;cassert&gt;\n#include&lt;utility&gt;\n#include&lt;numeric&gt;\n#include&lt;cstring&gt;\n#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\n#define pr pair\n#define PR pair&lt;int,int&gt;\n#define MP make_pair\n#define SI(x) set::iterator\n#define VI(x) vector::iterator\n#define MI(x,y) map&lt;x,y&gt;::iterator\n#define SRI(x) set::reverse_iterator\n#define VRI(x) vector::reverse_iterator\n#define MRI(x,y) map&lt;x,y&gt;::reverse_iterator\n#define F first\n#define S second\n#define Sz(x) (int)x.size()\n#define clrQ(x) while(!x.empty)x.pop();\n#define clr(x,y) memset(x,y,sizeof(x));\n#if defined (_WIN32) || defined (__WIN32) || defined (WIN32) || defined (__WIN32__)\n#define LL __int64\n#define LLS \"%\" \"I\" \"6\" \"4\" \"d\"\n#define LLU \"%\" \"I\" \"6\" \"4\" \"u\"\n#define LL_MAX _I64_MAX\n#else\n#define LL long long\n#define LLS \"%\" \"l\" \"l\" \"d\"\n#define LLU \"%\" \"l\" \"l\" \"u\"\n#define LL_MAX _I64_MAX\n#endif\nconst int inf = ~0u &gt;&gt; 1;\nconst LL lnf = ~0ull &gt;&gt; 1;\n#define eps 1e-8\n/*start*/\nint d, n, b;\nPR ob[20];\nvector&lt;pair&lt;double, double&gt; &gt; vt;\npair&lt;double, double&gt; dpr;\ndouble a[2][2], e[2];\npair&lt;double, double&gt; Cramer(pair&lt;double, double&gt; dpr) {\n\tpair&lt;double, double&gt; res;\n\ta[1][0] = dpr.F * dpr.F;\n\ta[1][1] = dpr.F;\n\te[1] = dpr.S;\n\tdouble div = a[0][0] * a[1][1] - a[1][0] * a[0][1];\n\tres.F = (e[0] * a[1][1] - e[1] * a[0][1]) / div;\n\tres.S = (e[1] * a[0][0] - e[0] * a[1][0]) / div;\n\treturn res;\n}\nint main(int argc, char **argv) {\n\twhile (~scanf(\"%d%d%d\", &amp;d, &amp;n, &amp;b)) {\n\t\tfor (int i = 0; i &lt; n; i++) {\n\t\t\tscanf(\"%d%d\", &amp;ob[i].F, &amp;ob[i].S);\n\t\t}\n\t\tdouble ans = inf;\n\t\tfor (int c = 0; c &lt;= b; c++) {//enumerate the times bullet bounces the surface\n\t\t\tdouble dist = 1.0 * d / (c + 1);\n\t\t\tint f = 1;\n\t\t\ta[0][0] = dist * dist;\n\t\t\ta[0][1] = dist;\n\t\t\te[0] = 0;\n\t\t\tvt.clear();\n\t\t\tfor (int i = 0; i &lt; n; i++) {\n\t\t\t\tdpr = ob[i];\n\t\t\t\twhile (dpr.F + eps &gt;= dist) {\n\t\t\t\t\tdpr.F -= dist;\n\t\t\t\t}\n\t\t\t\tif (dpr.F &lt;= eps) {\n\t\t\t\t\tf = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tvt.push_back(dpr);\n\t\t\t}\n\t\t\tif (f == 0) continue;\n\t\t\tpair&lt;double, double&gt; res;   \n\t\t\tfor (int i = 0; i &lt; Sz(vt); i++) {\n\t\t\t\tdpr = vt[i];\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tres = Cramer(dpr);\n\t\t\t\t} else {\n\t\t\t\t\tdouble tmph = dpr.F * dpr.F * res.F + dpr.F * res.S;\n\t\t\t\t\tif (tmph + eps &lt; dpr.S) {\n\t\t\t\t\t\tres = Cramer(dpr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tres.F = -1.0 / (2 * res.F);\n\t\t\tres.S = res.F * res.S * res.S;\n\t\t\tans = min(ans, sqrt(res.F + res.S));\n                        //if the vector's angle is less than 45\n\t\t\tif (res.S + eps &lt; res.F) ans = min(ans, sqrt(dist));\n\t\t}\n\t\tprintf(\"%.5f\\n\", ans);\n\t}\n}\n```\n","slug":"acm-international-collegiate-programming-contest-asia-regional-contest-tokyo-problem-d-space-golf","published":1,"updated":"2019-10-11T05:50:15.651Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1uam0qd000cs8qqnbi3rqip","content":"<p>原题pdf：<a href=\"http://judge.u-aizu.ac.jp/onlinejudge/contest/ICPCOOC2014/D.pdf\" target=\"_blank\" rel=\"noopener\">click here</a><br><br></p>\n<hr>\n<p>日本的亚洲区域赛真心简单啊。两个小时就刷了5题有余了。排名第一的队伍才做出7道。</p>\n<p>题目真心长的可以了，看了半个小时才明白。。</p>\n<p>题意其实也就是太空中向前方抛小球，问小球能够穿过N个障碍物后到达制定地点的最小初始速度是多少。非常暴力的模拟题。离散化后直接枚举弹跳的次数再取最小值即可。注意45°方向能成功的话，那还是45°最优。<br><a id=\"more\"></a><br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;map&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;set&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;cmath&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;stack&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;queue&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;string&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;cstdio&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;vector&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;cctype&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;cassert&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;utility&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;numeric&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;cstring&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;iostream&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;algorithm&amp;gt;</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> pr pair</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PR pair&amp;lt;int,int&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MP make_pair</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> SI(x) set::iterator</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> VI(x) vector::iterator</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MI(x,y) map&amp;lt;x,y&amp;gt;::iterator</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> SRI(x) set::reverse_iterator</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> VRI(x) vector::reverse_iterator</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MRI(x,y) map&amp;lt;x,y&amp;gt;::reverse_iterator</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> F first</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> S second</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> Sz(x) (int)x.size()</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> clrQ(x) while(!x.empty)x.pop();</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> clr(x,y) memset(x,y,sizeof(x));</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined (_WIN32) || defined (__WIN32) || defined (WIN32) || defined (__WIN32__)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LL __int64</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LLS <span class=\"meta-string\">\"%\"</span> <span class=\"meta-string\">\"I\"</span> <span class=\"meta-string\">\"6\"</span> <span class=\"meta-string\">\"4\"</span> <span class=\"meta-string\">\"d\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LLU <span class=\"meta-string\">\"%\"</span> <span class=\"meta-string\">\"I\"</span> <span class=\"meta-string\">\"6\"</span> <span class=\"meta-string\">\"4\"</span> <span class=\"meta-string\">\"u\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LL_MAX _I64_MAX</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LL long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LLS <span class=\"meta-string\">\"%\"</span> <span class=\"meta-string\">\"l\"</span> <span class=\"meta-string\">\"l\"</span> <span class=\"meta-string\">\"d\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LLU <span class=\"meta-string\">\"%\"</span> <span class=\"meta-string\">\"l\"</span> <span class=\"meta-string\">\"l\"</span> <span class=\"meta-string\">\"u\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LL_MAX _I64_MAX</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> inf = ~<span class=\"number\">0u</span> &amp;gt;&amp;gt; <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> LL lnf = ~<span class=\"number\">0u</span>ll &amp;gt;&amp;gt; <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> eps 1e-8</span></span><br><span class=\"line\"><span class=\"comment\">/*start*/</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> d, n, b;</span><br><span class=\"line\">PR ob[<span class=\"number\">20</span>];</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&amp;lt;pair&amp;lt;<span class=\"keyword\">double</span>, <span class=\"keyword\">double</span>&amp;gt; &amp;gt; vt;</span><br><span class=\"line\">pair&amp;lt;<span class=\"keyword\">double</span>, <span class=\"keyword\">double</span>&amp;gt; dpr;</span><br><span class=\"line\"><span class=\"keyword\">double</span> a[<span class=\"number\">2</span>][<span class=\"number\">2</span>], e[<span class=\"number\">2</span>];</span><br><span class=\"line\">pair&amp;lt;<span class=\"keyword\">double</span>, <span class=\"keyword\">double</span>&amp;gt; Cramer(pair&amp;lt;<span class=\"keyword\">double</span>, <span class=\"keyword\">double</span>&amp;gt; dpr) &#123;</span><br><span class=\"line\">\tpair&amp;lt;<span class=\"keyword\">double</span>, <span class=\"keyword\">double</span>&amp;gt; res;</span><br><span class=\"line\">\ta[<span class=\"number\">1</span>][<span class=\"number\">0</span>] = dpr.F * dpr.F;</span><br><span class=\"line\">\ta[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = dpr.F;</span><br><span class=\"line\">\te[<span class=\"number\">1</span>] = dpr.S;</span><br><span class=\"line\">\t<span class=\"keyword\">double</span> div = a[<span class=\"number\">0</span>][<span class=\"number\">0</span>] * a[<span class=\"number\">1</span>][<span class=\"number\">1</span>] - a[<span class=\"number\">1</span>][<span class=\"number\">0</span>] * a[<span class=\"number\">0</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">\tres.F = (e[<span class=\"number\">0</span>] * a[<span class=\"number\">1</span>][<span class=\"number\">1</span>] - e[<span class=\"number\">1</span>] * a[<span class=\"number\">0</span>][<span class=\"number\">1</span>]) / div;</span><br><span class=\"line\">\tres.S = (e[<span class=\"number\">1</span>] * a[<span class=\"number\">0</span>][<span class=\"number\">0</span>] - e[<span class=\"number\">0</span>] * a[<span class=\"number\">1</span>][<span class=\"number\">0</span>]) / div;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> **argv)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (~<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d\"</span>, &amp;amp;d, &amp;amp;n, &amp;amp;b)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &amp;lt; n; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>, &amp;amp;ob[i].F, &amp;amp;ob[i].S);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">double</span> ans = inf;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> c = <span class=\"number\">0</span>; c &amp;lt;= b; c++) &#123;<span class=\"comment\">//enumerate the times bullet bounces the surface</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">double</span> dist = <span class=\"number\">1.0</span> * d / (c + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> f = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\ta[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = dist * dist;</span><br><span class=\"line\">\t\t\ta[<span class=\"number\">0</span>][<span class=\"number\">1</span>] = dist;</span><br><span class=\"line\">\t\t\te[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\tvt.clear();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &amp;lt; n; i++) &#123;</span><br><span class=\"line\">\t\t\t\tdpr = ob[i];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (dpr.F + eps &amp;gt;= dist) &#123;</span><br><span class=\"line\">\t\t\t\t\tdpr.F -= dist;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (dpr.F &amp;lt;= eps) &#123;</span><br><span class=\"line\">\t\t\t\t\tf = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tvt.push_back(dpr);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (f == <span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\tpair&amp;lt;<span class=\"keyword\">double</span>, <span class=\"keyword\">double</span>&amp;gt; res;   </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &amp;lt; Sz(vt); i++) &#123;</span><br><span class=\"line\">\t\t\t\tdpr = vt[i];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (i == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tres = Cramer(dpr);</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">double</span> tmph = dpr.F * dpr.F * res.F + dpr.F * res.S;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (tmph + eps &amp;lt; dpr.S) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tres = Cramer(dpr);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tres.F = <span class=\"number\">-1.0</span> / (<span class=\"number\">2</span> * res.F);</span><br><span class=\"line\">\t\t\tres.S = res.F * res.S * res.S;</span><br><span class=\"line\">\t\t\tans = min(ans, <span class=\"built_in\">sqrt</span>(res.F + res.S));</span><br><span class=\"line\">                        <span class=\"comment\">//if the vector's angle is less than 45</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (res.S + eps &amp;lt; res.F) ans = min(ans, <span class=\"built_in\">sqrt</span>(dist));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%.5f\\n\"</span>, ans);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>原题pdf：<a href=\"http://judge.u-aizu.ac.jp/onlinejudge/contest/ICPCOOC2014/D.pdf\" target=\"_blank\" rel=\"noopener\">click here</a><br><br></p>\n<hr>\n<p>日本的亚洲区域赛真心简单啊。两个小时就刷了5题有余了。排名第一的队伍才做出7道。</p>\n<p>题目真心长的可以了，看了半个小时才明白。。</p>\n<p>题意其实也就是太空中向前方抛小球，问小球能够穿过N个障碍物后到达制定地点的最小初始速度是多少。非常暴力的模拟题。离散化后直接枚举弹跳的次数再取最小值即可。注意45°方向能成功的话，那还是45°最优。<br>","more":"<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;map&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;set&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;cmath&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;stack&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;queue&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;string&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;cstdio&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;vector&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;cctype&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;cassert&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;utility&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;numeric&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;cstring&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;iostream&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span>&amp;lt;algorithm&amp;gt;</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> pr pair</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PR pair&amp;lt;int,int&amp;gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MP make_pair</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> SI(x) set::iterator</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> VI(x) vector::iterator</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MI(x,y) map&amp;lt;x,y&amp;gt;::iterator</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> SRI(x) set::reverse_iterator</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> VRI(x) vector::reverse_iterator</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MRI(x,y) map&amp;lt;x,y&amp;gt;::reverse_iterator</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> F first</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> S second</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> Sz(x) (int)x.size()</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> clrQ(x) while(!x.empty)x.pop();</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> clr(x,y) memset(x,y,sizeof(x));</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> defined (_WIN32) || defined (__WIN32) || defined (WIN32) || defined (__WIN32__)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LL __int64</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LLS <span class=\"meta-string\">\"%\"</span> <span class=\"meta-string\">\"I\"</span> <span class=\"meta-string\">\"6\"</span> <span class=\"meta-string\">\"4\"</span> <span class=\"meta-string\">\"d\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LLU <span class=\"meta-string\">\"%\"</span> <span class=\"meta-string\">\"I\"</span> <span class=\"meta-string\">\"6\"</span> <span class=\"meta-string\">\"4\"</span> <span class=\"meta-string\">\"u\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LL_MAX _I64_MAX</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LL long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LLS <span class=\"meta-string\">\"%\"</span> <span class=\"meta-string\">\"l\"</span> <span class=\"meta-string\">\"l\"</span> <span class=\"meta-string\">\"d\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LLU <span class=\"meta-string\">\"%\"</span> <span class=\"meta-string\">\"l\"</span> <span class=\"meta-string\">\"l\"</span> <span class=\"meta-string\">\"u\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LL_MAX _I64_MAX</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> inf = ~<span class=\"number\">0u</span> &amp;gt;&amp;gt; <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> LL lnf = ~<span class=\"number\">0u</span>ll &amp;gt;&amp;gt; <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> eps 1e-8</span></span><br><span class=\"line\"><span class=\"comment\">/*start*/</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> d, n, b;</span><br><span class=\"line\">PR ob[<span class=\"number\">20</span>];</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&amp;lt;pair&amp;lt;<span class=\"keyword\">double</span>, <span class=\"keyword\">double</span>&amp;gt; &amp;gt; vt;</span><br><span class=\"line\">pair&amp;lt;<span class=\"keyword\">double</span>, <span class=\"keyword\">double</span>&amp;gt; dpr;</span><br><span class=\"line\"><span class=\"keyword\">double</span> a[<span class=\"number\">2</span>][<span class=\"number\">2</span>], e[<span class=\"number\">2</span>];</span><br><span class=\"line\">pair&amp;lt;<span class=\"keyword\">double</span>, <span class=\"keyword\">double</span>&amp;gt; Cramer(pair&amp;lt;<span class=\"keyword\">double</span>, <span class=\"keyword\">double</span>&amp;gt; dpr) &#123;</span><br><span class=\"line\">\tpair&amp;lt;<span class=\"keyword\">double</span>, <span class=\"keyword\">double</span>&amp;gt; res;</span><br><span class=\"line\">\ta[<span class=\"number\">1</span>][<span class=\"number\">0</span>] = dpr.F * dpr.F;</span><br><span class=\"line\">\ta[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = dpr.F;</span><br><span class=\"line\">\te[<span class=\"number\">1</span>] = dpr.S;</span><br><span class=\"line\">\t<span class=\"keyword\">double</span> div = a[<span class=\"number\">0</span>][<span class=\"number\">0</span>] * a[<span class=\"number\">1</span>][<span class=\"number\">1</span>] - a[<span class=\"number\">1</span>][<span class=\"number\">0</span>] * a[<span class=\"number\">0</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">\tres.F = (e[<span class=\"number\">0</span>] * a[<span class=\"number\">1</span>][<span class=\"number\">1</span>] - e[<span class=\"number\">1</span>] * a[<span class=\"number\">0</span>][<span class=\"number\">1</span>]) / div;</span><br><span class=\"line\">\tres.S = (e[<span class=\"number\">1</span>] * a[<span class=\"number\">0</span>][<span class=\"number\">0</span>] - e[<span class=\"number\">0</span>] * a[<span class=\"number\">1</span>][<span class=\"number\">0</span>]) / div;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> **argv)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (~<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d\"</span>, &amp;amp;d, &amp;amp;n, &amp;amp;b)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &amp;lt; n; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>, &amp;amp;ob[i].F, &amp;amp;ob[i].S);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">double</span> ans = inf;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> c = <span class=\"number\">0</span>; c &amp;lt;= b; c++) &#123;<span class=\"comment\">//enumerate the times bullet bounces the surface</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">double</span> dist = <span class=\"number\">1.0</span> * d / (c + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> f = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\ta[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = dist * dist;</span><br><span class=\"line\">\t\t\ta[<span class=\"number\">0</span>][<span class=\"number\">1</span>] = dist;</span><br><span class=\"line\">\t\t\te[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\tvt.clear();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &amp;lt; n; i++) &#123;</span><br><span class=\"line\">\t\t\t\tdpr = ob[i];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (dpr.F + eps &amp;gt;= dist) &#123;</span><br><span class=\"line\">\t\t\t\t\tdpr.F -= dist;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (dpr.F &amp;lt;= eps) &#123;</span><br><span class=\"line\">\t\t\t\t\tf = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tvt.push_back(dpr);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (f == <span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\tpair&amp;lt;<span class=\"keyword\">double</span>, <span class=\"keyword\">double</span>&amp;gt; res;   </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &amp;lt; Sz(vt); i++) &#123;</span><br><span class=\"line\">\t\t\t\tdpr = vt[i];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (i == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tres = Cramer(dpr);</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">double</span> tmph = dpr.F * dpr.F * res.F + dpr.F * res.S;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (tmph + eps &amp;lt; dpr.S) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tres = Cramer(dpr);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tres.F = <span class=\"number\">-1.0</span> / (<span class=\"number\">2</span> * res.F);</span><br><span class=\"line\">\t\t\tres.S = res.F * res.S * res.S;</span><br><span class=\"line\">\t\t\tans = min(ans, <span class=\"built_in\">sqrt</span>(res.F + res.S));</span><br><span class=\"line\">                        <span class=\"comment\">//if the vector's angle is less than 45</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (res.S + eps &amp;lt; res.F) ans = min(ans, <span class=\"built_in\">sqrt</span>(dist));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%.5f\\n\"</span>, ans);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"baylor 6622 Absurdistan Roads（ NWERC Contest）","id":"137","date":"2014-11-06T09:05:34.000Z","_content":"\n原题pdf：[click here](https://icpcarchive.ecs.baylor.edu/external/66/6622.pdf)\n##Description\nThe people of Absurdistan discovered how to build roads only last year. After the discovery, every city\ndecided to build their own road connecting their city with another city. Each newly built road can be\nused in both directions.\n\nAbsurdistan is full of surprising coincidences. It took all N cities precisely one year to build their\nroads. And even more surprisingly, in the end it was possible to travel from every city to every other\ncity using the newly built roads.\n\n<!--more-->\nYou bought a tourist guide which does not have a map of the country with the new roads. It only\ncontains a huge table with the shortest distances between all pairs of cities using the newly built roads.\n\nYou would like to know between which pairs of cities there are roads and how long they are, because\nyou want to reconstruct the map of the N newly built roads from the table of shortest distances.\n\nYou get a table of shortest distances between all pairs of cities in Absurdistan using the N roads\nbuilt last year. From this table, you must reconstruct the road network of Absurdistan. There might\nbe multiple road networks with N roads with that same table of shortest distances, but you are happy\nwith any one of those networks.\n\n##Input\nFor each test case:  \n\n• A line containing an integer N (2 ≤ N ≤ 2000) — the number of cities and roads.  \n\n• N lines with N numbers each. The j-th number of the i-th line is the shortest distance from city i to city j.\n\n• All distances between two distinct cities will be positive and at most 1 000 000. The\ndistance from i to i will always be 0 and the distance from i to j will be the same as the distance\nfrom j to i.\n\n##Output\nFor each test case:\n\n• Print N lines with three integers ‘a b c’ denoting that there is a road between cities 1 ≤ a ≤ N\nand 1 ≤ b ≤ N of length 1 ≤ c ≤ 1000000, where a ̸= b. If there are multiple solutions, you can\nprint any one and you can print the roads in any order. At least one solution is guaranteed to\nexist.\n\n• Print a blank line between every two test cases.\n##Sample Input\n4  \n0 1 2 1  \n1 0 2 1  \n2 2 0 1  \n1 1 1 0  \n4  \n0 1 1 1  \n1 0 2 2  \n1 2 0 2  \n1 2 2 0  \n3  \n0 4 1  \n4 0 3  \n1 3 0  \n##Sample Output\n2 1 1  \n4 1 1  \n4 2 1  \n4 3 1  \n2 1 1  \n3 1 1  \n4 1 1  \n2 1 1  \n3 1 1  \n2 1 4  \n3 2 3  \n<br/>\n- - -\n\nNWERC 题目还挺简单的。  \n题意就是一个N个顶点，N条边的无向图。告诉你两两点之间的最短路。让你重构这个图。(随意输出任意一张满足以上条件的图）  \n这题的突破口就是N条边。要想想如果只有N-1条边，那么这个图就是一个树了。所以，我们可以先构造最小生成树，再来考虑最后一条边。  \n可以先将构造好的树求一遍floyd，然后再跟题目的最短路相比较，如果两点u,v求出的最短路w\\`与题目给的最短路w不一致（可以断言：w\\`&gt;w），那么就将w作为最后一条边的边长加在u，v之间即可。这样的边可能会找到很多，事实上只需要加上任意一条就使所有的w\\`都等于w了。\n需要注意的是，可能整个树就已经满足题目了。这样的话，最后一条边只需要重复任意一条树边就好了。\n\n```C++\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int N = 2010;\nconst int inf = 1 << 25;\nint p[N];\nint ufind(int x) {\n\treturn x == p[x] ? x : p[x] = ufind(p[x]);\n}\nbool Union(int x, int y) {\n\tint fx = ufind(x);\n\tint fy = ufind(y);\n\tif (fx == fy)\n\t\treturn false;\n\tp[fx] = fy;\n\treturn true;\n}\nint n;\nstruct Edge {\n\tint u, v, w;\n\tEdge(int u = 0, int v = 0, int w = 0) :\n\t\t\tu(u), v(v), w(w) {\n\t}\n\tbool operator<(const Edge& othr) const {\n\t\treturn w < othr.w;\n\t}\n};\nvector<Edge> vt;\nvector<Edge> res;\nint f[N][N];\nint main() {\n\tbool first = true;\n\twhile (~scanf(\"%d\", &n)) {\n\t\tvt.clear();\n\t\tres.clear();\n\t\tif (!first) printf(\"\\n\");\n\t\telse first = false;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tfor (int x, j = 1; j <= n; j++) {\n\t\t\t\tscanf(\"%d\", &x);\n\t\t\t\tif (j > i)\n\t\t\t\t\tvt.push_back(Edge(i, j, x));\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i <= n; i++) p[i] = i;\n\t\tsort(vt.begin(), vt.end());\n\t\tfor(int i=1;i<=n;i++) fill(f[i]+1,f[i]+1+n,inf);\n\t\tfor (int cnt = 0, i = 0; i < (int) vt.size(); i++) {\n\t\t\tif (Union(vt[i].u, vt[i].v)) {\n\t\t\t\tf[vt[i].u][vt[i].v] = vt[i].w;\n\t\t\t\tf[vt[i].v][vt[i].u] = vt[i].w;\n\t\t\t\tcnt++;\n\t\t\t\tres.push_back(Edge(vt[i].u, vt[i].v, vt[i].w));\n\t\t\t\tif (cnt >= n - 1) break;\n\t\t\t}\n\t\t}\n\n\t\tfor (int k = 1; k <= n; k++) {\n\t\t\tfor (int i = 1; i <= n; i++) {\n\t\t\t\tfor (int j = 1; j <= n; j++) {\n\t\t\t\t\tif (f[i][k] == inf) break;\n\t\t\t\t\tif (f[i][j] > f[i][k] + f[k][j]) {\n\t\t\t\t\t\tf[i][j] = f[i][k] + f[k][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint flag = true;\n\t\tfor (int i = 0; i < (int) vt.size(); i++) {\n\t\t\tEdge now = vt[i];\n\t\t\tif (f[now.u][now.v] != now.w) {\n\t\t\t\tres.push_back(Edge(now.u, now.v, now.w));\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag) res.push_back(res.back());\n\t\tfor (int i = 0; i < (int) res.size(); i++) {\n\t\t\tprintf(\"%d %d %d\\n\", res[i].u, res[i].v, res[i].w);\n\t\t}\n\t}\n}\n```","source":"_posts/baylor6622-absurdistan-roads.md","raw":"title: baylor 6622 Absurdistan Roads（ NWERC Contest）\ncategories:\n  - ACM\nid: 137\ndate: 2014-11-06 17:05:34\ntags: 图论\n---\n\n原题pdf：[click here](https://icpcarchive.ecs.baylor.edu/external/66/6622.pdf)\n##Description\nThe people of Absurdistan discovered how to build roads only last year. After the discovery, every city\ndecided to build their own road connecting their city with another city. Each newly built road can be\nused in both directions.\n\nAbsurdistan is full of surprising coincidences. It took all N cities precisely one year to build their\nroads. And even more surprisingly, in the end it was possible to travel from every city to every other\ncity using the newly built roads.\n\n<!--more-->\nYou bought a tourist guide which does not have a map of the country with the new roads. It only\ncontains a huge table with the shortest distances between all pairs of cities using the newly built roads.\n\nYou would like to know between which pairs of cities there are roads and how long they are, because\nyou want to reconstruct the map of the N newly built roads from the table of shortest distances.\n\nYou get a table of shortest distances between all pairs of cities in Absurdistan using the N roads\nbuilt last year. From this table, you must reconstruct the road network of Absurdistan. There might\nbe multiple road networks with N roads with that same table of shortest distances, but you are happy\nwith any one of those networks.\n\n##Input\nFor each test case:  \n\n• A line containing an integer N (2 ≤ N ≤ 2000) — the number of cities and roads.  \n\n• N lines with N numbers each. The j-th number of the i-th line is the shortest distance from city i to city j.\n\n• All distances between two distinct cities will be positive and at most 1 000 000. The\ndistance from i to i will always be 0 and the distance from i to j will be the same as the distance\nfrom j to i.\n\n##Output\nFor each test case:\n\n• Print N lines with three integers ‘a b c’ denoting that there is a road between cities 1 ≤ a ≤ N\nand 1 ≤ b ≤ N of length 1 ≤ c ≤ 1000000, where a ̸= b. If there are multiple solutions, you can\nprint any one and you can print the roads in any order. At least one solution is guaranteed to\nexist.\n\n• Print a blank line between every two test cases.\n##Sample Input\n4  \n0 1 2 1  \n1 0 2 1  \n2 2 0 1  \n1 1 1 0  \n4  \n0 1 1 1  \n1 0 2 2  \n1 2 0 2  \n1 2 2 0  \n3  \n0 4 1  \n4 0 3  \n1 3 0  \n##Sample Output\n2 1 1  \n4 1 1  \n4 2 1  \n4 3 1  \n2 1 1  \n3 1 1  \n4 1 1  \n2 1 1  \n3 1 1  \n2 1 4  \n3 2 3  \n<br/>\n- - -\n\nNWERC 题目还挺简单的。  \n题意就是一个N个顶点，N条边的无向图。告诉你两两点之间的最短路。让你重构这个图。(随意输出任意一张满足以上条件的图）  \n这题的突破口就是N条边。要想想如果只有N-1条边，那么这个图就是一个树了。所以，我们可以先构造最小生成树，再来考虑最后一条边。  \n可以先将构造好的树求一遍floyd，然后再跟题目的最短路相比较，如果两点u,v求出的最短路w\\`与题目给的最短路w不一致（可以断言：w\\`&gt;w），那么就将w作为最后一条边的边长加在u，v之间即可。这样的边可能会找到很多，事实上只需要加上任意一条就使所有的w\\`都等于w了。\n需要注意的是，可能整个树就已经满足题目了。这样的话，最后一条边只需要重复任意一条树边就好了。\n\n```C++\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int N = 2010;\nconst int inf = 1 << 25;\nint p[N];\nint ufind(int x) {\n\treturn x == p[x] ? x : p[x] = ufind(p[x]);\n}\nbool Union(int x, int y) {\n\tint fx = ufind(x);\n\tint fy = ufind(y);\n\tif (fx == fy)\n\t\treturn false;\n\tp[fx] = fy;\n\treturn true;\n}\nint n;\nstruct Edge {\n\tint u, v, w;\n\tEdge(int u = 0, int v = 0, int w = 0) :\n\t\t\tu(u), v(v), w(w) {\n\t}\n\tbool operator<(const Edge& othr) const {\n\t\treturn w < othr.w;\n\t}\n};\nvector<Edge> vt;\nvector<Edge> res;\nint f[N][N];\nint main() {\n\tbool first = true;\n\twhile (~scanf(\"%d\", &n)) {\n\t\tvt.clear();\n\t\tres.clear();\n\t\tif (!first) printf(\"\\n\");\n\t\telse first = false;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tfor (int x, j = 1; j <= n; j++) {\n\t\t\t\tscanf(\"%d\", &x);\n\t\t\t\tif (j > i)\n\t\t\t\t\tvt.push_back(Edge(i, j, x));\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i <= n; i++) p[i] = i;\n\t\tsort(vt.begin(), vt.end());\n\t\tfor(int i=1;i<=n;i++) fill(f[i]+1,f[i]+1+n,inf);\n\t\tfor (int cnt = 0, i = 0; i < (int) vt.size(); i++) {\n\t\t\tif (Union(vt[i].u, vt[i].v)) {\n\t\t\t\tf[vt[i].u][vt[i].v] = vt[i].w;\n\t\t\t\tf[vt[i].v][vt[i].u] = vt[i].w;\n\t\t\t\tcnt++;\n\t\t\t\tres.push_back(Edge(vt[i].u, vt[i].v, vt[i].w));\n\t\t\t\tif (cnt >= n - 1) break;\n\t\t\t}\n\t\t}\n\n\t\tfor (int k = 1; k <= n; k++) {\n\t\t\tfor (int i = 1; i <= n; i++) {\n\t\t\t\tfor (int j = 1; j <= n; j++) {\n\t\t\t\t\tif (f[i][k] == inf) break;\n\t\t\t\t\tif (f[i][j] > f[i][k] + f[k][j]) {\n\t\t\t\t\t\tf[i][j] = f[i][k] + f[k][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint flag = true;\n\t\tfor (int i = 0; i < (int) vt.size(); i++) {\n\t\t\tEdge now = vt[i];\n\t\t\tif (f[now.u][now.v] != now.w) {\n\t\t\t\tres.push_back(Edge(now.u, now.v, now.w));\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag) res.push_back(res.back());\n\t\tfor (int i = 0; i < (int) res.size(); i++) {\n\t\t\tprintf(\"%d %d %d\\n\", res[i].u, res[i].v, res[i].w);\n\t\t}\n\t}\n}\n```","slug":"baylor6622-absurdistan-roads","published":1,"updated":"2019-10-11T05:50:15.653Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1uam0qj000gs8qqx2f09tex","content":"<p>原题pdf：<a href=\"https://icpcarchive.ecs.baylor.edu/external/66/6622.pdf\" target=\"_blank\" rel=\"noopener\">click here</a></p>\n<p>##Description<br>The people of Absurdistan discovered how to build roads only last year. After the discovery, every city<br>decided to build their own road connecting their city with another city. Each newly built road can be<br>used in both directions.</p>\n<p>Absurdistan is full of surprising coincidences. It took all N cities precisely one year to build their<br>roads. And even more surprisingly, in the end it was possible to travel from every city to every other<br>city using the newly built roads.</p>\n<a id=\"more\"></a>\n<p>You bought a tourist guide which does not have a map of the country with the new roads. It only<br>contains a huge table with the shortest distances between all pairs of cities using the newly built roads.</p>\n<p>You would like to know between which pairs of cities there are roads and how long they are, because<br>you want to reconstruct the map of the N newly built roads from the table of shortest distances.</p>\n<p>You get a table of shortest distances between all pairs of cities in Absurdistan using the N roads<br>built last year. From this table, you must reconstruct the road network of Absurdistan. There might<br>be multiple road networks with N roads with that same table of shortest distances, but you are happy<br>with any one of those networks.</p>\n<p>##Input<br>For each test case:  </p>\n<p>• A line containing an integer N (2 ≤ N ≤ 2000) — the number of cities and roads.  </p>\n<p>• N lines with N numbers each. The j-th number of the i-th line is the shortest distance from city i to city j.</p>\n<p>• All distances between two distinct cities will be positive and at most 1 000 000. The<br>distance from i to i will always be 0 and the distance from i to j will be the same as the distance<br>from j to i.</p>\n<p>##Output<br>For each test case:</p>\n<p>• Print N lines with three integers ‘a b c’ denoting that there is a road between cities 1 ≤ a ≤ N<br>and 1 ≤ b ≤ N of length 1 ≤ c ≤ 1000000, where a ̸= b. If there are multiple solutions, you can<br>print any one and you can print the roads in any order. At least one solution is guaranteed to<br>exist.</p>\n<p>• Print a blank line between every two test cases.</p>\n<p>##Sample Input<br>4<br>0 1 2 1<br>1 0 2 1<br>2 2 0 1<br>1 1 1 0<br>4<br>0 1 1 1<br>1 0 2 2<br>1 2 0 2<br>1 2 2 0<br>3<br>0 4 1<br>4 0 3<br>1 3 0  </p>\n<p>##Sample Output<br>2 1 1<br>4 1 1<br>4 2 1<br>4 3 1<br>2 1 1<br>3 1 1<br>4 1 1<br>2 1 1<br>3 1 1<br>2 1 4<br>3 2 3<br><br></p>\n<hr>\n<p>NWERC 题目还挺简单的。<br>题意就是一个N个顶点，N条边的无向图。告诉你两两点之间的最短路。让你重构这个图。(随意输出任意一张满足以上条件的图）<br>这题的突破口就是N条边。要想想如果只有N-1条边，那么这个图就是一个树了。所以，我们可以先构造最小生成树，再来考虑最后一条边。<br>可以先将构造好的树求一遍floyd，然后再跟题目的最短路相比较，如果两点u,v求出的最短路w`与题目给的最短路w不一致（可以断言：w`&gt;w），那么就将w作为最后一条边的边长加在u，v之间即可。这样的边可能会找到很多，事实上只需要加上任意一条就使所有的w`都等于w了。<br>需要注意的是，可能整个树就已经满足题目了。这样的话，最后一条边只需要重复任意一条树边就好了。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">2010</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> inf = <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">25</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> p[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">ufind</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x == p[x] ? x : p[x] = ufind(p[x]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Union</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> fx = ufind(x);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> fy = ufind(y);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (fx == fy)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\tp[fx] = fy;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Edge</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> u, v, w;</span><br><span class=\"line\">\tEdge(<span class=\"keyword\">int</span> u = <span class=\"number\">0</span>, <span class=\"keyword\">int</span> v = <span class=\"number\">0</span>, <span class=\"keyword\">int</span> w = <span class=\"number\">0</span>) :</span><br><span class=\"line\">\t\t\tu(u), v(v), w(w) &#123;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(<span class=\"keyword\">const</span> Edge&amp; othr) <span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> w &lt; othr.w;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;Edge&gt; vt;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;Edge&gt; res;</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[N][N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">bool</span> first = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (~<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;n)) &#123;</span><br><span class=\"line\">\t\tvt.clear();</span><br><span class=\"line\">\t\tres.clear();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!first) <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> first = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x, j = <span class=\"number\">1</span>; j &lt;= n; j++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;x);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (j &gt; i)</span><br><span class=\"line\">\t\t\t\t\tvt.push_back(Edge(i, j, x));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= n; i++) p[i] = i;</span><br><span class=\"line\">\t\tsort(vt.begin(), vt.end());</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) fill(f[i]+<span class=\"number\">1</span>,f[i]+<span class=\"number\">1</span>+n,inf);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>, i = <span class=\"number\">0</span>; i &lt; (<span class=\"keyword\">int</span>) vt.size(); i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (Union(vt[i].u, vt[i].v)) &#123;</span><br><span class=\"line\">\t\t\t\tf[vt[i].u][vt[i].v] = vt[i].w;</span><br><span class=\"line\">\t\t\t\tf[vt[i].v][vt[i].u] = vt[i].w;</span><br><span class=\"line\">\t\t\t\tcnt++;</span><br><span class=\"line\">\t\t\t\tres.push_back(Edge(vt[i].u, vt[i].v, vt[i].w));</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (cnt &gt;= n - <span class=\"number\">1</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">1</span>; k &lt;= n; k++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (f[i][k] == inf) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (f[i][j] &gt; f[i][k] + f[k][j]) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tf[i][j] = f[i][k] + f[k][j];</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; (<span class=\"keyword\">int</span>) vt.size(); i++) &#123;</span><br><span class=\"line\">\t\t\tEdge now = vt[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (f[now.u][now.v] != now.w) &#123;</span><br><span class=\"line\">\t\t\t\tres.push_back(Edge(now.u, now.v, now.w));</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (flag) res.push_back(res.back());</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; (<span class=\"keyword\">int</span>) res.size(); i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d %d %d\\n\"</span>, res[i].u, res[i].v, res[i].w);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>原题pdf：<a href=\"https://icpcarchive.ecs.baylor.edu/external/66/6622.pdf\" target=\"_blank\" rel=\"noopener\">click here</a></p>\n<p>##Description<br>The people of Absurdistan discovered how to build roads only last year. After the discovery, every city<br>decided to build their own road connecting their city with another city. Each newly built road can be<br>used in both directions.</p>\n<p>Absurdistan is full of surprising coincidences. It took all N cities precisely one year to build their<br>roads. And even more surprisingly, in the end it was possible to travel from every city to every other<br>city using the newly built roads.</p>","more":"<p>You bought a tourist guide which does not have a map of the country with the new roads. It only<br>contains a huge table with the shortest distances between all pairs of cities using the newly built roads.</p>\n<p>You would like to know between which pairs of cities there are roads and how long they are, because<br>you want to reconstruct the map of the N newly built roads from the table of shortest distances.</p>\n<p>You get a table of shortest distances between all pairs of cities in Absurdistan using the N roads<br>built last year. From this table, you must reconstruct the road network of Absurdistan. There might<br>be multiple road networks with N roads with that same table of shortest distances, but you are happy<br>with any one of those networks.</p>\n<p>##Input<br>For each test case:  </p>\n<p>• A line containing an integer N (2 ≤ N ≤ 2000) — the number of cities and roads.  </p>\n<p>• N lines with N numbers each. The j-th number of the i-th line is the shortest distance from city i to city j.</p>\n<p>• All distances between two distinct cities will be positive and at most 1 000 000. The<br>distance from i to i will always be 0 and the distance from i to j will be the same as the distance<br>from j to i.</p>\n<p>##Output<br>For each test case:</p>\n<p>• Print N lines with three integers ‘a b c’ denoting that there is a road between cities 1 ≤ a ≤ N<br>and 1 ≤ b ≤ N of length 1 ≤ c ≤ 1000000, where a ̸= b. If there are multiple solutions, you can<br>print any one and you can print the roads in any order. At least one solution is guaranteed to<br>exist.</p>\n<p>• Print a blank line between every two test cases.</p>\n<p>##Sample Input<br>4<br>0 1 2 1<br>1 0 2 1<br>2 2 0 1<br>1 1 1 0<br>4<br>0 1 1 1<br>1 0 2 2<br>1 2 0 2<br>1 2 2 0<br>3<br>0 4 1<br>4 0 3<br>1 3 0  </p>\n<p>##Sample Output<br>2 1 1<br>4 1 1<br>4 2 1<br>4 3 1<br>2 1 1<br>3 1 1<br>4 1 1<br>2 1 1<br>3 1 1<br>2 1 4<br>3 2 3<br><br></p>\n<hr>\n<p>NWERC 题目还挺简单的。<br>题意就是一个N个顶点，N条边的无向图。告诉你两两点之间的最短路。让你重构这个图。(随意输出任意一张满足以上条件的图）<br>这题的突破口就是N条边。要想想如果只有N-1条边，那么这个图就是一个树了。所以，我们可以先构造最小生成树，再来考虑最后一条边。<br>可以先将构造好的树求一遍floyd，然后再跟题目的最短路相比较，如果两点u,v求出的最短路w`与题目给的最短路w不一致（可以断言：w`&gt;w），那么就将w作为最后一条边的边长加在u，v之间即可。这样的边可能会找到很多，事实上只需要加上任意一条就使所有的w`都等于w了。<br>需要注意的是，可能整个树就已经满足题目了。这样的话，最后一条边只需要重复任意一条树边就好了。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">2010</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> inf = <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">25</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> p[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">ufind</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x == p[x] ? x : p[x] = ufind(p[x]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Union</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> fx = ufind(x);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> fy = ufind(y);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (fx == fy)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\tp[fx] = fy;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Edge</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> u, v, w;</span><br><span class=\"line\">\tEdge(<span class=\"keyword\">int</span> u = <span class=\"number\">0</span>, <span class=\"keyword\">int</span> v = <span class=\"number\">0</span>, <span class=\"keyword\">int</span> w = <span class=\"number\">0</span>) :</span><br><span class=\"line\">\t\t\tu(u), v(v), w(w) &#123;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(<span class=\"keyword\">const</span> Edge&amp; othr) <span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> w &lt; othr.w;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;Edge&gt; vt;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;Edge&gt; res;</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[N][N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">bool</span> first = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (~<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;n)) &#123;</span><br><span class=\"line\">\t\tvt.clear();</span><br><span class=\"line\">\t\tres.clear();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!first) <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> first = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x, j = <span class=\"number\">1</span>; j &lt;= n; j++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;x);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (j &gt; i)</span><br><span class=\"line\">\t\t\t\t\tvt.push_back(Edge(i, j, x));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= n; i++) p[i] = i;</span><br><span class=\"line\">\t\tsort(vt.begin(), vt.end());</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) fill(f[i]+<span class=\"number\">1</span>,f[i]+<span class=\"number\">1</span>+n,inf);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>, i = <span class=\"number\">0</span>; i &lt; (<span class=\"keyword\">int</span>) vt.size(); i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (Union(vt[i].u, vt[i].v)) &#123;</span><br><span class=\"line\">\t\t\t\tf[vt[i].u][vt[i].v] = vt[i].w;</span><br><span class=\"line\">\t\t\t\tf[vt[i].v][vt[i].u] = vt[i].w;</span><br><span class=\"line\">\t\t\t\tcnt++;</span><br><span class=\"line\">\t\t\t\tres.push_back(Edge(vt[i].u, vt[i].v, vt[i].w));</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (cnt &gt;= n - <span class=\"number\">1</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">1</span>; k &lt;= n; k++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (f[i][k] == inf) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (f[i][j] &gt; f[i][k] + f[k][j]) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tf[i][j] = f[i][k] + f[k][j];</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; (<span class=\"keyword\">int</span>) vt.size(); i++) &#123;</span><br><span class=\"line\">\t\t\tEdge now = vt[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (f[now.u][now.v] != now.w) &#123;</span><br><span class=\"line\">\t\t\t\tres.push_back(Edge(now.u, now.v, now.w));</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (flag) res.push_back(res.back());</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; (<span class=\"keyword\">int</span>) res.size(); i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d %d %d\\n\"</span>, res[i].u, res[i].v, res[i].w);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"体验I3之美","date":"2017-03-19T16:00:00.000Z","grammar_cjkRuby":true,"_content":"![enter description here][1]\n先晒张日常桌面图。Gnome3用了半年了一直被其蹩脚的交互和层出不穷的Bug所折磨。虽然Gnome3很漂亮，很简洁，但是毕竟漂亮不能当饭吃。套餐这种东西虽然简单省事，但是终究不是为你所量身定制的，总有其中一样不合你口味。因此，我决定再次抛弃“开箱即用”的DE(Desktop Environment)，在WM(Window Manager)的基础上自己打造一套适合自己的桌面环境。\n<!-- more -->\n## i3WM\ni3是一个比较知名的平铺式的窗口管理器（TilingWM），它可以通过快捷键来管理程序窗口，使他们像截图那样平铺在显示屏幕，控制他们的大小和位置。十分高效也有几分Geek的味道。  \ni3的所有配置全部使用shell写成，甚至顶部panel的各种指示器，都由用户自己写的bash脚本获得并显示。十分简单暴力。虽然没有图形界面那么直观，但是有一种一切尽在自己掌控之下的感觉。这种感觉其实是十分十分不错的。  \n我的I3WM配置文件托管在了[Github][2]。\n## 配置细节\nI3配置文件的语法其实跟shell差不多，熟悉Linux的用户应该都能完全看懂。我的配置文件分为几大模块：\n### Workspaces\n工作区配置，我根据日常使用的程序类别一共设置了10个工作区(图标显示需要在本地电脑上安装Fontawesome字体）：\n```bash\nset $ws1 \t     \"1: Browser\"\nset $ws2         \"2: Code\"\nset $ws3 \t\t \"3: Chat\"\nset $ws4 \t\t \"4: File\"\nset $ws5 \t\t \"5: Terminal\"\nset $ws6 \t\t \"6: Video\"\nset $ws7 \t     \"7: Music\"\nset $ws8  \t     \"8:  Graphic\"\nset $ws9 \t\t \"9: Game\"\nset $ws0 \t\t \"0: Fullscreen\"\n```\n然后，把属于各自类别的程序绑定到对应的工作区，这样打开这些程序的时候他们就能自动出现在合适的工作区了：\n```bash\nassign \t[class=\"google-chrome-stable\"] \t\t\t$ws1   # Browser\nassign \t[class=\"vivaldi\"] \t\t\t\t\t\t            $ws1   # Browser\nassign \t[class=\"firefox\"] \t\t\t\t\t            \t$ws1   # Browser\nassign  [class=\"(?i)code\"]                                $ws2   # Code IDE\n# ...\nassign  [class=\"dota2\"]         \t\t                   $ws0   # Fullscreen\nassign\t[class=\"Minecraft 1.8.9\"]\t\t              $ws0   # Fullscreen\n```\n### Application\n在i3配置文件里面我们可以对常用的程序绑定快捷启动键：\n```bash\nbindsym F10 exec xfce4-appfinder\nbindsym Print exec xfce4-screenshooter\n\n# bindsym $mod+Return exec i3-sensible-terminal\nbindsym $mod+Return exec pantheon-terminal\n\nbindsym $mod+Control+t exec telegram-desktop\nbindsym $mod+Control+g exec google-chrome-stable\nbindsym $mod+Control+v exec vivaldi\nbindsym $mod+Control+f exec nemo\nbindsym $mod+Control+c exec code\nbindsym $mod+Control+n exec nitrogen\nbindsym $mod+Control+w exec electronic-wechat\nbindsym $mod+Control+y exec youdao-dict\n```\n然后，对于特殊的不适合平铺的窗口，可以直接设置它们为浮动窗口：\n```bash\nfor_window [class=\"Geany\"] floating enable border normal\nfor_window [class=\"GParted\"] floating enable border normal\nfor_window [class=\"Nitrogen\"] floating enable border normal\nfor_window [class=\"(?i)virtualbox\"] floating enable border normal\nfor_window [class=\"Youdao Dict\"] floating enable border normal\n# ...\n```\nPS：可以使用`xprop|grep WM_CLASS`来查看正在运行窗口的class名称。\n### i3blocks\ni3blocks是I3顶部面板的一个可选组件。它使用ini格式的配置文件，支持多种终端脚本，还支持鼠标点击、滚动事件，十分强大。配置文件样本如下：\n```ini\ncommand=~/.config/i3/blocks/$BLOCK_NAME\nalign=center\ncolor=#ffffff\nseparator=true\nseparator_block_width=13\nmarkup=pango\n\n[disk-home]\nlabel=\ncommand=~/.config/i3/blocks/disk $HOME\ninstance=/home/kevin\ninterval=30\ncolor=#FFCC80\n\n[weather]\ninstance=1808926 # hangzhou's city code\ninterval=60\ncolor=#90CAF9\n\n# ...\n```\n主要字段解释：\n- 首先前面无section的parameters属于默认配置项，为每个section的缺省配置。  \n- 然后每个section都对应顶栏上面的一个指示器，称为block。  \n- 每个block必须显示一定的数据，可以通过command配置项指定获取数据的命令，并使用interval来设置命令执行周期间隔。\n- instance为可以传递到command脚本中的环境变量。\n- color和label为颜色和标签，属于修饰性的配置项。\n\n所有可用的block命令可以参考我的配置文件夹：[blocks][3]\n\n### compton\ncompton可以给i3带来透明和阴影效果的支持。如果只关心性能而不介意美观与否，你完全可以跳过此节。\ncompton默认是不给顶栏加透明效果的，需要加入如下配置：\n```\nwintypes:\n{\n    dock = \n    { \n        opacity = 0.8;        \n    };\n};\n```\n同时，compton的阴影效果不适用于某些窗口，需要排除它们：\n```\nshadow-exclude = [\n    \"name = 'Notification'\",\n    \"name *= 'compton'\",\n    \"class_g = 'Conky'\",\n    \"class_g = 'Firefox'\",\n    \"class_g *= 'fcitx'\",\n    \"class_g = 'Youdao Dict'\"\n];\n```\n## 易用性建议\ni3WM只是一个地基，我们可以在这之上搭建一个适合自己的环境。每个人的口味都不一样，所以我简单的罗列一下我个人比较喜欢的应用和配置以供参考。\n- dmenu: WM下使用最广泛的应用启动器，可以自动根据用户输入的命令进行提示。\n- rofi: dmenu的替代品\n- quickswitch.py:  跨工作区窗口快速跳转工具，可以整合到dmenu中。\n-  xfce4-appfinder:  xfce4的应用程序列表。能够自动搜索文件系统中的desktop文件，并生成应用列表。非常实用的工具。\n-  pantheon-terminal: elementaryOS的默认终端。小巧，依赖少，支持背景透明、多标签，很完美的终端模拟器。（需要使用dconf-editor来修改设置，位置：`/org/pantheon/terminal/settings/`）\n-  nemo: linuxmint的默认文件管理器，forks自nautilus，但是比nautilus好用得多。（使用之前需要使用dconf-editor设置`/org/nemo/desktop/show-desktop-icons`为`false`）\n-  nitrogen: 提供简单的图形界面来设置壁纸并在每次开机之后自动恢复。\n- clipit: 剪贴板支持\n- lightdm: 轻量级图形登录界面\n\n\n\n  [1]: https://ol1kreips.qnssl.com/%E6%88%AA%E5%9B%BE_2017-03-13_18-50-11.png \"截图_2017-03-13_18-50-11\"\n  [2]: https://github.com/stkevintan/i3dotfile\n  [3]: https://github.com/stkevintan/i3dotfile/tree/master/blocks","source":"_posts/beautifull-i3.md","raw":"---\ntitle:  体验I3之美\ncategories: [Linux]\ntags: [gnome,i3wm]\ndate: 2017-3-20\ngrammar_cjkRuby: true\n---\n![enter description here][1]\n先晒张日常桌面图。Gnome3用了半年了一直被其蹩脚的交互和层出不穷的Bug所折磨。虽然Gnome3很漂亮，很简洁，但是毕竟漂亮不能当饭吃。套餐这种东西虽然简单省事，但是终究不是为你所量身定制的，总有其中一样不合你口味。因此，我决定再次抛弃“开箱即用”的DE(Desktop Environment)，在WM(Window Manager)的基础上自己打造一套适合自己的桌面环境。\n<!-- more -->\n## i3WM\ni3是一个比较知名的平铺式的窗口管理器（TilingWM），它可以通过快捷键来管理程序窗口，使他们像截图那样平铺在显示屏幕，控制他们的大小和位置。十分高效也有几分Geek的味道。  \ni3的所有配置全部使用shell写成，甚至顶部panel的各种指示器，都由用户自己写的bash脚本获得并显示。十分简单暴力。虽然没有图形界面那么直观，但是有一种一切尽在自己掌控之下的感觉。这种感觉其实是十分十分不错的。  \n我的I3WM配置文件托管在了[Github][2]。\n## 配置细节\nI3配置文件的语法其实跟shell差不多，熟悉Linux的用户应该都能完全看懂。我的配置文件分为几大模块：\n### Workspaces\n工作区配置，我根据日常使用的程序类别一共设置了10个工作区(图标显示需要在本地电脑上安装Fontawesome字体）：\n```bash\nset $ws1 \t     \"1: Browser\"\nset $ws2         \"2: Code\"\nset $ws3 \t\t \"3: Chat\"\nset $ws4 \t\t \"4: File\"\nset $ws5 \t\t \"5: Terminal\"\nset $ws6 \t\t \"6: Video\"\nset $ws7 \t     \"7: Music\"\nset $ws8  \t     \"8:  Graphic\"\nset $ws9 \t\t \"9: Game\"\nset $ws0 \t\t \"0: Fullscreen\"\n```\n然后，把属于各自类别的程序绑定到对应的工作区，这样打开这些程序的时候他们就能自动出现在合适的工作区了：\n```bash\nassign \t[class=\"google-chrome-stable\"] \t\t\t$ws1   # Browser\nassign \t[class=\"vivaldi\"] \t\t\t\t\t\t            $ws1   # Browser\nassign \t[class=\"firefox\"] \t\t\t\t\t            \t$ws1   # Browser\nassign  [class=\"(?i)code\"]                                $ws2   # Code IDE\n# ...\nassign  [class=\"dota2\"]         \t\t                   $ws0   # Fullscreen\nassign\t[class=\"Minecraft 1.8.9\"]\t\t              $ws0   # Fullscreen\n```\n### Application\n在i3配置文件里面我们可以对常用的程序绑定快捷启动键：\n```bash\nbindsym F10 exec xfce4-appfinder\nbindsym Print exec xfce4-screenshooter\n\n# bindsym $mod+Return exec i3-sensible-terminal\nbindsym $mod+Return exec pantheon-terminal\n\nbindsym $mod+Control+t exec telegram-desktop\nbindsym $mod+Control+g exec google-chrome-stable\nbindsym $mod+Control+v exec vivaldi\nbindsym $mod+Control+f exec nemo\nbindsym $mod+Control+c exec code\nbindsym $mod+Control+n exec nitrogen\nbindsym $mod+Control+w exec electronic-wechat\nbindsym $mod+Control+y exec youdao-dict\n```\n然后，对于特殊的不适合平铺的窗口，可以直接设置它们为浮动窗口：\n```bash\nfor_window [class=\"Geany\"] floating enable border normal\nfor_window [class=\"GParted\"] floating enable border normal\nfor_window [class=\"Nitrogen\"] floating enable border normal\nfor_window [class=\"(?i)virtualbox\"] floating enable border normal\nfor_window [class=\"Youdao Dict\"] floating enable border normal\n# ...\n```\nPS：可以使用`xprop|grep WM_CLASS`来查看正在运行窗口的class名称。\n### i3blocks\ni3blocks是I3顶部面板的一个可选组件。它使用ini格式的配置文件，支持多种终端脚本，还支持鼠标点击、滚动事件，十分强大。配置文件样本如下：\n```ini\ncommand=~/.config/i3/blocks/$BLOCK_NAME\nalign=center\ncolor=#ffffff\nseparator=true\nseparator_block_width=13\nmarkup=pango\n\n[disk-home]\nlabel=\ncommand=~/.config/i3/blocks/disk $HOME\ninstance=/home/kevin\ninterval=30\ncolor=#FFCC80\n\n[weather]\ninstance=1808926 # hangzhou's city code\ninterval=60\ncolor=#90CAF9\n\n# ...\n```\n主要字段解释：\n- 首先前面无section的parameters属于默认配置项，为每个section的缺省配置。  \n- 然后每个section都对应顶栏上面的一个指示器，称为block。  \n- 每个block必须显示一定的数据，可以通过command配置项指定获取数据的命令，并使用interval来设置命令执行周期间隔。\n- instance为可以传递到command脚本中的环境变量。\n- color和label为颜色和标签，属于修饰性的配置项。\n\n所有可用的block命令可以参考我的配置文件夹：[blocks][3]\n\n### compton\ncompton可以给i3带来透明和阴影效果的支持。如果只关心性能而不介意美观与否，你完全可以跳过此节。\ncompton默认是不给顶栏加透明效果的，需要加入如下配置：\n```\nwintypes:\n{\n    dock = \n    { \n        opacity = 0.8;        \n    };\n};\n```\n同时，compton的阴影效果不适用于某些窗口，需要排除它们：\n```\nshadow-exclude = [\n    \"name = 'Notification'\",\n    \"name *= 'compton'\",\n    \"class_g = 'Conky'\",\n    \"class_g = 'Firefox'\",\n    \"class_g *= 'fcitx'\",\n    \"class_g = 'Youdao Dict'\"\n];\n```\n## 易用性建议\ni3WM只是一个地基，我们可以在这之上搭建一个适合自己的环境。每个人的口味都不一样，所以我简单的罗列一下我个人比较喜欢的应用和配置以供参考。\n- dmenu: WM下使用最广泛的应用启动器，可以自动根据用户输入的命令进行提示。\n- rofi: dmenu的替代品\n- quickswitch.py:  跨工作区窗口快速跳转工具，可以整合到dmenu中。\n-  xfce4-appfinder:  xfce4的应用程序列表。能够自动搜索文件系统中的desktop文件，并生成应用列表。非常实用的工具。\n-  pantheon-terminal: elementaryOS的默认终端。小巧，依赖少，支持背景透明、多标签，很完美的终端模拟器。（需要使用dconf-editor来修改设置，位置：`/org/pantheon/terminal/settings/`）\n-  nemo: linuxmint的默认文件管理器，forks自nautilus，但是比nautilus好用得多。（使用之前需要使用dconf-editor设置`/org/nemo/desktop/show-desktop-icons`为`false`）\n-  nitrogen: 提供简单的图形界面来设置壁纸并在每次开机之后自动恢复。\n- clipit: 剪贴板支持\n- lightdm: 轻量级图形登录界面\n\n\n\n  [1]: https://ol1kreips.qnssl.com/%E6%88%AA%E5%9B%BE_2017-03-13_18-50-11.png \"截图_2017-03-13_18-50-11\"\n  [2]: https://github.com/stkevintan/i3dotfile\n  [3]: https://github.com/stkevintan/i3dotfile/tree/master/blocks","slug":"beautifull-i3","published":1,"updated":"2019-10-11T05:50:15.654Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1uam0ql000hs8qqbitf0ex2","content":"<p><img src=\"https://ol1kreips.qnssl.com/%E6%88%AA%E5%9B%BE_2017-03-13_18-50-11.png\" alt=\"enter description here\" title=\"截图_2017-03-13_18-50-11\"><br>先晒张日常桌面图。Gnome3用了半年了一直被其蹩脚的交互和层出不穷的Bug所折磨。虽然Gnome3很漂亮，很简洁，但是毕竟漂亮不能当饭吃。套餐这种东西虽然简单省事，但是终究不是为你所量身定制的，总有其中一样不合你口味。因此，我决定再次抛弃“开箱即用”的DE(Desktop Environment)，在WM(Window Manager)的基础上自己打造一套适合自己的桌面环境。<br><a id=\"more\"></a></p>\n<h2 id=\"i3WM\"><a href=\"#i3WM\" class=\"headerlink\" title=\"i3WM\"></a>i3WM</h2><p>i3是一个比较知名的平铺式的窗口管理器（TilingWM），它可以通过快捷键来管理程序窗口，使他们像截图那样平铺在显示屏幕，控制他们的大小和位置。十分高效也有几分Geek的味道。<br>i3的所有配置全部使用shell写成，甚至顶部panel的各种指示器，都由用户自己写的bash脚本获得并显示。十分简单暴力。虽然没有图形界面那么直观，但是有一种一切尽在自己掌控之下的感觉。这种感觉其实是十分十分不错的。<br>我的I3WM配置文件托管在了<a href=\"https://github.com/stkevintan/i3dotfile\" target=\"_blank\" rel=\"noopener\">Github</a>。</p>\n<h2 id=\"配置细节\"><a href=\"#配置细节\" class=\"headerlink\" title=\"配置细节\"></a>配置细节</h2><p>I3配置文件的语法其实跟shell差不多，熟悉Linux的用户应该都能完全看懂。我的配置文件分为几大模块：</p>\n<h3 id=\"Workspaces\"><a href=\"#Workspaces\" class=\"headerlink\" title=\"Workspaces\"></a>Workspaces</h3><p>工作区配置，我根据日常使用的程序类别一共设置了10个工作区(图标显示需要在本地电脑上安装Fontawesome字体）：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws1</span> \t     <span class=\"string\">\"1: Browser\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws2</span>         <span class=\"string\">\"2: Code\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws3</span> \t\t <span class=\"string\">\"3: Chat\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws4</span> \t\t <span class=\"string\">\"4: File\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws5</span> \t\t <span class=\"string\">\"5: Terminal\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws6</span> \t\t <span class=\"string\">\"6: Video\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws7</span> \t     <span class=\"string\">\"7: Music\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws8</span>  \t     <span class=\"string\">\"8:  Graphic\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws9</span> \t\t <span class=\"string\">\"9: Game\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws0</span> \t\t <span class=\"string\">\"0: Fullscreen\"</span></span><br></pre></td></tr></table></figure></p>\n<p>然后，把属于各自类别的程序绑定到对应的工作区，这样打开这些程序的时候他们就能自动出现在合适的工作区了：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assign \t[class=<span class=\"string\">\"google-chrome-stable\"</span>] \t\t\t<span class=\"variable\">$ws1</span>   <span class=\"comment\"># Browser</span></span><br><span class=\"line\">assign \t[class=<span class=\"string\">\"vivaldi\"</span>] \t\t\t\t\t\t            <span class=\"variable\">$ws1</span>   <span class=\"comment\"># Browser</span></span><br><span class=\"line\">assign \t[class=<span class=\"string\">\"firefox\"</span>] \t\t\t\t\t            \t<span class=\"variable\">$ws1</span>   <span class=\"comment\"># Browser</span></span><br><span class=\"line\">assign  [class=<span class=\"string\">\"(?i)code\"</span>]                                <span class=\"variable\">$ws2</span>   <span class=\"comment\"># Code IDE</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">assign  [class=<span class=\"string\">\"dota2\"</span>]         \t\t                   <span class=\"variable\">$ws0</span>   <span class=\"comment\"># Fullscreen</span></span><br><span class=\"line\">assign\t[class=<span class=\"string\">\"Minecraft 1.8.9\"</span>]\t\t              <span class=\"variable\">$ws0</span>   <span class=\"comment\"># Fullscreen</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h3><p>在i3配置文件里面我们可以对常用的程序绑定快捷启动键：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bindsym F10 <span class=\"built_in\">exec</span> xfce4-appfinder</span><br><span class=\"line\">bindsym Print <span class=\"built_in\">exec</span> xfce4-screenshooter</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># bindsym $mod+Return exec i3-sensible-terminal</span></span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Return <span class=\"built_in\">exec</span> pantheon-terminal</span><br><span class=\"line\"></span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+t <span class=\"built_in\">exec</span> telegram-desktop</span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+g <span class=\"built_in\">exec</span> google-chrome-stable</span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+v <span class=\"built_in\">exec</span> vivaldi</span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+f <span class=\"built_in\">exec</span> nemo</span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+c <span class=\"built_in\">exec</span> code</span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+n <span class=\"built_in\">exec</span> nitrogen</span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+w <span class=\"built_in\">exec</span> electronic-wechat</span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+y <span class=\"built_in\">exec</span> youdao-dict</span><br></pre></td></tr></table></figure></p>\n<p>然后，对于特殊的不适合平铺的窗口，可以直接设置它们为浮动窗口：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for_window [class=<span class=\"string\">\"Geany\"</span>] floating <span class=\"built_in\">enable</span> border normal</span><br><span class=\"line\">for_window [class=<span class=\"string\">\"GParted\"</span>] floating <span class=\"built_in\">enable</span> border normal</span><br><span class=\"line\">for_window [class=<span class=\"string\">\"Nitrogen\"</span>] floating <span class=\"built_in\">enable</span> border normal</span><br><span class=\"line\">for_window [class=<span class=\"string\">\"(?i)virtualbox\"</span>] floating <span class=\"built_in\">enable</span> border normal</span><br><span class=\"line\">for_window [class=<span class=\"string\">\"Youdao Dict\"</span>] floating <span class=\"built_in\">enable</span> border normal</span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure></p>\n<p>PS：可以使用<code>xprop|grep WM_CLASS</code>来查看正在运行窗口的class名称。</p>\n<h3 id=\"i3blocks\"><a href=\"#i3blocks\" class=\"headerlink\" title=\"i3blocks\"></a>i3blocks</h3><p>i3blocks是I3顶部面板的一个可选组件。它使用ini格式的配置文件，支持多种终端脚本，还支持鼠标点击、滚动事件，十分强大。配置文件样本如下：<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">command</span>=~/.config/i3/blocks/<span class=\"variable\">$BLOCK_NAME</span></span><br><span class=\"line\"><span class=\"attr\">align</span>=center</span><br><span class=\"line\"><span class=\"attr\">color</span>=<span class=\"comment\">#ffffff</span></span><br><span class=\"line\"><span class=\"attr\">separator</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">separator_block_width</span>=<span class=\"number\">13</span></span><br><span class=\"line\"><span class=\"attr\">markup</span>=pango</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[disk-home]</span></span><br><span class=\"line\"><span class=\"attr\">label</span>=</span><br><span class=\"line\"><span class=\"attr\">command</span>=~/.config/i3/blocks/disk <span class=\"variable\">$HOME</span></span><br><span class=\"line\"><span class=\"attr\">instance</span>=/home/kevin</span><br><span class=\"line\"><span class=\"attr\">interval</span>=<span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"attr\">color</span>=<span class=\"comment\">#FFCC80</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[weather]</span></span><br><span class=\"line\"><span class=\"attr\">instance</span>=<span class=\"number\">1808926</span> <span class=\"comment\"># hangzhou's city code</span></span><br><span class=\"line\"><span class=\"attr\">interval</span>=<span class=\"number\">60</span></span><br><span class=\"line\"><span class=\"attr\">color</span>=<span class=\"comment\">#90CAF9</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure></p>\n<p>主要字段解释：</p>\n<ul>\n<li>首先前面无section的parameters属于默认配置项，为每个section的缺省配置。  </li>\n<li>然后每个section都对应顶栏上面的一个指示器，称为block。  </li>\n<li>每个block必须显示一定的数据，可以通过command配置项指定获取数据的命令，并使用interval来设置命令执行周期间隔。</li>\n<li>instance为可以传递到command脚本中的环境变量。</li>\n<li>color和label为颜色和标签，属于修饰性的配置项。</li>\n</ul>\n<p>所有可用的block命令可以参考我的配置文件夹：<a href=\"https://github.com/stkevintan/i3dotfile/tree/master/blocks\" target=\"_blank\" rel=\"noopener\">blocks</a></p>\n<h3 id=\"compton\"><a href=\"#compton\" class=\"headerlink\" title=\"compton\"></a>compton</h3><p>compton可以给i3带来透明和阴影效果的支持。如果只关心性能而不介意美观与否，你完全可以跳过此节。<br>compton默认是不给顶栏加透明效果的，需要加入如下配置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wintypes:</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    dock = </span><br><span class=\"line\">    &#123; </span><br><span class=\"line\">        opacity = 0.8;        </span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>同时，compton的阴影效果不适用于某些窗口，需要排除它们：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shadow-exclude = [</span><br><span class=\"line\">    &quot;name = &apos;Notification&apos;&quot;,</span><br><span class=\"line\">    &quot;name *= &apos;compton&apos;&quot;,</span><br><span class=\"line\">    &quot;class_g = &apos;Conky&apos;&quot;,</span><br><span class=\"line\">    &quot;class_g = &apos;Firefox&apos;&quot;,</span><br><span class=\"line\">    &quot;class_g *= &apos;fcitx&apos;&quot;,</span><br><span class=\"line\">    &quot;class_g = &apos;Youdao Dict&apos;&quot;</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"易用性建议\"><a href=\"#易用性建议\" class=\"headerlink\" title=\"易用性建议\"></a>易用性建议</h2><p>i3WM只是一个地基，我们可以在这之上搭建一个适合自己的环境。每个人的口味都不一样，所以我简单的罗列一下我个人比较喜欢的应用和配置以供参考。</p>\n<ul>\n<li>dmenu: WM下使用最广泛的应用启动器，可以自动根据用户输入的命令进行提示。</li>\n<li>rofi: dmenu的替代品</li>\n<li>quickswitch.py:  跨工作区窗口快速跳转工具，可以整合到dmenu中。</li>\n<li>xfce4-appfinder:  xfce4的应用程序列表。能够自动搜索文件系统中的desktop文件，并生成应用列表。非常实用的工具。</li>\n<li>pantheon-terminal: elementaryOS的默认终端。小巧，依赖少，支持背景透明、多标签，很完美的终端模拟器。（需要使用dconf-editor来修改设置，位置：<code>/org/pantheon/terminal/settings/</code>）</li>\n<li>nemo: linuxmint的默认文件管理器，forks自nautilus，但是比nautilus好用得多。（使用之前需要使用dconf-editor设置<code>/org/nemo/desktop/show-desktop-icons</code>为<code>false</code>）</li>\n<li>nitrogen: 提供简单的图形界面来设置壁纸并在每次开机之后自动恢复。</li>\n<li>clipit: 剪贴板支持</li>\n<li>lightdm: 轻量级图形登录界面</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://ol1kreips.qnssl.com/%E6%88%AA%E5%9B%BE_2017-03-13_18-50-11.png\" alt=\"enter description here\" title=\"截图_2017-03-13_18-50-11\"><br>先晒张日常桌面图。Gnome3用了半年了一直被其蹩脚的交互和层出不穷的Bug所折磨。虽然Gnome3很漂亮，很简洁，但是毕竟漂亮不能当饭吃。套餐这种东西虽然简单省事，但是终究不是为你所量身定制的，总有其中一样不合你口味。因此，我决定再次抛弃“开箱即用”的DE(Desktop Environment)，在WM(Window Manager)的基础上自己打造一套适合自己的桌面环境。<br>","more":"</p>\n<h2 id=\"i3WM\"><a href=\"#i3WM\" class=\"headerlink\" title=\"i3WM\"></a>i3WM</h2><p>i3是一个比较知名的平铺式的窗口管理器（TilingWM），它可以通过快捷键来管理程序窗口，使他们像截图那样平铺在显示屏幕，控制他们的大小和位置。十分高效也有几分Geek的味道。<br>i3的所有配置全部使用shell写成，甚至顶部panel的各种指示器，都由用户自己写的bash脚本获得并显示。十分简单暴力。虽然没有图形界面那么直观，但是有一种一切尽在自己掌控之下的感觉。这种感觉其实是十分十分不错的。<br>我的I3WM配置文件托管在了<a href=\"https://github.com/stkevintan/i3dotfile\" target=\"_blank\" rel=\"noopener\">Github</a>。</p>\n<h2 id=\"配置细节\"><a href=\"#配置细节\" class=\"headerlink\" title=\"配置细节\"></a>配置细节</h2><p>I3配置文件的语法其实跟shell差不多，熟悉Linux的用户应该都能完全看懂。我的配置文件分为几大模块：</p>\n<h3 id=\"Workspaces\"><a href=\"#Workspaces\" class=\"headerlink\" title=\"Workspaces\"></a>Workspaces</h3><p>工作区配置，我根据日常使用的程序类别一共设置了10个工作区(图标显示需要在本地电脑上安装Fontawesome字体）：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws1</span> \t     <span class=\"string\">\"1: Browser\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws2</span>         <span class=\"string\">\"2: Code\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws3</span> \t\t <span class=\"string\">\"3: Chat\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws4</span> \t\t <span class=\"string\">\"4: File\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws5</span> \t\t <span class=\"string\">\"5: Terminal\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws6</span> \t\t <span class=\"string\">\"6: Video\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws7</span> \t     <span class=\"string\">\"7: Music\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws8</span>  \t     <span class=\"string\">\"8:  Graphic\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws9</span> \t\t <span class=\"string\">\"9: Game\"</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$ws0</span> \t\t <span class=\"string\">\"0: Fullscreen\"</span></span><br></pre></td></tr></table></figure></p>\n<p>然后，把属于各自类别的程序绑定到对应的工作区，这样打开这些程序的时候他们就能自动出现在合适的工作区了：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assign \t[class=<span class=\"string\">\"google-chrome-stable\"</span>] \t\t\t<span class=\"variable\">$ws1</span>   <span class=\"comment\"># Browser</span></span><br><span class=\"line\">assign \t[class=<span class=\"string\">\"vivaldi\"</span>] \t\t\t\t\t\t            <span class=\"variable\">$ws1</span>   <span class=\"comment\"># Browser</span></span><br><span class=\"line\">assign \t[class=<span class=\"string\">\"firefox\"</span>] \t\t\t\t\t            \t<span class=\"variable\">$ws1</span>   <span class=\"comment\"># Browser</span></span><br><span class=\"line\">assign  [class=<span class=\"string\">\"(?i)code\"</span>]                                <span class=\"variable\">$ws2</span>   <span class=\"comment\"># Code IDE</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">assign  [class=<span class=\"string\">\"dota2\"</span>]         \t\t                   <span class=\"variable\">$ws0</span>   <span class=\"comment\"># Fullscreen</span></span><br><span class=\"line\">assign\t[class=<span class=\"string\">\"Minecraft 1.8.9\"</span>]\t\t              <span class=\"variable\">$ws0</span>   <span class=\"comment\"># Fullscreen</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h3><p>在i3配置文件里面我们可以对常用的程序绑定快捷启动键：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bindsym F10 <span class=\"built_in\">exec</span> xfce4-appfinder</span><br><span class=\"line\">bindsym Print <span class=\"built_in\">exec</span> xfce4-screenshooter</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># bindsym $mod+Return exec i3-sensible-terminal</span></span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Return <span class=\"built_in\">exec</span> pantheon-terminal</span><br><span class=\"line\"></span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+t <span class=\"built_in\">exec</span> telegram-desktop</span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+g <span class=\"built_in\">exec</span> google-chrome-stable</span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+v <span class=\"built_in\">exec</span> vivaldi</span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+f <span class=\"built_in\">exec</span> nemo</span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+c <span class=\"built_in\">exec</span> code</span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+n <span class=\"built_in\">exec</span> nitrogen</span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+w <span class=\"built_in\">exec</span> electronic-wechat</span><br><span class=\"line\">bindsym <span class=\"variable\">$mod</span>+Control+y <span class=\"built_in\">exec</span> youdao-dict</span><br></pre></td></tr></table></figure></p>\n<p>然后，对于特殊的不适合平铺的窗口，可以直接设置它们为浮动窗口：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for_window [class=<span class=\"string\">\"Geany\"</span>] floating <span class=\"built_in\">enable</span> border normal</span><br><span class=\"line\">for_window [class=<span class=\"string\">\"GParted\"</span>] floating <span class=\"built_in\">enable</span> border normal</span><br><span class=\"line\">for_window [class=<span class=\"string\">\"Nitrogen\"</span>] floating <span class=\"built_in\">enable</span> border normal</span><br><span class=\"line\">for_window [class=<span class=\"string\">\"(?i)virtualbox\"</span>] floating <span class=\"built_in\">enable</span> border normal</span><br><span class=\"line\">for_window [class=<span class=\"string\">\"Youdao Dict\"</span>] floating <span class=\"built_in\">enable</span> border normal</span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure></p>\n<p>PS：可以使用<code>xprop|grep WM_CLASS</code>来查看正在运行窗口的class名称。</p>\n<h3 id=\"i3blocks\"><a href=\"#i3blocks\" class=\"headerlink\" title=\"i3blocks\"></a>i3blocks</h3><p>i3blocks是I3顶部面板的一个可选组件。它使用ini格式的配置文件，支持多种终端脚本，还支持鼠标点击、滚动事件，十分强大。配置文件样本如下：<br><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">command</span>=~/.config/i3/blocks/<span class=\"variable\">$BLOCK_NAME</span></span><br><span class=\"line\"><span class=\"attr\">align</span>=center</span><br><span class=\"line\"><span class=\"attr\">color</span>=<span class=\"comment\">#ffffff</span></span><br><span class=\"line\"><span class=\"attr\">separator</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">separator_block_width</span>=<span class=\"number\">13</span></span><br><span class=\"line\"><span class=\"attr\">markup</span>=pango</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[disk-home]</span></span><br><span class=\"line\"><span class=\"attr\">label</span>=</span><br><span class=\"line\"><span class=\"attr\">command</span>=~/.config/i3/blocks/disk <span class=\"variable\">$HOME</span></span><br><span class=\"line\"><span class=\"attr\">instance</span>=/home/kevin</span><br><span class=\"line\"><span class=\"attr\">interval</span>=<span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"attr\">color</span>=<span class=\"comment\">#FFCC80</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[weather]</span></span><br><span class=\"line\"><span class=\"attr\">instance</span>=<span class=\"number\">1808926</span> <span class=\"comment\"># hangzhou's city code</span></span><br><span class=\"line\"><span class=\"attr\">interval</span>=<span class=\"number\">60</span></span><br><span class=\"line\"><span class=\"attr\">color</span>=<span class=\"comment\">#90CAF9</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure></p>\n<p>主要字段解释：</p>\n<ul>\n<li>首先前面无section的parameters属于默认配置项，为每个section的缺省配置。  </li>\n<li>然后每个section都对应顶栏上面的一个指示器，称为block。  </li>\n<li>每个block必须显示一定的数据，可以通过command配置项指定获取数据的命令，并使用interval来设置命令执行周期间隔。</li>\n<li>instance为可以传递到command脚本中的环境变量。</li>\n<li>color和label为颜色和标签，属于修饰性的配置项。</li>\n</ul>\n<p>所有可用的block命令可以参考我的配置文件夹：<a href=\"https://github.com/stkevintan/i3dotfile/tree/master/blocks\" target=\"_blank\" rel=\"noopener\">blocks</a></p>\n<h3 id=\"compton\"><a href=\"#compton\" class=\"headerlink\" title=\"compton\"></a>compton</h3><p>compton可以给i3带来透明和阴影效果的支持。如果只关心性能而不介意美观与否，你完全可以跳过此节。<br>compton默认是不给顶栏加透明效果的，需要加入如下配置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wintypes:</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    dock = </span><br><span class=\"line\">    &#123; </span><br><span class=\"line\">        opacity = 0.8;        </span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>同时，compton的阴影效果不适用于某些窗口，需要排除它们：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shadow-exclude = [</span><br><span class=\"line\">    &quot;name = &apos;Notification&apos;&quot;,</span><br><span class=\"line\">    &quot;name *= &apos;compton&apos;&quot;,</span><br><span class=\"line\">    &quot;class_g = &apos;Conky&apos;&quot;,</span><br><span class=\"line\">    &quot;class_g = &apos;Firefox&apos;&quot;,</span><br><span class=\"line\">    &quot;class_g *= &apos;fcitx&apos;&quot;,</span><br><span class=\"line\">    &quot;class_g = &apos;Youdao Dict&apos;&quot;</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"易用性建议\"><a href=\"#易用性建议\" class=\"headerlink\" title=\"易用性建议\"></a>易用性建议</h2><p>i3WM只是一个地基，我们可以在这之上搭建一个适合自己的环境。每个人的口味都不一样，所以我简单的罗列一下我个人比较喜欢的应用和配置以供参考。</p>\n<ul>\n<li>dmenu: WM下使用最广泛的应用启动器，可以自动根据用户输入的命令进行提示。</li>\n<li>rofi: dmenu的替代品</li>\n<li>quickswitch.py:  跨工作区窗口快速跳转工具，可以整合到dmenu中。</li>\n<li>xfce4-appfinder:  xfce4的应用程序列表。能够自动搜索文件系统中的desktop文件，并生成应用列表。非常实用的工具。</li>\n<li>pantheon-terminal: elementaryOS的默认终端。小巧，依赖少，支持背景透明、多标签，很完美的终端模拟器。（需要使用dconf-editor来修改设置，位置：<code>/org/pantheon/terminal/settings/</code>）</li>\n<li>nemo: linuxmint的默认文件管理器，forks自nautilus，但是比nautilus好用得多。（使用之前需要使用dconf-editor设置<code>/org/nemo/desktop/show-desktop-icons</code>为<code>false</code>）</li>\n<li>nitrogen: 提供简单的图形界面来设置壁纸并在每次开机之后自动恢复。</li>\n<li>clipit: 剪贴板支持</li>\n<li>lightdm: 轻量级图形登录界面</li>\n</ul>"},{"title":"（转）关于卷积的一个血腥的讲解，看完给跪了","date":"2014-11-05T12:40:10.000Z","_content":"\n比如说你的老板命令你干活，你却到楼下打台球去了，后来被老板发现，他非常气愤，扇了你一巴掌（注意，这就是输入信号，脉冲），于是你的脸上会渐渐地（贱贱地）鼓起来一个包，你的脸就是一个系统，而鼓起来的包就是你的脸对巴掌的响应，好，这样就和信号系统建立起来意义对应的联系。下面还需要一些假设来保证论证的严谨：假定你的脸是线性时不变系统，也就是说，无论什么时候老板打你一巴掌，打在你脸的同一位置（这似乎要求你的脸足够光滑，如果你说你长了很多青春痘，甚至整个脸皮处处连续处处不可导，那难度太大了，我就无话可说了哈哈），你的脸上总是会在相同的时间间隔内鼓起来一个相同高度的包来，并且假定以鼓起来的包的大小作为系统输出。好了，那么，下面可以进入核心内容——卷积了！\n<!--more-->\n如果你每天都到地下去打台球，那么老板每天都要扇你一巴掌，不过当老板打你一巴掌后，你5分钟就消肿了，所以时间长了，你甚至就适应这种生活了……如果有一天，老板忍无可忍，以0.5秒的间隔开始不间断的扇你的过程，这样问题就来了，第一次扇你鼓起来的包还没消肿，第二个巴掌就来了，你脸上的包就可能鼓起来两倍高，老板不断扇你，脉冲不断作用在你脸上，效果不断叠加了，这样这些效果就可以求和了，结果就是你脸上的包的高度随时间变化的一个函数了（注意理解）；如果老板再狠一点，频率越来越高，以至于你都辨别不清时间间隔了，那么，求和就变成积分了。可以这样理解，在这个过程中的某一固定的时刻，你的脸上的包的鼓起程度和什么有关呢？和之前每次打你都有关！但是各次的贡献是不一样的，越早打的巴掌，贡献越小，所以这就是说，某一时刻的输出是之前很多次输入乘以各自的衰减系数之后的叠加而形成某一点的输出，然后再把不同时刻的输出点放在一起，形成一个函数，这就是卷积，卷积之后的函数就是你脸上的包的大小随时间变化的函数。本来你的包几分钟就可以消肿，可是如果连续打，几个小时也消不了肿了，这难道不是一种平滑过程么？反映到剑桥大学的公式上，f(a)就是第a个巴掌，g(x-a)就是第a个巴掌在x时刻的作用程度，乘起来再叠加就ok了，大家说是不是这个道理呢？我想这个例子已经非常形象了，你对卷积有了更加具体深刻的了解了吗？\n\n转自GSDzone论坛\n\n![](http://2.im.guokr.com/V5QXaMJ7D6dpiGXPGmBsKoRQe9QYz0KIMf1yyJp_D7_PAAAAnAAAAEdJ.gif)","source":"_posts/intro-of-fft.md","raw":"title: （转）关于卷积的一个血腥的讲解，看完给跪了\ncategories:\n  - ACM\ndate: 2014-11-05 20:40:10\ntags: [数论,只言片语]\n---\n\n比如说你的老板命令你干活，你却到楼下打台球去了，后来被老板发现，他非常气愤，扇了你一巴掌（注意，这就是输入信号，脉冲），于是你的脸上会渐渐地（贱贱地）鼓起来一个包，你的脸就是一个系统，而鼓起来的包就是你的脸对巴掌的响应，好，这样就和信号系统建立起来意义对应的联系。下面还需要一些假设来保证论证的严谨：假定你的脸是线性时不变系统，也就是说，无论什么时候老板打你一巴掌，打在你脸的同一位置（这似乎要求你的脸足够光滑，如果你说你长了很多青春痘，甚至整个脸皮处处连续处处不可导，那难度太大了，我就无话可说了哈哈），你的脸上总是会在相同的时间间隔内鼓起来一个相同高度的包来，并且假定以鼓起来的包的大小作为系统输出。好了，那么，下面可以进入核心内容——卷积了！\n<!--more-->\n如果你每天都到地下去打台球，那么老板每天都要扇你一巴掌，不过当老板打你一巴掌后，你5分钟就消肿了，所以时间长了，你甚至就适应这种生活了……如果有一天，老板忍无可忍，以0.5秒的间隔开始不间断的扇你的过程，这样问题就来了，第一次扇你鼓起来的包还没消肿，第二个巴掌就来了，你脸上的包就可能鼓起来两倍高，老板不断扇你，脉冲不断作用在你脸上，效果不断叠加了，这样这些效果就可以求和了，结果就是你脸上的包的高度随时间变化的一个函数了（注意理解）；如果老板再狠一点，频率越来越高，以至于你都辨别不清时间间隔了，那么，求和就变成积分了。可以这样理解，在这个过程中的某一固定的时刻，你的脸上的包的鼓起程度和什么有关呢？和之前每次打你都有关！但是各次的贡献是不一样的，越早打的巴掌，贡献越小，所以这就是说，某一时刻的输出是之前很多次输入乘以各自的衰减系数之后的叠加而形成某一点的输出，然后再把不同时刻的输出点放在一起，形成一个函数，这就是卷积，卷积之后的函数就是你脸上的包的大小随时间变化的函数。本来你的包几分钟就可以消肿，可是如果连续打，几个小时也消不了肿了，这难道不是一种平滑过程么？反映到剑桥大学的公式上，f(a)就是第a个巴掌，g(x-a)就是第a个巴掌在x时刻的作用程度，乘起来再叠加就ok了，大家说是不是这个道理呢？我想这个例子已经非常形象了，你对卷积有了更加具体深刻的了解了吗？\n\n转自GSDzone论坛\n\n![](http://2.im.guokr.com/V5QXaMJ7D6dpiGXPGmBsKoRQe9QYz0KIMf1yyJp_D7_PAAAAnAAAAEdJ.gif)","slug":"intro-of-fft","published":1,"updated":"2019-10-11T05:50:15.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1uam0qv000ls8qq2pzj1xhj","content":"<p>比如说你的老板命令你干活，你却到楼下打台球去了，后来被老板发现，他非常气愤，扇了你一巴掌（注意，这就是输入信号，脉冲），于是你的脸上会渐渐地（贱贱地）鼓起来一个包，你的脸就是一个系统，而鼓起来的包就是你的脸对巴掌的响应，好，这样就和信号系统建立起来意义对应的联系。下面还需要一些假设来保证论证的严谨：假定你的脸是线性时不变系统，也就是说，无论什么时候老板打你一巴掌，打在你脸的同一位置（这似乎要求你的脸足够光滑，如果你说你长了很多青春痘，甚至整个脸皮处处连续处处不可导，那难度太大了，我就无话可说了哈哈），你的脸上总是会在相同的时间间隔内鼓起来一个相同高度的包来，并且假定以鼓起来的包的大小作为系统输出。好了，那么，下面可以进入核心内容——卷积了！<br><a id=\"more\"></a><br>如果你每天都到地下去打台球，那么老板每天都要扇你一巴掌，不过当老板打你一巴掌后，你5分钟就消肿了，所以时间长了，你甚至就适应这种生活了……如果有一天，老板忍无可忍，以0.5秒的间隔开始不间断的扇你的过程，这样问题就来了，第一次扇你鼓起来的包还没消肿，第二个巴掌就来了，你脸上的包就可能鼓起来两倍高，老板不断扇你，脉冲不断作用在你脸上，效果不断叠加了，这样这些效果就可以求和了，结果就是你脸上的包的高度随时间变化的一个函数了（注意理解）；如果老板再狠一点，频率越来越高，以至于你都辨别不清时间间隔了，那么，求和就变成积分了。可以这样理解，在这个过程中的某一固定的时刻，你的脸上的包的鼓起程度和什么有关呢？和之前每次打你都有关！但是各次的贡献是不一样的，越早打的巴掌，贡献越小，所以这就是说，某一时刻的输出是之前很多次输入乘以各自的衰减系数之后的叠加而形成某一点的输出，然后再把不同时刻的输出点放在一起，形成一个函数，这就是卷积，卷积之后的函数就是你脸上的包的大小随时间变化的函数。本来你的包几分钟就可以消肿，可是如果连续打，几个小时也消不了肿了，这难道不是一种平滑过程么？反映到剑桥大学的公式上，f(a)就是第a个巴掌，g(x-a)就是第a个巴掌在x时刻的作用程度，乘起来再叠加就ok了，大家说是不是这个道理呢？我想这个例子已经非常形象了，你对卷积有了更加具体深刻的了解了吗？</p>\n<p>转自GSDzone论坛</p>\n<p><img src=\"http://2.im.guokr.com/V5QXaMJ7D6dpiGXPGmBsKoRQe9QYz0KIMf1yyJp_D7_PAAAAnAAAAEdJ.gif\" alt></p>\n","site":{"data":{}},"excerpt":"<p>比如说你的老板命令你干活，你却到楼下打台球去了，后来被老板发现，他非常气愤，扇了你一巴掌（注意，这就是输入信号，脉冲），于是你的脸上会渐渐地（贱贱地）鼓起来一个包，你的脸就是一个系统，而鼓起来的包就是你的脸对巴掌的响应，好，这样就和信号系统建立起来意义对应的联系。下面还需要一些假设来保证论证的严谨：假定你的脸是线性时不变系统，也就是说，无论什么时候老板打你一巴掌，打在你脸的同一位置（这似乎要求你的脸足够光滑，如果你说你长了很多青春痘，甚至整个脸皮处处连续处处不可导，那难度太大了，我就无话可说了哈哈），你的脸上总是会在相同的时间间隔内鼓起来一个相同高度的包来，并且假定以鼓起来的包的大小作为系统输出。好了，那么，下面可以进入核心内容——卷积了！<br>","more":"<br>如果你每天都到地下去打台球，那么老板每天都要扇你一巴掌，不过当老板打你一巴掌后，你5分钟就消肿了，所以时间长了，你甚至就适应这种生活了……如果有一天，老板忍无可忍，以0.5秒的间隔开始不间断的扇你的过程，这样问题就来了，第一次扇你鼓起来的包还没消肿，第二个巴掌就来了，你脸上的包就可能鼓起来两倍高，老板不断扇你，脉冲不断作用在你脸上，效果不断叠加了，这样这些效果就可以求和了，结果就是你脸上的包的高度随时间变化的一个函数了（注意理解）；如果老板再狠一点，频率越来越高，以至于你都辨别不清时间间隔了，那么，求和就变成积分了。可以这样理解，在这个过程中的某一固定的时刻，你的脸上的包的鼓起程度和什么有关呢？和之前每次打你都有关！但是各次的贡献是不一样的，越早打的巴掌，贡献越小，所以这就是说，某一时刻的输出是之前很多次输入乘以各自的衰减系数之后的叠加而形成某一点的输出，然后再把不同时刻的输出点放在一起，形成一个函数，这就是卷积，卷积之后的函数就是你脸上的包的大小随时间变化的函数。本来你的包几分钟就可以消肿，可是如果连续打，几个小时也消不了肿了，这难道不是一种平滑过程么？反映到剑桥大学的公式上，f(a)就是第a个巴掌，g(x-a)就是第a个巴掌在x时刻的作用程度，乘起来再叠加就ok了，大家说是不是这个道理呢？我想这个例子已经非常形象了，你对卷积有了更加具体深刻的了解了吗？</p>\n<p>转自GSDzone论坛</p>\n<p><img src=\"http://2.im.guokr.com/V5QXaMJ7D6dpiGXPGmBsKoRQe9QYz0KIMf1yyJp_D7_PAAAAnAAAAEdJ.gif\" alt></p>"},{"title":"KDE的Mac向折腾指南","date":"2014-12-07T04:45:53.000Z","_content":"\n\n\n惯例，先上图：\n\n[![logo9](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo9-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo9.png)\n<!--more-->\n[![logo5](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo5-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo5.png) [![logo6](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo6-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo6.png) [![logo7](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo7-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo7.png) [![logo8](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo8-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo8.png)\n\n首先，KDE的全局菜单可以参考我以前的文章《[KDE4的配置参考](http://kevinsfork.info/2014/10/31/kde4-e7-9a-84-e9-85-8d-e7-bd-ae-e5-8f-82-e8-80-83/)》。\n\n然后，Plasma的主题是AG-plasma，aurorae主题是Yoxydaze-light。这些可以去kde-look里找。\n\n底部的dock是plank，主题是ArHU，在deviantART中找到的。另外，plank上的图标是受gtk主题控制的，所以装numix-circle是最好不过的。\n\n我的apps文件可以在这里下载：[click here](http://pan.baidu.com/s/1hqGJDmk)\n\n~/.config/plank/dock1/settings文件：\n```language\n#This file auto-generated by Plank.\n#2014-12-06T09:47:52+0000\n\n[PlankDockPreferences]\n#Whether to show only windows of the current workspace.\nCurrentWorkspaceOnly=false\n#The size of dock icons (in pixels).\nIconSize=42\n#If 0, the dock won't hide. If 1, the dock intelligently hides. If 2, the dock auto-hides. If 3, the dock dodges active maximized windows.\nHideMode=0\n#Time (in ms) to wait before unhiding the dock.\nUnhideDelay=0\n#The monitor number for the dock. Use -1 to keep on the primary monitor.\nMonitor=-1\n#List of *.dockitem files on this dock. DO NOT MODIFY\nDockItems=plank.dockitem;;google-chrome.dockitem;;dolphin.dockitem;;juk.dockitem;;eclipse.dockitem;;chrome-pjkebmlmkppdjcdcilfcjdkifljollfd-Default.dockitem;;kate.dockitem;;gwenview.dockitem;;wps-office-wps.dockitem;;konsole.dockitem;;sublime_text_3.dockitem;;love-wallpaper.dockitem;;ksysguard.dockitem;;virtualbox.dockitem\n#The position for the dock on the monitor. If 0, left. If 1, right. If 2, top. If 3, bottom.\nPosition=3\n#The dock's position offset from center (in percent).\nOffset=0\n#The name of the dock's theme to use.\nTheme=ArHU\n#The alignment for the dock on the monitor's edge. If 0, panel-mode. If 1, left-aligned. If 2, right-aligned. If 3, centered.\nAlignment=3\n#The alignment of the items in this dock if panel-mode is used. If 1, left-aligned. If 2, right-aligned. If 3, centered.\nItemsAlignment=3\n#Whether to prevent drag'n'drop actions and lock items on the dock.\nLockItems=false\n#Whether to use pressure-based revealing of the dock if the support is available.\nPressureReveal=false\n#Whether to show only pinned applications. Useful for running more then one dock.\nPinnedOnly=true\n#Whether to automatically pin an application if it seems useful to do.\nAutoPinning=true\n```\n\n~/.local/share/plank/themes/ArHU/中的dock.theme和hover.theme文件分别是：\n\n```language\n\n#This file auto-generated by Plank.\n#2014-12-06T06:22:37+0000\n\n[PlankDrawingTheme]\n#The roundness of the top corners.\nTopRoundness=6\n#The roundness of the bottom corners.\nBottomRoundness=0\n#The thickness (in pixels) of lines drawn.\nLineWidth=0\n#The color (RGBA) of the outer stroke.\nOuterStrokeColor=0;;0;;0;;0\n#The starting color (RGBA) of the fill gradient.\nFillStartColor=255;;255;;255;;150\n#The ending color (RGBA) of the fill gradient.\nFillEndColor=255;;255;;255;;150\n#The color (RGBA) of the inner stroke.\nInnerStrokeColor=255;;255;;255;;255\n\n[PlankDrawingDockTheme]\n#The padding on the left/right dock edges, in tenths of a percent of IconSize.\nHorizPadding=0\n#The padding on the top dock edge, in tenths of a percent of IconSize.\nTopPadding=1\n#The padding on the bottom dock edge, in tenths of a percent of IconSize.\nBottomPadding=1\n#The padding between items on the dock, in tenths of a percent of IconSize.\nItemPadding=4\n#The size of item indicators, in tenths of a percent of IconSize.\nIndicatorSize=0\n#The size of the icon-shadow behind every item, in tenths of a percent of IconSize.\nIconShadowSize=0\n#The height (in percent of IconSize) to bounce an icon when the application sets urgent.\nUrgentBounceHeight=0.10000000000000001\n#The height (in percent of IconSize) to bounce an icon when launching an application.\nLaunchBounceHeight=0.10000000000000001\n#The opacity value (0 to 1) to fade the dock to when hiding it.\nFadeOpacity=0\n#The amount of time (in ms) for click animations.\nClickTime=150\n#The amount of time (in ms) to bounce an urgent icon.\nUrgentBounceTime=300\n#The amount of time (in ms) to bounce an icon when launching an application.\nLaunchBounceTime=300\n#The amount of time (in ms) for active window indicator animations.\nActiveTime=150\n#The amount of time (in ms) to slide icons into/out of the dock.\nSlideTime=150\n#The time (in ms) to fade the dock in/out on a hide (if FadeOpacity is &lt; 1).\nFadeTime=100\n#The time (in ms) to slide the dock in/out on a hide (if FadeOpacity is 1).\nHideTime=100\n#The size of the urgent glow (shown when dock is hidden), in tenths of a percent of IconSize.\nGlowSize=30\n#The total time (in ms) to show the hidden-dock urgent glow.\nGlowTime=10000\n#The time (in ms) of each pulse of the hidden-dock urgent glow.\nGlowPulseTime=2000\n#The hue-shift (-180 to 180) of the urgent indicator color.\nUrgentHueShift=150\n#The time (in ms) to move an item to its new position.\nItemMoveTime=150\n```\n```language\n#This theme written by Perian. thexperian.deviantart.com\n\n[PlankDrawingTheme]\nTopRoundness=3\nLineWidth=0\nOuterStrokeColor=0;;0;;0;;0\nFillStartColor=0;;0;;0;;150\nFillEndColor=0;;0;;0;;150\nInnerStrokeColor=0;;0;;0;;0\n\n```\n\n以上是我折腾的结果，找主题也找了半天。大家如果有更好的主题与壁纸也拿来分享一下吧。\n\n","source":"_posts/kde-to-mac.md","raw":"---\ntitle: KDE的Mac向折腾指南\ncategories:\n- Linux\ndate: 2014-12-07 12:45:53\ntags: [DE/WM]\n---\n\n\n\n惯例，先上图：\n\n[![logo9](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo9-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo9.png)\n<!--more-->\n[![logo5](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo5-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo5.png) [![logo6](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo6-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo6.png) [![logo7](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo7-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo7.png) [![logo8](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo8-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo8.png)\n\n首先，KDE的全局菜单可以参考我以前的文章《[KDE4的配置参考](http://kevinsfork.info/2014/10/31/kde4-e7-9a-84-e9-85-8d-e7-bd-ae-e5-8f-82-e8-80-83/)》。\n\n然后，Plasma的主题是AG-plasma，aurorae主题是Yoxydaze-light。这些可以去kde-look里找。\n\n底部的dock是plank，主题是ArHU，在deviantART中找到的。另外，plank上的图标是受gtk主题控制的，所以装numix-circle是最好不过的。\n\n我的apps文件可以在这里下载：[click here](http://pan.baidu.com/s/1hqGJDmk)\n\n~/.config/plank/dock1/settings文件：\n```language\n#This file auto-generated by Plank.\n#2014-12-06T09:47:52+0000\n\n[PlankDockPreferences]\n#Whether to show only windows of the current workspace.\nCurrentWorkspaceOnly=false\n#The size of dock icons (in pixels).\nIconSize=42\n#If 0, the dock won't hide. If 1, the dock intelligently hides. If 2, the dock auto-hides. If 3, the dock dodges active maximized windows.\nHideMode=0\n#Time (in ms) to wait before unhiding the dock.\nUnhideDelay=0\n#The monitor number for the dock. Use -1 to keep on the primary monitor.\nMonitor=-1\n#List of *.dockitem files on this dock. DO NOT MODIFY\nDockItems=plank.dockitem;;google-chrome.dockitem;;dolphin.dockitem;;juk.dockitem;;eclipse.dockitem;;chrome-pjkebmlmkppdjcdcilfcjdkifljollfd-Default.dockitem;;kate.dockitem;;gwenview.dockitem;;wps-office-wps.dockitem;;konsole.dockitem;;sublime_text_3.dockitem;;love-wallpaper.dockitem;;ksysguard.dockitem;;virtualbox.dockitem\n#The position for the dock on the monitor. If 0, left. If 1, right. If 2, top. If 3, bottom.\nPosition=3\n#The dock's position offset from center (in percent).\nOffset=0\n#The name of the dock's theme to use.\nTheme=ArHU\n#The alignment for the dock on the monitor's edge. If 0, panel-mode. If 1, left-aligned. If 2, right-aligned. If 3, centered.\nAlignment=3\n#The alignment of the items in this dock if panel-mode is used. If 1, left-aligned. If 2, right-aligned. If 3, centered.\nItemsAlignment=3\n#Whether to prevent drag'n'drop actions and lock items on the dock.\nLockItems=false\n#Whether to use pressure-based revealing of the dock if the support is available.\nPressureReveal=false\n#Whether to show only pinned applications. Useful for running more then one dock.\nPinnedOnly=true\n#Whether to automatically pin an application if it seems useful to do.\nAutoPinning=true\n```\n\n~/.local/share/plank/themes/ArHU/中的dock.theme和hover.theme文件分别是：\n\n```language\n\n#This file auto-generated by Plank.\n#2014-12-06T06:22:37+0000\n\n[PlankDrawingTheme]\n#The roundness of the top corners.\nTopRoundness=6\n#The roundness of the bottom corners.\nBottomRoundness=0\n#The thickness (in pixels) of lines drawn.\nLineWidth=0\n#The color (RGBA) of the outer stroke.\nOuterStrokeColor=0;;0;;0;;0\n#The starting color (RGBA) of the fill gradient.\nFillStartColor=255;;255;;255;;150\n#The ending color (RGBA) of the fill gradient.\nFillEndColor=255;;255;;255;;150\n#The color (RGBA) of the inner stroke.\nInnerStrokeColor=255;;255;;255;;255\n\n[PlankDrawingDockTheme]\n#The padding on the left/right dock edges, in tenths of a percent of IconSize.\nHorizPadding=0\n#The padding on the top dock edge, in tenths of a percent of IconSize.\nTopPadding=1\n#The padding on the bottom dock edge, in tenths of a percent of IconSize.\nBottomPadding=1\n#The padding between items on the dock, in tenths of a percent of IconSize.\nItemPadding=4\n#The size of item indicators, in tenths of a percent of IconSize.\nIndicatorSize=0\n#The size of the icon-shadow behind every item, in tenths of a percent of IconSize.\nIconShadowSize=0\n#The height (in percent of IconSize) to bounce an icon when the application sets urgent.\nUrgentBounceHeight=0.10000000000000001\n#The height (in percent of IconSize) to bounce an icon when launching an application.\nLaunchBounceHeight=0.10000000000000001\n#The opacity value (0 to 1) to fade the dock to when hiding it.\nFadeOpacity=0\n#The amount of time (in ms) for click animations.\nClickTime=150\n#The amount of time (in ms) to bounce an urgent icon.\nUrgentBounceTime=300\n#The amount of time (in ms) to bounce an icon when launching an application.\nLaunchBounceTime=300\n#The amount of time (in ms) for active window indicator animations.\nActiveTime=150\n#The amount of time (in ms) to slide icons into/out of the dock.\nSlideTime=150\n#The time (in ms) to fade the dock in/out on a hide (if FadeOpacity is &lt; 1).\nFadeTime=100\n#The time (in ms) to slide the dock in/out on a hide (if FadeOpacity is 1).\nHideTime=100\n#The size of the urgent glow (shown when dock is hidden), in tenths of a percent of IconSize.\nGlowSize=30\n#The total time (in ms) to show the hidden-dock urgent glow.\nGlowTime=10000\n#The time (in ms) of each pulse of the hidden-dock urgent glow.\nGlowPulseTime=2000\n#The hue-shift (-180 to 180) of the urgent indicator color.\nUrgentHueShift=150\n#The time (in ms) to move an item to its new position.\nItemMoveTime=150\n```\n```language\n#This theme written by Perian. thexperian.deviantart.com\n\n[PlankDrawingTheme]\nTopRoundness=3\nLineWidth=0\nOuterStrokeColor=0;;0;;0;;0\nFillStartColor=0;;0;;0;;150\nFillEndColor=0;;0;;0;;150\nInnerStrokeColor=0;;0;;0;;0\n\n```\n\n以上是我折腾的结果，找主题也找了半天。大家如果有更好的主题与壁纸也拿来分享一下吧。\n\n","slug":"kde-to-mac","published":1,"updated":"2019-10-11T05:50:15.681Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1uam0r2000os8qq5ydbprkg","content":"<p>惯例，先上图：</p>\n<p><a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo9.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo9-1024x575.png\" alt=\"logo9\"></a><br><a id=\"more\"></a><br><a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo5.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo5-1024x575.png\" alt=\"logo5\"></a> <a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo6.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo6-1024x575.png\" alt=\"logo6\"></a> <a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo7.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo7-1024x575.png\" alt=\"logo7\"></a> <a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo8.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo8-1024x575.png\" alt=\"logo8\"></a></p>\n<p>首先，KDE的全局菜单可以参考我以前的文章《<a href=\"http://kevinsfork.info/2014/10/31/kde4-e7-9a-84-e9-85-8d-e7-bd-ae-e5-8f-82-e8-80-83/\" target=\"_blank\" rel=\"noopener\">KDE4的配置参考</a>》。</p>\n<p>然后，Plasma的主题是AG-plasma，aurorae主题是Yoxydaze-light。这些可以去kde-look里找。</p>\n<p>底部的dock是plank，主题是ArHU，在deviantART中找到的。另外，plank上的图标是受gtk主题控制的，所以装numix-circle是最好不过的。</p>\n<p>我的apps文件可以在这里下载：<a href=\"http://pan.baidu.com/s/1hqGJDmk\" target=\"_blank\" rel=\"noopener\">click here</a></p>\n<p>~/.config/plank/dock1/settings文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#This file auto-generated by Plank.</span><br><span class=\"line\">#2014-12-06T09:47:52+0000</span><br><span class=\"line\"></span><br><span class=\"line\">[PlankDockPreferences]</span><br><span class=\"line\">#Whether to show only windows of the current workspace.</span><br><span class=\"line\">CurrentWorkspaceOnly=false</span><br><span class=\"line\">#The size of dock icons (in pixels).</span><br><span class=\"line\">IconSize=42</span><br><span class=\"line\">#If 0, the dock won&apos;t hide. If 1, the dock intelligently hides. If 2, the dock auto-hides. If 3, the dock dodges active maximized windows.</span><br><span class=\"line\">HideMode=0</span><br><span class=\"line\">#Time (in ms) to wait before unhiding the dock.</span><br><span class=\"line\">UnhideDelay=0</span><br><span class=\"line\">#The monitor number for the dock. Use -1 to keep on the primary monitor.</span><br><span class=\"line\">Monitor=-1</span><br><span class=\"line\">#List of *.dockitem files on this dock. DO NOT MODIFY</span><br><span class=\"line\">DockItems=plank.dockitem;;google-chrome.dockitem;;dolphin.dockitem;;juk.dockitem;;eclipse.dockitem;;chrome-pjkebmlmkppdjcdcilfcjdkifljollfd-Default.dockitem;;kate.dockitem;;gwenview.dockitem;;wps-office-wps.dockitem;;konsole.dockitem;;sublime_text_3.dockitem;;love-wallpaper.dockitem;;ksysguard.dockitem;;virtualbox.dockitem</span><br><span class=\"line\">#The position for the dock on the monitor. If 0, left. If 1, right. If 2, top. If 3, bottom.</span><br><span class=\"line\">Position=3</span><br><span class=\"line\">#The dock&apos;s position offset from center (in percent).</span><br><span class=\"line\">Offset=0</span><br><span class=\"line\">#The name of the dock&apos;s theme to use.</span><br><span class=\"line\">Theme=ArHU</span><br><span class=\"line\">#The alignment for the dock on the monitor&apos;s edge. If 0, panel-mode. If 1, left-aligned. If 2, right-aligned. If 3, centered.</span><br><span class=\"line\">Alignment=3</span><br><span class=\"line\">#The alignment of the items in this dock if panel-mode is used. If 1, left-aligned. If 2, right-aligned. If 3, centered.</span><br><span class=\"line\">ItemsAlignment=3</span><br><span class=\"line\">#Whether to prevent drag&apos;n&apos;drop actions and lock items on the dock.</span><br><span class=\"line\">LockItems=false</span><br><span class=\"line\">#Whether to use pressure-based revealing of the dock if the support is available.</span><br><span class=\"line\">PressureReveal=false</span><br><span class=\"line\">#Whether to show only pinned applications. Useful for running more then one dock.</span><br><span class=\"line\">PinnedOnly=true</span><br><span class=\"line\">#Whether to automatically pin an application if it seems useful to do.</span><br><span class=\"line\">AutoPinning=true</span><br></pre></td></tr></table></figure></p>\n<p>~/.local/share/plank/themes/ArHU/中的dock.theme和hover.theme文件分别是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#This file auto-generated by Plank.</span><br><span class=\"line\">#2014-12-06T06:22:37+0000</span><br><span class=\"line\"></span><br><span class=\"line\">[PlankDrawingTheme]</span><br><span class=\"line\">#The roundness of the top corners.</span><br><span class=\"line\">TopRoundness=6</span><br><span class=\"line\">#The roundness of the bottom corners.</span><br><span class=\"line\">BottomRoundness=0</span><br><span class=\"line\">#The thickness (in pixels) of lines drawn.</span><br><span class=\"line\">LineWidth=0</span><br><span class=\"line\">#The color (RGBA) of the outer stroke.</span><br><span class=\"line\">OuterStrokeColor=0;;0;;0;;0</span><br><span class=\"line\">#The starting color (RGBA) of the fill gradient.</span><br><span class=\"line\">FillStartColor=255;;255;;255;;150</span><br><span class=\"line\">#The ending color (RGBA) of the fill gradient.</span><br><span class=\"line\">FillEndColor=255;;255;;255;;150</span><br><span class=\"line\">#The color (RGBA) of the inner stroke.</span><br><span class=\"line\">InnerStrokeColor=255;;255;;255;;255</span><br><span class=\"line\"></span><br><span class=\"line\">[PlankDrawingDockTheme]</span><br><span class=\"line\">#The padding on the left/right dock edges, in tenths of a percent of IconSize.</span><br><span class=\"line\">HorizPadding=0</span><br><span class=\"line\">#The padding on the top dock edge, in tenths of a percent of IconSize.</span><br><span class=\"line\">TopPadding=1</span><br><span class=\"line\">#The padding on the bottom dock edge, in tenths of a percent of IconSize.</span><br><span class=\"line\">BottomPadding=1</span><br><span class=\"line\">#The padding between items on the dock, in tenths of a percent of IconSize.</span><br><span class=\"line\">ItemPadding=4</span><br><span class=\"line\">#The size of item indicators, in tenths of a percent of IconSize.</span><br><span class=\"line\">IndicatorSize=0</span><br><span class=\"line\">#The size of the icon-shadow behind every item, in tenths of a percent of IconSize.</span><br><span class=\"line\">IconShadowSize=0</span><br><span class=\"line\">#The height (in percent of IconSize) to bounce an icon when the application sets urgent.</span><br><span class=\"line\">UrgentBounceHeight=0.10000000000000001</span><br><span class=\"line\">#The height (in percent of IconSize) to bounce an icon when launching an application.</span><br><span class=\"line\">LaunchBounceHeight=0.10000000000000001</span><br><span class=\"line\">#The opacity value (0 to 1) to fade the dock to when hiding it.</span><br><span class=\"line\">FadeOpacity=0</span><br><span class=\"line\">#The amount of time (in ms) for click animations.</span><br><span class=\"line\">ClickTime=150</span><br><span class=\"line\">#The amount of time (in ms) to bounce an urgent icon.</span><br><span class=\"line\">UrgentBounceTime=300</span><br><span class=\"line\">#The amount of time (in ms) to bounce an icon when launching an application.</span><br><span class=\"line\">LaunchBounceTime=300</span><br><span class=\"line\">#The amount of time (in ms) for active window indicator animations.</span><br><span class=\"line\">ActiveTime=150</span><br><span class=\"line\">#The amount of time (in ms) to slide icons into/out of the dock.</span><br><span class=\"line\">SlideTime=150</span><br><span class=\"line\">#The time (in ms) to fade the dock in/out on a hide (if FadeOpacity is &amp;lt; 1).</span><br><span class=\"line\">FadeTime=100</span><br><span class=\"line\">#The time (in ms) to slide the dock in/out on a hide (if FadeOpacity is 1).</span><br><span class=\"line\">HideTime=100</span><br><span class=\"line\">#The size of the urgent glow (shown when dock is hidden), in tenths of a percent of IconSize.</span><br><span class=\"line\">GlowSize=30</span><br><span class=\"line\">#The total time (in ms) to show the hidden-dock urgent glow.</span><br><span class=\"line\">GlowTime=10000</span><br><span class=\"line\">#The time (in ms) of each pulse of the hidden-dock urgent glow.</span><br><span class=\"line\">GlowPulseTime=2000</span><br><span class=\"line\">#The hue-shift (-180 to 180) of the urgent indicator color.</span><br><span class=\"line\">UrgentHueShift=150</span><br><span class=\"line\">#The time (in ms) to move an item to its new position.</span><br><span class=\"line\">ItemMoveTime=150</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#This theme written by Perian. thexperian.deviantart.com</span><br><span class=\"line\"></span><br><span class=\"line\">[PlankDrawingTheme]</span><br><span class=\"line\">TopRoundness=3</span><br><span class=\"line\">LineWidth=0</span><br><span class=\"line\">OuterStrokeColor=0;;0;;0;;0</span><br><span class=\"line\">FillStartColor=0;;0;;0;;150</span><br><span class=\"line\">FillEndColor=0;;0;;0;;150</span><br><span class=\"line\">InnerStrokeColor=0;;0;;0;;0</span><br></pre></td></tr></table></figure>\n<p>以上是我折腾的结果，找主题也找了半天。大家如果有更好的主题与壁纸也拿来分享一下吧。</p>\n","site":{"data":{}},"excerpt":"<p>惯例，先上图：</p>\n<p><a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo9.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo9-1024x575.png\" alt=\"logo9\"></a><br>","more":"<br><a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo5.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo5-1024x575.png\" alt=\"logo5\"></a> <a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo6.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo6-1024x575.png\" alt=\"logo6\"></a> <a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo7.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo7-1024x575.png\" alt=\"logo7\"></a> <a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo8.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/12/logo8-1024x575.png\" alt=\"logo8\"></a></p>\n<p>首先，KDE的全局菜单可以参考我以前的文章《<a href=\"http://kevinsfork.info/2014/10/31/kde4-e7-9a-84-e9-85-8d-e7-bd-ae-e5-8f-82-e8-80-83/\" target=\"_blank\" rel=\"noopener\">KDE4的配置参考</a>》。</p>\n<p>然后，Plasma的主题是AG-plasma，aurorae主题是Yoxydaze-light。这些可以去kde-look里找。</p>\n<p>底部的dock是plank，主题是ArHU，在deviantART中找到的。另外，plank上的图标是受gtk主题控制的，所以装numix-circle是最好不过的。</p>\n<p>我的apps文件可以在这里下载：<a href=\"http://pan.baidu.com/s/1hqGJDmk\" target=\"_blank\" rel=\"noopener\">click here</a></p>\n<p>~/.config/plank/dock1/settings文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#This file auto-generated by Plank.</span><br><span class=\"line\">#2014-12-06T09:47:52+0000</span><br><span class=\"line\"></span><br><span class=\"line\">[PlankDockPreferences]</span><br><span class=\"line\">#Whether to show only windows of the current workspace.</span><br><span class=\"line\">CurrentWorkspaceOnly=false</span><br><span class=\"line\">#The size of dock icons (in pixels).</span><br><span class=\"line\">IconSize=42</span><br><span class=\"line\">#If 0, the dock won&apos;t hide. If 1, the dock intelligently hides. If 2, the dock auto-hides. If 3, the dock dodges active maximized windows.</span><br><span class=\"line\">HideMode=0</span><br><span class=\"line\">#Time (in ms) to wait before unhiding the dock.</span><br><span class=\"line\">UnhideDelay=0</span><br><span class=\"line\">#The monitor number for the dock. Use -1 to keep on the primary monitor.</span><br><span class=\"line\">Monitor=-1</span><br><span class=\"line\">#List of *.dockitem files on this dock. DO NOT MODIFY</span><br><span class=\"line\">DockItems=plank.dockitem;;google-chrome.dockitem;;dolphin.dockitem;;juk.dockitem;;eclipse.dockitem;;chrome-pjkebmlmkppdjcdcilfcjdkifljollfd-Default.dockitem;;kate.dockitem;;gwenview.dockitem;;wps-office-wps.dockitem;;konsole.dockitem;;sublime_text_3.dockitem;;love-wallpaper.dockitem;;ksysguard.dockitem;;virtualbox.dockitem</span><br><span class=\"line\">#The position for the dock on the monitor. If 0, left. If 1, right. If 2, top. If 3, bottom.</span><br><span class=\"line\">Position=3</span><br><span class=\"line\">#The dock&apos;s position offset from center (in percent).</span><br><span class=\"line\">Offset=0</span><br><span class=\"line\">#The name of the dock&apos;s theme to use.</span><br><span class=\"line\">Theme=ArHU</span><br><span class=\"line\">#The alignment for the dock on the monitor&apos;s edge. If 0, panel-mode. If 1, left-aligned. If 2, right-aligned. If 3, centered.</span><br><span class=\"line\">Alignment=3</span><br><span class=\"line\">#The alignment of the items in this dock if panel-mode is used. If 1, left-aligned. If 2, right-aligned. If 3, centered.</span><br><span class=\"line\">ItemsAlignment=3</span><br><span class=\"line\">#Whether to prevent drag&apos;n&apos;drop actions and lock items on the dock.</span><br><span class=\"line\">LockItems=false</span><br><span class=\"line\">#Whether to use pressure-based revealing of the dock if the support is available.</span><br><span class=\"line\">PressureReveal=false</span><br><span class=\"line\">#Whether to show only pinned applications. Useful for running more then one dock.</span><br><span class=\"line\">PinnedOnly=true</span><br><span class=\"line\">#Whether to automatically pin an application if it seems useful to do.</span><br><span class=\"line\">AutoPinning=true</span><br></pre></td></tr></table></figure></p>\n<p>~/.local/share/plank/themes/ArHU/中的dock.theme和hover.theme文件分别是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#This file auto-generated by Plank.</span><br><span class=\"line\">#2014-12-06T06:22:37+0000</span><br><span class=\"line\"></span><br><span class=\"line\">[PlankDrawingTheme]</span><br><span class=\"line\">#The roundness of the top corners.</span><br><span class=\"line\">TopRoundness=6</span><br><span class=\"line\">#The roundness of the bottom corners.</span><br><span class=\"line\">BottomRoundness=0</span><br><span class=\"line\">#The thickness (in pixels) of lines drawn.</span><br><span class=\"line\">LineWidth=0</span><br><span class=\"line\">#The color (RGBA) of the outer stroke.</span><br><span class=\"line\">OuterStrokeColor=0;;0;;0;;0</span><br><span class=\"line\">#The starting color (RGBA) of the fill gradient.</span><br><span class=\"line\">FillStartColor=255;;255;;255;;150</span><br><span class=\"line\">#The ending color (RGBA) of the fill gradient.</span><br><span class=\"line\">FillEndColor=255;;255;;255;;150</span><br><span class=\"line\">#The color (RGBA) of the inner stroke.</span><br><span class=\"line\">InnerStrokeColor=255;;255;;255;;255</span><br><span class=\"line\"></span><br><span class=\"line\">[PlankDrawingDockTheme]</span><br><span class=\"line\">#The padding on the left/right dock edges, in tenths of a percent of IconSize.</span><br><span class=\"line\">HorizPadding=0</span><br><span class=\"line\">#The padding on the top dock edge, in tenths of a percent of IconSize.</span><br><span class=\"line\">TopPadding=1</span><br><span class=\"line\">#The padding on the bottom dock edge, in tenths of a percent of IconSize.</span><br><span class=\"line\">BottomPadding=1</span><br><span class=\"line\">#The padding between items on the dock, in tenths of a percent of IconSize.</span><br><span class=\"line\">ItemPadding=4</span><br><span class=\"line\">#The size of item indicators, in tenths of a percent of IconSize.</span><br><span class=\"line\">IndicatorSize=0</span><br><span class=\"line\">#The size of the icon-shadow behind every item, in tenths of a percent of IconSize.</span><br><span class=\"line\">IconShadowSize=0</span><br><span class=\"line\">#The height (in percent of IconSize) to bounce an icon when the application sets urgent.</span><br><span class=\"line\">UrgentBounceHeight=0.10000000000000001</span><br><span class=\"line\">#The height (in percent of IconSize) to bounce an icon when launching an application.</span><br><span class=\"line\">LaunchBounceHeight=0.10000000000000001</span><br><span class=\"line\">#The opacity value (0 to 1) to fade the dock to when hiding it.</span><br><span class=\"line\">FadeOpacity=0</span><br><span class=\"line\">#The amount of time (in ms) for click animations.</span><br><span class=\"line\">ClickTime=150</span><br><span class=\"line\">#The amount of time (in ms) to bounce an urgent icon.</span><br><span class=\"line\">UrgentBounceTime=300</span><br><span class=\"line\">#The amount of time (in ms) to bounce an icon when launching an application.</span><br><span class=\"line\">LaunchBounceTime=300</span><br><span class=\"line\">#The amount of time (in ms) for active window indicator animations.</span><br><span class=\"line\">ActiveTime=150</span><br><span class=\"line\">#The amount of time (in ms) to slide icons into/out of the dock.</span><br><span class=\"line\">SlideTime=150</span><br><span class=\"line\">#The time (in ms) to fade the dock in/out on a hide (if FadeOpacity is &amp;lt; 1).</span><br><span class=\"line\">FadeTime=100</span><br><span class=\"line\">#The time (in ms) to slide the dock in/out on a hide (if FadeOpacity is 1).</span><br><span class=\"line\">HideTime=100</span><br><span class=\"line\">#The size of the urgent glow (shown when dock is hidden), in tenths of a percent of IconSize.</span><br><span class=\"line\">GlowSize=30</span><br><span class=\"line\">#The total time (in ms) to show the hidden-dock urgent glow.</span><br><span class=\"line\">GlowTime=10000</span><br><span class=\"line\">#The time (in ms) of each pulse of the hidden-dock urgent glow.</span><br><span class=\"line\">GlowPulseTime=2000</span><br><span class=\"line\">#The hue-shift (-180 to 180) of the urgent indicator color.</span><br><span class=\"line\">UrgentHueShift=150</span><br><span class=\"line\">#The time (in ms) to move an item to its new position.</span><br><span class=\"line\">ItemMoveTime=150</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#This theme written by Perian. thexperian.deviantart.com</span><br><span class=\"line\"></span><br><span class=\"line\">[PlankDrawingTheme]</span><br><span class=\"line\">TopRoundness=3</span><br><span class=\"line\">LineWidth=0</span><br><span class=\"line\">OuterStrokeColor=0;;0;;0;;0</span><br><span class=\"line\">FillStartColor=0;;0;;0;;150</span><br><span class=\"line\">FillEndColor=0;;0;;0;;150</span><br><span class=\"line\">InnerStrokeColor=0;;0;;0;;0</span><br></pre></td></tr></table></figure>\n<p>以上是我折腾的结果，找主题也找了半天。大家如果有更好的主题与壁纸也拿来分享一下吧。</p>"},{"title":"KDE4的配置参考","date":"2014-10-31T12:35:05.000Z","_content":"\n西北工大回来后,时间又充裕了,所以又开始了折腾KDE。\n\n话说KDE的渲染阴影等效果非常接近MacBook。先放几张图：\n\n[![抓图14](http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图14-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图14.png)\n<!--more-->\n[![抓图15](http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图15-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图15.png) [![抓图18](http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图18-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图18.png)\n\n下面说一下，我的配置过程：\n\n1.  **发行版：**\n     我的发行版是Arch，没有Arch强大的AUR，很多桌面的配件很难装上。\n2.  **主题：**\n     我的plasma主题是Helium与dynamo主题混合而成。标题栏主题是Qtcurve，图标主题是dynamo与flattr混合而成，鼠标主题是Breeze。应用程序主题是Qtcurve，配色是Breeze。这些都可以到[这里下载](http://pan.baidu.com/s/1jGLy3n4)。先安装qtcurve再将下载下来的文件解压并覆盖～/.kde4/share/即可。注意，Qtcurve的配置方案是Breeze，并且在窗口管理器中设置边框大小是无侧边框。\n3.  **全局菜单：**\n     全局菜单可以先加archlinuxcn源，然后依次用yaourt安装appmenu-qt,appmenu-qt5,appmenu-gtk,kdeplasma-applets-menubar。完成之后在面板上添加刚安装的部件再打开“系统设置&gt;应用程序外观&gt;风格”然后选择微调标签，修改“菜单栏风格”为“仅导出”就能有全局菜单了。\n4.  **最大化隐藏菜单栏：**\n     最大化隐藏菜单栏可以直接在qtCurve中配置，依然在“窗口管理器”中，勾选“最大化窗口无边框”复选框即可。\n5.  **最大化上面板显示窗口控制按钮：**（最后一张图鼠标所指的地方）\n     在AUR中安装kdeplasma-applets-kwin-button-improved，然后在面板上重复三次添加这个部件，分别设置为最小化（iconify），最大化/回复（maximize/restore）和关闭（close）就行了。\n","source":"_posts/kde4-config.md","raw":"---\ntitle: KDE4的配置参考\ncategories:\n- Linux\ndate: 2014-10-31 20:35:05\ntags: [DE/WM]\n---\n\n西北工大回来后,时间又充裕了,所以又开始了折腾KDE。\n\n话说KDE的渲染阴影等效果非常接近MacBook。先放几张图：\n\n[![抓图14](http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图14-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图14.png)\n<!--more-->\n[![抓图15](http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图15-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图15.png) [![抓图18](http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图18-1024x575.png)](http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图18.png)\n\n下面说一下，我的配置过程：\n\n1.  **发行版：**\n     我的发行版是Arch，没有Arch强大的AUR，很多桌面的配件很难装上。\n2.  **主题：**\n     我的plasma主题是Helium与dynamo主题混合而成。标题栏主题是Qtcurve，图标主题是dynamo与flattr混合而成，鼠标主题是Breeze。应用程序主题是Qtcurve，配色是Breeze。这些都可以到[这里下载](http://pan.baidu.com/s/1jGLy3n4)。先安装qtcurve再将下载下来的文件解压并覆盖～/.kde4/share/即可。注意，Qtcurve的配置方案是Breeze，并且在窗口管理器中设置边框大小是无侧边框。\n3.  **全局菜单：**\n     全局菜单可以先加archlinuxcn源，然后依次用yaourt安装appmenu-qt,appmenu-qt5,appmenu-gtk,kdeplasma-applets-menubar。完成之后在面板上添加刚安装的部件再打开“系统设置&gt;应用程序外观&gt;风格”然后选择微调标签，修改“菜单栏风格”为“仅导出”就能有全局菜单了。\n4.  **最大化隐藏菜单栏：**\n     最大化隐藏菜单栏可以直接在qtCurve中配置，依然在“窗口管理器”中，勾选“最大化窗口无边框”复选框即可。\n5.  **最大化上面板显示窗口控制按钮：**（最后一张图鼠标所指的地方）\n     在AUR中安装kdeplasma-applets-kwin-button-improved，然后在面板上重复三次添加这个部件，分别设置为最小化（iconify），最大化/回复（maximize/restore）和关闭（close）就行了。\n","slug":"kde4-config","published":1,"updated":"2019-10-11T05:50:15.682Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1uam0r9000ts8qquq8cdz52","content":"<p>西北工大回来后,时间又充裕了,所以又开始了折腾KDE。</p>\n<p>话说KDE的渲染阴影等效果非常接近MacBook。先放几张图：</p>\n<p><a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图14.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图14-1024x575.png\" alt=\"抓图14\"></a><br><a id=\"more\"></a><br><a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图15.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图15-1024x575.png\" alt=\"抓图15\"></a> <a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图18.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图18-1024x575.png\" alt=\"抓图18\"></a></p>\n<p>下面说一下，我的配置过程：</p>\n<ol>\n<li><strong>发行版：</strong><br> 我的发行版是Arch，没有Arch强大的AUR，很多桌面的配件很难装上。</li>\n<li><strong>主题：</strong><br> 我的plasma主题是Helium与dynamo主题混合而成。标题栏主题是Qtcurve，图标主题是dynamo与flattr混合而成，鼠标主题是Breeze。应用程序主题是Qtcurve，配色是Breeze。这些都可以到<a href=\"http://pan.baidu.com/s/1jGLy3n4\" target=\"_blank\" rel=\"noopener\">这里下载</a>。先安装qtcurve再将下载下来的文件解压并覆盖～/.kde4/share/即可。注意，Qtcurve的配置方案是Breeze，并且在窗口管理器中设置边框大小是无侧边框。</li>\n<li><strong>全局菜单：</strong><br> 全局菜单可以先加archlinuxcn源，然后依次用yaourt安装appmenu-qt,appmenu-qt5,appmenu-gtk,kdeplasma-applets-menubar。完成之后在面板上添加刚安装的部件再打开“系统设置&gt;应用程序外观&gt;风格”然后选择微调标签，修改“菜单栏风格”为“仅导出”就能有全局菜单了。</li>\n<li><strong>最大化隐藏菜单栏：</strong><br> 最大化隐藏菜单栏可以直接在qtCurve中配置，依然在“窗口管理器”中，勾选“最大化窗口无边框”复选框即可。</li>\n<li><strong>最大化上面板显示窗口控制按钮：</strong>（最后一张图鼠标所指的地方）<br> 在AUR中安装kdeplasma-applets-kwin-button-improved，然后在面板上重复三次添加这个部件，分别设置为最小化（iconify），最大化/回复（maximize/restore）和关闭（close）就行了。</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>西北工大回来后,时间又充裕了,所以又开始了折腾KDE。</p>\n<p>话说KDE的渲染阴影等效果非常接近MacBook。先放几张图：</p>\n<p><a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图14.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图14-1024x575.png\" alt=\"抓图14\"></a><br>","more":"<br><a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图15.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图15-1024x575.png\" alt=\"抓图15\"></a> <a href=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图18.png\" target=\"_blank\" rel=\"noopener\"><img src=\"http://sforkw-wp.qiniudn.com/jae/uploads/2014/10/抓图18-1024x575.png\" alt=\"抓图18\"></a></p>\n<p>下面说一下，我的配置过程：</p>\n<ol>\n<li><strong>发行版：</strong><br> 我的发行版是Arch，没有Arch强大的AUR，很多桌面的配件很难装上。</li>\n<li><strong>主题：</strong><br> 我的plasma主题是Helium与dynamo主题混合而成。标题栏主题是Qtcurve，图标主题是dynamo与flattr混合而成，鼠标主题是Breeze。应用程序主题是Qtcurve，配色是Breeze。这些都可以到<a href=\"http://pan.baidu.com/s/1jGLy3n4\" target=\"_blank\" rel=\"noopener\">这里下载</a>。先安装qtcurve再将下载下来的文件解压并覆盖～/.kde4/share/即可。注意，Qtcurve的配置方案是Breeze，并且在窗口管理器中设置边框大小是无侧边框。</li>\n<li><strong>全局菜单：</strong><br> 全局菜单可以先加archlinuxcn源，然后依次用yaourt安装appmenu-qt,appmenu-qt5,appmenu-gtk,kdeplasma-applets-menubar。完成之后在面板上添加刚安装的部件再打开“系统设置&gt;应用程序外观&gt;风格”然后选择微调标签，修改“菜单栏风格”为“仅导出”就能有全局菜单了。</li>\n<li><strong>最大化隐藏菜单栏：</strong><br> 最大化隐藏菜单栏可以直接在qtCurve中配置，依然在“窗口管理器”中，勾选“最大化窗口无边框”复选框即可。</li>\n<li><strong>最大化上面板显示窗口控制按钮：</strong>（最后一张图鼠标所指的地方）<br> 在AUR中安装kdeplasma-applets-kwin-button-improved，然后在面板上重复三次添加这个部件，分别设置为最小化（iconify），最大化/回复（maximize/restore）和关闭（close）就行了。</li>\n</ol>"},{"title":"Minikube基本安装使用","date":"2019-10-12T08:15:31.000Z","_content":"","source":"_posts/microservices/minikube.md","raw":"---\ntitle: Minikube基本安装使用\ndate: 2019-10-12 16:15:31\ntags:\n  - docker\n  - kubernetes\n  - k8s\ncategories:\n  - Service-Mesh\n---\n","slug":"microservices/minikube","published":1,"updated":"2019-10-15T07:10:14.012Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1uif85s00004gqqskcr3u61","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"开发环境kubernetes在windows基本安装和使用","date":"2019-10-11T08:07:01.000Z","_content":"1.Install Minikube\n查看systeminfo\n开启虚拟机\n\n[Hyper-V](https://msdn.microsoft.com/en-us/virtualization/hyperv_on_windows/quick_start/walkthrough_install) （windows自带，启用后重启系统）\n\n[VirtualBox](https://www.virtualbox.org/wiki/Downloads)\n\n[下载kubectl.exe](https://storage.googleapis.com/kubernetes-release/release/v1.15.0/bin/windows/amd64/kubectl.exe)，并设置PATH，如C:\\k8s\n\n[下载minikube-windows](https://github.com/kubernetes/minikube/releases/tag/v1.3.1)，修改名称为minikube.exe，设置PATH，如C:\\k8s<br>\n\n禁用Hyper-V，安装VirtualBox\n\n2.启动 minikube start\n\n3.查看docker在miniku内部的环境变量\n```\nC:\\Users\\yangliu>minikube docker-env\n\tSET DOCKER_TLS_VERIFY=1\n\tSET DOCKER_HOST=tcp://192.168.99.100:2376\n\tSET DOCKER_CERT_PATH=C:\\Users\\yangliu\\.minikube\\certs\n\tREM Run this command to configure your shell:\n\tREM @FOR /f \"tokens=*\" %i IN ('minikube docker-env') DO @%i\n\n\nC:\\Users\\yangliu>minikube status\n\thost: Running\n\tkubelet: Running\n\tapiserver: Running\n\tkubectl: Correctly Configured: pointing to minikube-vm at 192.168.99.100\n\nC:\\Users\\yangliu>kubectl get nodes\n\tNAME       STATUS   ROLES    AGE   VERSION\n\tminikube   Ready    master   62m   v1.15.2\n\nC:\\Users\\yangliu>kubectl get pods\n\tNo resources found.\n\nC:\\Users\\yangliu>kubectl cluster-info\n\tKubernetes master is running at https://192.168.99.100:8443\n\tKubeDNS is running at https://192.168.99.100:8443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n```\n4.进入minikube内嵌的docker命令行模式\n\n\tminikube ssh \n\t$docker ps\n\t$docker image ls\n\n5.单独安装docker后打包image\n\n执行命令 @FOR /f \"tokens=*\" %i IN ('minikube docker-env') DO @%i后设置临时变量，使得外部安装的docker client能够连接到内嵌的docker host即docker deamon\n\n打包镜像\n\n\tdocker build -t sayhello:v1.0 .\n\n\n\n6.使用创建的镜像运行application\n\n\tkubectl run sayhelloapp --image=<br>sayhello:v1.0 <br><br>--port=8090\n\tc:\\workspaces\\spring-cloud-demo\\say-hello>kubectl run sayhelloapp --image=sayhello:v1.0  --port=8090\n\tkubectl run --generator=deployment/apps.v1 is DEPRECATED and will be removed in a future version. Use kubectl run --generator=run-pod/v1 or kubectl create instead.\n\tdeployment.apps/sayhelloapp created\n\n7.Deploye the application\n\n\tkubectl expose deployment  sayhelloapp --type=\"LoadBalancer\"\n\tservice/sayhelloapp   exposed\n\nkubectl get services 查看已经发布的service\n\n\t>kubectl get services\n\tNAME          TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE\n\tkubernetes    ClusterIP      10.96.0.1        <none>        443/TCP          25h\n\tsayhelloapp   LoadBalancer   10.106.198.166   <pending>     8090:31580/TCP   36s\n\n查看sayhelloapp运行的地址\n\n\tminikube service sayhelloapp --url\n\t\n8.运行多个副本集\n\n\tkubectl scale deployment  sayhelloapp --replicas=3\n在minikube dashboard中查看\n  ![dashborad for appdemo](/images/appdemo.png)\n\n9 集群是否生效\n\nkubectl delete rs sayhelloapp-54864b84c9 \nkubectl delete pod sayhelloapp-54864b84c9-l8fmv  --now \n查看到集群信息\n\n\t>kubectl get all\n\tsayhelloapp-54864b84c9-4pbxk   1/1     Running   2          3h10m\n\tsayhelloapp-54864b84c9-t7cg8   1/1     Running   0          12m\n\tsayhelloapp-54864b84c9-wkxmq   1/1     Running   1          3h10m\n\nkubectl delete service sayhelloapp \n\n10.以上普通的删除方式，k8s会自动重新生成repicaSet，pod and container\n同时删除部署和服务，则完全删除了部署，服务，replicaSet and pod/sayhelloapp**\n```\n>kubectl get all\nNAME                               READY   STATUS    RESTARTS   AGE\npod/sayhelloapp-54864b84c9-5k498   1/1     Running   0          6m34s\npod/sayhelloapp-54864b84c9-7k4c8   1/1     Running   0          6m34s\npod/sayhelloapp-54864b84c9-vlg8g   1/1     Running   0          6m34s\n\nNAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nservice/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   28h\n\nNAME                          READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/sayhelloapp   3/3     3            3           3h55m\n\nNAME                                     DESIRED   CURRENT   READY   AGE\nreplicaset.apps/sayhelloapp-54864b84c9   3         3         3       6m34s\n\nkubectl delete deployment.apps/sayhelloapp\n```\n11.重新docker build一个镜像appdemo\n\n\tdocker build -t appdemo:v1.0 .\n    kubectl run  appdemoapp --image=appdemo:v1.0 \n\tc:\\workspaces\\appdemo>kubectl delete deployment.apps/appdemoapp service/appdemoapp\n\tdeployment.apps \"appdemoapp\" deleted\n\tservice \"appdemoapp\" deleted\n\tkubectl expose deployment  appdemoapp --type=\"LoadBalancer\" --port=8090 --target-port=8080\n\tkubectl scale deployment appdemoapp --replicas=3","source":"_posts/microservices/k8s-windows.md","raw":"---\ntitle: 开发环境kubernetes在windows基本安装和使用\ndate: 2019-10-11 16:07:01\ntags:\n  - docker\n  - kubernetes\n  - k8s\ncategories:\n  - Microservice\n  \n\n---\n1.Install Minikube\n查看systeminfo\n开启虚拟机\n\n[Hyper-V](https://msdn.microsoft.com/en-us/virtualization/hyperv_on_windows/quick_start/walkthrough_install) （windows自带，启用后重启系统）\n\n[VirtualBox](https://www.virtualbox.org/wiki/Downloads)\n\n[下载kubectl.exe](https://storage.googleapis.com/kubernetes-release/release/v1.15.0/bin/windows/amd64/kubectl.exe)，并设置PATH，如C:\\k8s\n\n[下载minikube-windows](https://github.com/kubernetes/minikube/releases/tag/v1.3.1)，修改名称为minikube.exe，设置PATH，如C:\\k8s<br>\n\n禁用Hyper-V，安装VirtualBox\n\n2.启动 minikube start\n\n3.查看docker在miniku内部的环境变量\n```\nC:\\Users\\yangliu>minikube docker-env\n\tSET DOCKER_TLS_VERIFY=1\n\tSET DOCKER_HOST=tcp://192.168.99.100:2376\n\tSET DOCKER_CERT_PATH=C:\\Users\\yangliu\\.minikube\\certs\n\tREM Run this command to configure your shell:\n\tREM @FOR /f \"tokens=*\" %i IN ('minikube docker-env') DO @%i\n\n\nC:\\Users\\yangliu>minikube status\n\thost: Running\n\tkubelet: Running\n\tapiserver: Running\n\tkubectl: Correctly Configured: pointing to minikube-vm at 192.168.99.100\n\nC:\\Users\\yangliu>kubectl get nodes\n\tNAME       STATUS   ROLES    AGE   VERSION\n\tminikube   Ready    master   62m   v1.15.2\n\nC:\\Users\\yangliu>kubectl get pods\n\tNo resources found.\n\nC:\\Users\\yangliu>kubectl cluster-info\n\tKubernetes master is running at https://192.168.99.100:8443\n\tKubeDNS is running at https://192.168.99.100:8443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n```\n4.进入minikube内嵌的docker命令行模式\n\n\tminikube ssh \n\t$docker ps\n\t$docker image ls\n\n5.单独安装docker后打包image\n\n执行命令 @FOR /f \"tokens=*\" %i IN ('minikube docker-env') DO @%i后设置临时变量，使得外部安装的docker client能够连接到内嵌的docker host即docker deamon\n\n打包镜像\n\n\tdocker build -t sayhello:v1.0 .\n\n\n\n6.使用创建的镜像运行application\n\n\tkubectl run sayhelloapp --image=<br>sayhello:v1.0 <br><br>--port=8090\n\tc:\\workspaces\\spring-cloud-demo\\say-hello>kubectl run sayhelloapp --image=sayhello:v1.0  --port=8090\n\tkubectl run --generator=deployment/apps.v1 is DEPRECATED and will be removed in a future version. Use kubectl run --generator=run-pod/v1 or kubectl create instead.\n\tdeployment.apps/sayhelloapp created\n\n7.Deploye the application\n\n\tkubectl expose deployment  sayhelloapp --type=\"LoadBalancer\"\n\tservice/sayhelloapp   exposed\n\nkubectl get services 查看已经发布的service\n\n\t>kubectl get services\n\tNAME          TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE\n\tkubernetes    ClusterIP      10.96.0.1        <none>        443/TCP          25h\n\tsayhelloapp   LoadBalancer   10.106.198.166   <pending>     8090:31580/TCP   36s\n\n查看sayhelloapp运行的地址\n\n\tminikube service sayhelloapp --url\n\t\n8.运行多个副本集\n\n\tkubectl scale deployment  sayhelloapp --replicas=3\n在minikube dashboard中查看\n  ![dashborad for appdemo](/images/appdemo.png)\n\n9 集群是否生效\n\nkubectl delete rs sayhelloapp-54864b84c9 \nkubectl delete pod sayhelloapp-54864b84c9-l8fmv  --now \n查看到集群信息\n\n\t>kubectl get all\n\tsayhelloapp-54864b84c9-4pbxk   1/1     Running   2          3h10m\n\tsayhelloapp-54864b84c9-t7cg8   1/1     Running   0          12m\n\tsayhelloapp-54864b84c9-wkxmq   1/1     Running   1          3h10m\n\nkubectl delete service sayhelloapp \n\n10.以上普通的删除方式，k8s会自动重新生成repicaSet，pod and container\n同时删除部署和服务，则完全删除了部署，服务，replicaSet and pod/sayhelloapp**\n```\n>kubectl get all\nNAME                               READY   STATUS    RESTARTS   AGE\npod/sayhelloapp-54864b84c9-5k498   1/1     Running   0          6m34s\npod/sayhelloapp-54864b84c9-7k4c8   1/1     Running   0          6m34s\npod/sayhelloapp-54864b84c9-vlg8g   1/1     Running   0          6m34s\n\nNAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nservice/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   28h\n\nNAME                          READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/sayhelloapp   3/3     3            3           3h55m\n\nNAME                                     DESIRED   CURRENT   READY   AGE\nreplicaset.apps/sayhelloapp-54864b84c9   3         3         3       6m34s\n\nkubectl delete deployment.apps/sayhelloapp\n```\n11.重新docker build一个镜像appdemo\n\n\tdocker build -t appdemo:v1.0 .\n    kubectl run  appdemoapp --image=appdemo:v1.0 \n\tc:\\workspaces\\appdemo>kubectl delete deployment.apps/appdemoapp service/appdemoapp\n\tdeployment.apps \"appdemoapp\" deleted\n\tservice \"appdemoapp\" deleted\n\tkubectl expose deployment  appdemoapp --type=\"LoadBalancer\" --port=8090 --target-port=8080\n\tkubectl scale deployment appdemoapp --replicas=3","slug":"microservices/k8s-windows","published":1,"updated":"2019-10-15T07:15:54.653Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1uif86300014gqqtjutevry","content":"<p>1.Install Minikube<br>查看systeminfo<br>开启虚拟机</p>\n<p><a href=\"https://msdn.microsoft.com/en-us/virtualization/hyperv_on_windows/quick_start/walkthrough_install\" target=\"_blank\" rel=\"noopener\">Hyper-V</a> （windows自带，启用后重启系统）</p>\n<p><a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\" rel=\"noopener\">VirtualBox</a></p>\n<p><a href=\"https://storage.googleapis.com/kubernetes-release/release/v1.15.0/bin/windows/amd64/kubectl.exe\" target=\"_blank\" rel=\"noopener\">下载kubectl.exe</a>，并设置PATH，如C:\\k8s</p>\n<p><a href=\"https://github.com/kubernetes/minikube/releases/tag/v1.3.1\" target=\"_blank\" rel=\"noopener\">下载minikube-windows</a>，修改名称为minikube.exe，设置PATH，如C:\\k8s<br></p>\n<p>禁用Hyper-V，安装VirtualBox</p>\n<p>2.启动 minikube start</p>\n<p>3.查看docker在miniku内部的环境变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\yangliu&gt;minikube docker-env</span><br><span class=\"line\">\tSET DOCKER_TLS_VERIFY=1</span><br><span class=\"line\">\tSET DOCKER_HOST=tcp://192.168.99.100:2376</span><br><span class=\"line\">\tSET DOCKER_CERT_PATH=C:\\Users\\yangliu\\.minikube\\certs</span><br><span class=\"line\">\tREM Run this command to configure your shell:</span><br><span class=\"line\">\tREM @FOR /f &quot;tokens=*&quot; %i IN (&apos;minikube docker-env&apos;) DO @%i</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\yangliu&gt;minikube status</span><br><span class=\"line\">\thost: Running</span><br><span class=\"line\">\tkubelet: Running</span><br><span class=\"line\">\tapiserver: Running</span><br><span class=\"line\">\tkubectl: Correctly Configured: pointing to minikube-vm at 192.168.99.100</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\yangliu&gt;kubectl get nodes</span><br><span class=\"line\">\tNAME       STATUS   ROLES    AGE   VERSION</span><br><span class=\"line\">\tminikube   Ready    master   62m   v1.15.2</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\yangliu&gt;kubectl get pods</span><br><span class=\"line\">\tNo resources found.</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\yangliu&gt;kubectl cluster-info</span><br><span class=\"line\">\tKubernetes master is running at https://192.168.99.100:8443</span><br><span class=\"line\">\tKubeDNS is running at https://192.168.99.100:8443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy</span><br></pre></td></tr></table></figure></p>\n<p>4.进入minikube内嵌的docker命令行模式</p>\n<pre><code>minikube ssh \n$docker ps\n$docker image ls\n</code></pre><p>5.单独安装docker后打包image</p>\n<p>执行命令 @FOR /f “tokens=*” %i IN (‘minikube docker-env’) DO @%i后设置临时变量，使得外部安装的docker client能够连接到内嵌的docker host即docker deamon</p>\n<p>打包镜像</p>\n<pre><code>docker build -t sayhello:v1.0 .\n</code></pre><p>6.使用创建的镜像运行application</p>\n<pre><code>kubectl run sayhelloapp --image=&lt;br&gt;sayhello:v1.0 &lt;br&gt;&lt;br&gt;--port=8090\nc:\\workspaces\\spring-cloud-demo\\say-hello&gt;kubectl run sayhelloapp --image=sayhello:v1.0  --port=8090\nkubectl run --generator=deployment/apps.v1 is DEPRECATED and will be removed in a future version. Use kubectl run --generator=run-pod/v1 or kubectl create instead.\ndeployment.apps/sayhelloapp created\n</code></pre><p>7.Deploye the application</p>\n<pre><code>kubectl expose deployment  sayhelloapp --type=&quot;LoadBalancer&quot;\nservice/sayhelloapp   exposed\n</code></pre><p>kubectl get services 查看已经发布的service</p>\n<pre><code>&gt;kubectl get services\nNAME          TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE\nkubernetes    ClusterIP      10.96.0.1        &lt;none&gt;        443/TCP          25h\nsayhelloapp   LoadBalancer   10.106.198.166   &lt;pending&gt;     8090:31580/TCP   36s\n</code></pre><p>查看sayhelloapp运行的地址</p>\n<pre><code>minikube service sayhelloapp --url\n</code></pre><p>8.运行多个副本集</p>\n<pre><code>kubectl scale deployment  sayhelloapp --replicas=3\n</code></pre><p>在minikube dashboard中查看<br>  <img src=\"/images/appdemo.png\" alt=\"dashborad for appdemo\"></p>\n<p>9 集群是否生效</p>\n<p>kubectl delete rs sayhelloapp-54864b84c9<br>kubectl delete pod sayhelloapp-54864b84c9-l8fmv  –now<br>查看到集群信息</p>\n<pre><code>&gt;kubectl get all\nsayhelloapp-54864b84c9-4pbxk   1/1     Running   2          3h10m\nsayhelloapp-54864b84c9-t7cg8   1/1     Running   0          12m\nsayhelloapp-54864b84c9-wkxmq   1/1     Running   1          3h10m\n</code></pre><p>kubectl delete service sayhelloapp </p>\n<p>10.以上普通的删除方式，k8s会自动重新生成repicaSet，pod and container<br>同时删除部署和服务，则完全删除了部署，服务，replicaSet and pod/sayhelloapp**<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;kubectl get all</span><br><span class=\"line\">NAME                               READY   STATUS    RESTARTS   AGE</span><br><span class=\"line\">pod/sayhelloapp-54864b84c9-5k498   1/1     Running   0          6m34s</span><br><span class=\"line\">pod/sayhelloapp-54864b84c9-7k4c8   1/1     Running   0          6m34s</span><br><span class=\"line\">pod/sayhelloapp-54864b84c9-vlg8g   1/1     Running   0          6m34s</span><br><span class=\"line\"></span><br><span class=\"line\">NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE</span><br><span class=\"line\">service/kubernetes   ClusterIP   10.96.0.1    &lt;none&gt;        443/TCP   28h</span><br><span class=\"line\"></span><br><span class=\"line\">NAME                          READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class=\"line\">deployment.apps/sayhelloapp   3/3     3            3           3h55m</span><br><span class=\"line\"></span><br><span class=\"line\">NAME                                     DESIRED   CURRENT   READY   AGE</span><br><span class=\"line\">replicaset.apps/sayhelloapp-54864b84c9   3         3         3       6m34s</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl delete deployment.apps/sayhelloapp</span><br></pre></td></tr></table></figure></p>\n<p>11.重新docker build一个镜像appdemo</p>\n<pre><code>docker build -t appdemo:v1.0 .\nkubectl run  appdemoapp --image=appdemo:v1.0 \nc:\\workspaces\\appdemo&gt;kubectl delete deployment.apps/appdemoapp service/appdemoapp\ndeployment.apps &quot;appdemoapp&quot; deleted\nservice &quot;appdemoapp&quot; deleted\nkubectl expose deployment  appdemoapp --type=&quot;LoadBalancer&quot; --port=8090 --target-port=8080\nkubectl scale deployment appdemoapp --replicas=3\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>1.Install Minikube<br>查看systeminfo<br>开启虚拟机</p>\n<p><a href=\"https://msdn.microsoft.com/en-us/virtualization/hyperv_on_windows/quick_start/walkthrough_install\" target=\"_blank\" rel=\"noopener\">Hyper-V</a> （windows自带，启用后重启系统）</p>\n<p><a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\" rel=\"noopener\">VirtualBox</a></p>\n<p><a href=\"https://storage.googleapis.com/kubernetes-release/release/v1.15.0/bin/windows/amd64/kubectl.exe\" target=\"_blank\" rel=\"noopener\">下载kubectl.exe</a>，并设置PATH，如C:\\k8s</p>\n<p><a href=\"https://github.com/kubernetes/minikube/releases/tag/v1.3.1\" target=\"_blank\" rel=\"noopener\">下载minikube-windows</a>，修改名称为minikube.exe，设置PATH，如C:\\k8s<br></p>\n<p>禁用Hyper-V，安装VirtualBox</p>\n<p>2.启动 minikube start</p>\n<p>3.查看docker在miniku内部的环境变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\yangliu&gt;minikube docker-env</span><br><span class=\"line\">\tSET DOCKER_TLS_VERIFY=1</span><br><span class=\"line\">\tSET DOCKER_HOST=tcp://192.168.99.100:2376</span><br><span class=\"line\">\tSET DOCKER_CERT_PATH=C:\\Users\\yangliu\\.minikube\\certs</span><br><span class=\"line\">\tREM Run this command to configure your shell:</span><br><span class=\"line\">\tREM @FOR /f &quot;tokens=*&quot; %i IN (&apos;minikube docker-env&apos;) DO @%i</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\yangliu&gt;minikube status</span><br><span class=\"line\">\thost: Running</span><br><span class=\"line\">\tkubelet: Running</span><br><span class=\"line\">\tapiserver: Running</span><br><span class=\"line\">\tkubectl: Correctly Configured: pointing to minikube-vm at 192.168.99.100</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\yangliu&gt;kubectl get nodes</span><br><span class=\"line\">\tNAME       STATUS   ROLES    AGE   VERSION</span><br><span class=\"line\">\tminikube   Ready    master   62m   v1.15.2</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\yangliu&gt;kubectl get pods</span><br><span class=\"line\">\tNo resources found.</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\yangliu&gt;kubectl cluster-info</span><br><span class=\"line\">\tKubernetes master is running at https://192.168.99.100:8443</span><br><span class=\"line\">\tKubeDNS is running at https://192.168.99.100:8443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy</span><br></pre></td></tr></table></figure></p>\n<p>4.进入minikube内嵌的docker命令行模式</p>\n<pre><code>minikube ssh \n$docker ps\n$docker image ls\n</code></pre><p>5.单独安装docker后打包image</p>\n<p>执行命令 @FOR /f “tokens=*” %i IN (‘minikube docker-env’) DO @%i后设置临时变量，使得外部安装的docker client能够连接到内嵌的docker host即docker deamon</p>\n<p>打包镜像</p>\n<pre><code>docker build -t sayhello:v1.0 .\n</code></pre><p>6.使用创建的镜像运行application</p>\n<pre><code>kubectl run sayhelloapp --image=&lt;br&gt;sayhello:v1.0 &lt;br&gt;&lt;br&gt;--port=8090\nc:\\workspaces\\spring-cloud-demo\\say-hello&gt;kubectl run sayhelloapp --image=sayhello:v1.0  --port=8090\nkubectl run --generator=deployment/apps.v1 is DEPRECATED and will be removed in a future version. Use kubectl run --generator=run-pod/v1 or kubectl create instead.\ndeployment.apps/sayhelloapp created\n</code></pre><p>7.Deploye the application</p>\n<pre><code>kubectl expose deployment  sayhelloapp --type=&quot;LoadBalancer&quot;\nservice/sayhelloapp   exposed\n</code></pre><p>kubectl get services 查看已经发布的service</p>\n<pre><code>&gt;kubectl get services\nNAME          TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE\nkubernetes    ClusterIP      10.96.0.1        &lt;none&gt;        443/TCP          25h\nsayhelloapp   LoadBalancer   10.106.198.166   &lt;pending&gt;     8090:31580/TCP   36s\n</code></pre><p>查看sayhelloapp运行的地址</p>\n<pre><code>minikube service sayhelloapp --url\n</code></pre><p>8.运行多个副本集</p>\n<pre><code>kubectl scale deployment  sayhelloapp --replicas=3\n</code></pre><p>在minikube dashboard中查看<br>  <img src=\"/images/appdemo.png\" alt=\"dashborad for appdemo\"></p>\n<p>9 集群是否生效</p>\n<p>kubectl delete rs sayhelloapp-54864b84c9<br>kubectl delete pod sayhelloapp-54864b84c9-l8fmv  –now<br>查看到集群信息</p>\n<pre><code>&gt;kubectl get all\nsayhelloapp-54864b84c9-4pbxk   1/1     Running   2          3h10m\nsayhelloapp-54864b84c9-t7cg8   1/1     Running   0          12m\nsayhelloapp-54864b84c9-wkxmq   1/1     Running   1          3h10m\n</code></pre><p>kubectl delete service sayhelloapp </p>\n<p>10.以上普通的删除方式，k8s会自动重新生成repicaSet，pod and container<br>同时删除部署和服务，则完全删除了部署，服务，replicaSet and pod/sayhelloapp**<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;kubectl get all</span><br><span class=\"line\">NAME                               READY   STATUS    RESTARTS   AGE</span><br><span class=\"line\">pod/sayhelloapp-54864b84c9-5k498   1/1     Running   0          6m34s</span><br><span class=\"line\">pod/sayhelloapp-54864b84c9-7k4c8   1/1     Running   0          6m34s</span><br><span class=\"line\">pod/sayhelloapp-54864b84c9-vlg8g   1/1     Running   0          6m34s</span><br><span class=\"line\"></span><br><span class=\"line\">NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE</span><br><span class=\"line\">service/kubernetes   ClusterIP   10.96.0.1    &lt;none&gt;        443/TCP   28h</span><br><span class=\"line\"></span><br><span class=\"line\">NAME                          READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class=\"line\">deployment.apps/sayhelloapp   3/3     3            3           3h55m</span><br><span class=\"line\"></span><br><span class=\"line\">NAME                                     DESIRED   CURRENT   READY   AGE</span><br><span class=\"line\">replicaset.apps/sayhelloapp-54864b84c9   3         3         3       6m34s</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl delete deployment.apps/sayhelloapp</span><br></pre></td></tr></table></figure></p>\n<p>11.重新docker build一个镜像appdemo</p>\n<pre><code>docker build -t appdemo:v1.0 .\nkubectl run  appdemoapp --image=appdemo:v1.0 \nc:\\workspaces\\appdemo&gt;kubectl delete deployment.apps/appdemoapp service/appdemoapp\ndeployment.apps &quot;appdemoapp&quot; deleted\nservice &quot;appdemoapp&quot; deleted\nkubectl expose deployment  appdemoapp --type=&quot;LoadBalancer&quot; --port=8090 --target-port=8080\nkubectl scale deployment appdemoapp --replicas=3\n</code></pre>"},{"title":"Istio对比Springcloud基本分析","date":"2019-10-17T05:49:52.000Z","_content":"   \n作者: 李维龙\n## 1 Istio 是什么\n\nIstio 是一个完全开源的服务网格，可以降低部署的复杂性，集成了多样化的功能保证微服务架构高效的运行，并提供保护、连接和监控微服务的统一方法。\n\n核心功能\n\n - 流量管理\n      \n通过简单的规则配置和流量路由，您可以控制服务之间的流量和 API 调用。Istio 简化了断路器、超时和重试等服务级别属性的配置，并且可以轻松设置 A/B测试、金丝雀部署和基于百分比的流量分割的分阶段部署等重要任务。\n\n - 安全\n\nIstio 的安全功能使开发人员可以专注于应用程序级别的安全性。Istio 提供底层安全通信信道，并大规模管理服务通信的认证、授权和加密。\n\n - 可观察性\n\nIstio 强大的追踪、监控和日志记录可以深入了解服务网格部署。通过 Istio 的监控功能，可以真正了解服务性能如何影响上游和下游的功能，而其自定义仪表板可以提供对所有服务性能的可视性，并了解该性能如何影响其他进程。\n\n- 平台支持\n\nIstio 是独立于平台的，旨在运行在各种环境中，包括跨云、内部部署、Kubernetes、Mesos 等。您可以在 Kubernetes 上部署 Istio 或具有 Consul 的 Nomad 上部署。Istio 目前支持：Kubernetes上部署的服务/使用 Consul 注册的服务/虚拟机上部署的服务 \n\n - 集成和定制\n\n策略执行组件可以扩展和定制，以便与现有的 ACL、日志、监控、配额、审计等方案集成。\n\n## 2 重要组件介绍\n\nIstio是一个开放平台，提供统一的方式来集成微服务，管理跨微服务的流量，执行策略和汇总遥测数据。Istio的控制面板在底层集群管理平台（如Kubernetes，Mesos等）上提供了一个抽象层。\n\nIstio由以下组件组成：\n\nEnvoy - 微服务的Sidecar代理，处理集群中的服务间和服务到外部服务的入口/出口流量。代理形成安全的微服务网格，提供丰富的功能，如服务发现，丰富的7层路由，熔断器，策略执行和遥测记录/报告功能。\nMixer - 由代理和微服务使用的集中式组件，用于执行策略，如鉴权，限流，配额，认证，请求跟踪和遥测收集等。\n\nPilot - 负责在运行时配置代理的组件。\n\nCitadel - 负责证书颁发和轮换的集中式组件\n\nNode Agent - 负责证书颁发和轮换的每节点组件\n\nGalley - 用于在Istio中验证，摄取，聚合，转换和分发配置的中央组件。\nIstio目前只支持Kubernetes平台和基于consul的环境\n\n## 3 架构\n\nIstio 服务⽹格逻辑上分为数据平⾯和控制平⾯。\n\n数据平⾯由⼀组以 sidecar ⽅式部署的智能代理（Envoy）组成。这些代理可以调节和控制微服务\n及 Mixer 之间所有的⽹络通信。\n\n控制平⾯负责管理和配置代理来路由流量。此外控制平⾯配置 Mixer 以实施策略和收集遥测数据。\n  ![architecture of istio](/images/istio-architec.png)\n\nEnvoy\n\n  Envoy 被部署为 sidecar，和对应服务在同一个 Kubernetes pod 中。这允许 Istio 将大量关于流量行为的信号作为属性提取出来，而这些属性又可以在 Mixer 中用于执行策略决策，并发送给监控系统，以提供整个网格行为的信息。\n\nMixer\n\n  Mixer是一个独立于平台的组件，负责在服务网格上执行访问控制和使用策略，并从 Envoy 代理和其他服务收集遥测数据。代理提取请求级属性，发送到 Mixer 进行评估。有关属性提取和策略评估的更多信息，\n\nPilot\n\n  Pilot 为 Envoy sidecar 提供服务发现功能，为智能路由（例如 A/B 测试、金丝雀部署等）和弹性（超时、重试、熔断器等）提供流量管理功能。它将控制流量行为的高级路由规则转换为特定于 Envoy 的配置，并在运行时将它们传播到 sidecar。\n\nCitadel\n\n  通过内置身份和凭证管理赋能强大的服务间和最终用户身份验证。可用于升级服务网格中未加密的流量，并为运维人员提供基于服务标识而不是网络控制的强制执行策略的能力。从 0.5 版本开始，Istio 支持基于角色的访问控制，以控制谁可以访问您的服务，而不是基于不稳定的三层或四层网络标识。\n\nGalley\n\n  Galley 代表其他的 Istio 控制平面组件，用来验证用户编写的 Istio API 配置。随着时间的推移，Galley 将接管 Istio 获取配置、 处理和分配组件的顶级责任。它负责将其他的 Istio 组件与从底层平台（例如 Kubernetes）获取用户配置的细节隔离开来。\n\n\n控制平面组件\nkubernetes 部署下的控制平面组件如下：\n\n$ kubectl -n istio-system get pod\nNAME                                          READY     STATUS \ngrafana-5f54556df5-s4xr4                      1/1       Running\nistio-citadel-775c6cfd6b-8h5gt                1/1       Running\nistio-galley-675d75c954-kjcsg                 1/1       Running\nistio-ingressgateway-6f7b477cdd-d8zpv         1/1       Running\nistio-pilot-7dfdb48fd8-92xgt                  2/2       Running\nistio-policy-544967d75b-p6qkk                 2/2       Running\nistio-sidecar-injector-5f7894f54f-w7f9v       1/1       Running\nistio-telemetry-777876dc5d-msclx              2/2       Running\nistio-tracing-5fbc94c494-558fp                1/1       Running\nkiali-7c6f4c9874-vzb4t                        1/1       Running\nprometheus-66b7689b97-w9glt                   1/1       Running\n \n\n \n\n \n\n## 4 istio系统组件细化到进程级别:\n\n![processes of istio](/images/istio-process.jpg)\n\n说明：\n\n上图是istio组件细化到进程的结构图，在数据平面可以看到istio-ingressgateway、istio-egressgateway 内部实现是一个envoy代理，部署应用程序的pod中包含 istio-init 、user container 、istio-proxy ，其中istio-init 是初始化容器、iptables、路由。\n\n主要的服务：\n\n**Istio-telemetry** 为Envoy提供了数据上报和日志搜集服务，以用于监控告警和日志查询。（高并发下会有性能影响，会间接导致整体性能下降，业界针对这个有较多探讨；为提高性能，需要设置为多实例，防止单点；均衡流量）\n\n**Istio-sidecar-injector** 是sidecar自动注入功能组件，\n\n**Istio-policy** 用于向Envoy提供准入策略控制，黑白名单控制，速率限制等相关策略\n\n**Istio-citadel** 用于安全相关功能，为服务和用户提供认证和鉴权、管理凭据和 RBAC，挂掉则会导致认证，安全相关功能失效，如果部署了 istio-citadel，则 Envoy 每 15 分钟会进行一次重新启动来刷新证书；--set security.enabled=false如果要禁用则通过设置security，它对应的镜像就是citadel\n\n**Istio-galley** istio API配置的校验、各种配置之间统筹，为 Istio 提供配置管理服务，包含有Kubernetes CRD资源的listener，通过用Kubernetes的Webhook机制对Pilot 和 Mixer 的配置进行验证；这个服务挂掉会导致配置校验异常，是一个必须的组件；比如创建gateway、virtualService等资源，就会需要校验；如果不想校验，可以通过设置helm 的选项参数--set global.configValidation=false来关闭校验\n\n**Istio-polit** 控制sidecar中envoy的启动与参数配置；如果异常则envoy无法正常启动，应用服务的流量无法进行拦截和代理，所有配置、流量规则、策略无法生效。\n\n \n\n资料：\n\n[Istio knowledge map 知识图谱](https://github.com/servicemesher/istio-knowledge-map)\n \n\n仓库\n\nIstio项目分为多个GitHub库。\n\nistio/istio： 这是Istio的主要存储库。 它托管了Istio的核心组件，以及管理Istio开源项目的示例程序和各种文档。 这包括：\n\nsecurity：此目录包含与安全性相关的代码，包括Citadel（充当证书颁发机构），node agent。\n\npilot：此目录包含特定于平台的代码，用于填充抽象服务模型，在应用程序拓扑更改时动态重新配置代理，以及将路由规则转换为特定于代理的配置。\n\nistioctl：该目录包含istioctl命令行实用程序的代码。\n\nmixer：此目录包含用于对通过代理的流量实施各种策略以及从代理和服务收集遥测数据的代码。 有插件可与各种云平台，策略管理服务和监控服务连接。\n\nistio/API：该存储库定义了Istio平台的组件级API和通用配置格式。\n\nistio/proxy： Istio代理包含Envoy代理的扩展（以Envoy过滤器的形式），允许代理将策略执行决策委托给Mixer。\n\n\n\n## 5 Istio 安装 \n\n下载 istio 安装包 \n\ncurl -L https://git.io/getLatestIstio | ISTIO_VERSION=1.2.5 sh -\n\n配置环境变量 PATH\n\nk8s 安装，进入 安装包目录 ，执行：for i in install/kubernetes/helm/istio-init/files/crd*yaml; do kubectl apply -f $i; done\n\n选择模式 ：\n\n宽容模式 mutual TLS： kubectl apply -f install/kubernetes/istio-demo.yaml\n\n严格模式 mutual TLS：kubectl apply -f install/kubernetes/istio-demo-auth.yaml\n\n \n\nIstio + k8s部署结构图  \n\n![k8s+istio结构图](/images/k8s+istio.jpg)\n\n说明：\n\n从图中可以看出，Istio 做服务治理，K8s与istio整合，K8s做容器编排，微服务是以Docker容器的方式运行\n \n\n## 6 用户请求访问\n\n![用户请求在istio路由流程](/images/request-gateway-istio.png)\n\n说明：\n\n(1) 用户根据指定网络地址对Service X发起请求，通过外层网关服务public Ingress gateway 根据指定规则路由到目标pod，request 被代理sidecar拦截，sidecar与Service X 之间互相通信，如果在Service X 执行请求的过程中，调用了Service Y，在Service X发送调用请求后，请求会被sidecar拦截并解析，然后与Service Y的sidecar进行通信，Service Y再与它的sidecar通信，最后响应请求结束。\n\n(2) 当service mesh 中的服务需要去调用网格外的服务时，通过设置Egress gateway ，设置出口网关，路由到指定的外部服务。       \n\n\n\n服务间调用\n\n调用配置：   \n ![服务之间调用url配置](/images/invoke-service-config.png)\n\n\n \n\n调用流程图：\n\n![服务之间调用流程](/images/invoke-service-flow.png)         \n\n说明：\n\nService A 请求调用Service B,通过服务名在service name System 中获取到满足指定策略的服务地址（Ip+端口），service name System 可以当成是一个注册中心，istio中pilot 组件充当注册中心发现服务，当获取到服务的地址，就可以直接去请求Service B 的某一个节点，最后返回响应结果。\n\n\n\n## 7 总结\n\n通过了解istio 实现service mesh，对比SpringCloud可以发现，istio是将服务的治理下沉到了架构层面，在我们的服务或应用程序中不需要再去考虑服务治理相关操作，这也很好的将开发和运维剥离，同时在服务治理的层面，istio实现的粒度更加的精确，方式更加的便捷，不同于SpringCloud中我们需要在服务的配置中修改，并重启服务。springcloud 在负载均衡和熔断处理，一般都是在客户端处理，也就是调用端，而istio在负载均衡和熔断处理时，是通过Envoy代理实现。\n\nistio与k8s结合使用时，istio 服务会在每个kubelet都启用，应用部署的时候可以选择指定node，也可以指定资源条件启动，k8s会去根据自身算法寻找满足条件的node，当没有满足的node时，会启动报错，被踢除。一个 pod 可以包含一个或者多个容器，但通常是一个。而使用 Istio 的时候，需要在 pod 中主容器旁注入一个 sidecar，也就是上面提到的代理（Envoy）。\n\n最后我们通过从服务发现、负载均衡、熔断处理 、网关路由 四个方面对istio和SpringCloud做了对比：\n\n  （1）服务发现：SpringCloud 使用Eureka等注册中心，实现服务发现，应用的服务必须都指定注册中心的地址进行注册，发现服务时，通过注册中心去寻址解析到相对应得服务地址，进行请求；istio 在低版本时支持eureka 注册中心，高版本已经去除eureka，所以目前发现服务有两种方式，一种是使用k8s api-server，另一种是Consul，istio与k'8s结合的比较好，所以可以直接使用k8s的服务发现api-server，istio中的pilot组件就是和k8s api-server进行通信，实现服务发现，维护服务列表；从服务发现的层面去比较，可以看到 istio 架构中，开发不需要去考虑服务发现的过程，不需要将服务注册到指定的注册注册中心。\n\n  （2）负载均衡：SpringCloud 支持负载均衡的组件Ribbon、Feign，我们需要在代码中使用@LoadBalanced 注解开启负载均衡客户端，自定义负载均衡策略可以在配置文件中进行配置；istio 中Envoy组件配置负载均衡策略实现转发请求，当前支持的主要负载均衡算法：轮询、随机、最小连接数。通过比较可以发现，两者负载均衡的工作流程类似，但是istio 负载均衡策略配置的粒度要更小，类型更多。\n\n  （3）熔断处理：SpringCloud 熔断组件Hystrix ，可以在配置中进行开启并相关配置，并实现回调方法；istio利用Envoy网格，Envoy 在网络级别强制实现断路，而不必为每个应用程序单独配置或编程。\n\n  （4）网关：SpringCloud 有gateway网关组件，我们可以在实现组件的服务，利用过滤器和拦截器实现自定义的网关路由；istio 可以通过gateway配置ingress，并配置相关的virtualService，来实现网关路由转发。istio gateway可以实现的粒度更小，可以根据角色、用户等更小的粒度进行路由。\n\n \n\ndemo 代码地址：https://github.com/WeiLong-lee/istio-study.git\n\nistio 官网文档地址：https://istio.io/docs/  ","source":"_posts/servicemesh/istio-and-springcloud.md","raw":"---\ntitle: Istio对比Springcloud基本分析\ndate: 2019-10-17 13:49:52\ntags:\n  - kubernetes\n  - k8s\n  - istio\ncategories:\n  - Service-Mesh\n \n---\n   \n作者: 李维龙\n## 1 Istio 是什么\n\nIstio 是一个完全开源的服务网格，可以降低部署的复杂性，集成了多样化的功能保证微服务架构高效的运行，并提供保护、连接和监控微服务的统一方法。\n\n核心功能\n\n - 流量管理\n      \n通过简单的规则配置和流量路由，您可以控制服务之间的流量和 API 调用。Istio 简化了断路器、超时和重试等服务级别属性的配置，并且可以轻松设置 A/B测试、金丝雀部署和基于百分比的流量分割的分阶段部署等重要任务。\n\n - 安全\n\nIstio 的安全功能使开发人员可以专注于应用程序级别的安全性。Istio 提供底层安全通信信道，并大规模管理服务通信的认证、授权和加密。\n\n - 可观察性\n\nIstio 强大的追踪、监控和日志记录可以深入了解服务网格部署。通过 Istio 的监控功能，可以真正了解服务性能如何影响上游和下游的功能，而其自定义仪表板可以提供对所有服务性能的可视性，并了解该性能如何影响其他进程。\n\n- 平台支持\n\nIstio 是独立于平台的，旨在运行在各种环境中，包括跨云、内部部署、Kubernetes、Mesos 等。您可以在 Kubernetes 上部署 Istio 或具有 Consul 的 Nomad 上部署。Istio 目前支持：Kubernetes上部署的服务/使用 Consul 注册的服务/虚拟机上部署的服务 \n\n - 集成和定制\n\n策略执行组件可以扩展和定制，以便与现有的 ACL、日志、监控、配额、审计等方案集成。\n\n## 2 重要组件介绍\n\nIstio是一个开放平台，提供统一的方式来集成微服务，管理跨微服务的流量，执行策略和汇总遥测数据。Istio的控制面板在底层集群管理平台（如Kubernetes，Mesos等）上提供了一个抽象层。\n\nIstio由以下组件组成：\n\nEnvoy - 微服务的Sidecar代理，处理集群中的服务间和服务到外部服务的入口/出口流量。代理形成安全的微服务网格，提供丰富的功能，如服务发现，丰富的7层路由，熔断器，策略执行和遥测记录/报告功能。\nMixer - 由代理和微服务使用的集中式组件，用于执行策略，如鉴权，限流，配额，认证，请求跟踪和遥测收集等。\n\nPilot - 负责在运行时配置代理的组件。\n\nCitadel - 负责证书颁发和轮换的集中式组件\n\nNode Agent - 负责证书颁发和轮换的每节点组件\n\nGalley - 用于在Istio中验证，摄取，聚合，转换和分发配置的中央组件。\nIstio目前只支持Kubernetes平台和基于consul的环境\n\n## 3 架构\n\nIstio 服务⽹格逻辑上分为数据平⾯和控制平⾯。\n\n数据平⾯由⼀组以 sidecar ⽅式部署的智能代理（Envoy）组成。这些代理可以调节和控制微服务\n及 Mixer 之间所有的⽹络通信。\n\n控制平⾯负责管理和配置代理来路由流量。此外控制平⾯配置 Mixer 以实施策略和收集遥测数据。\n  ![architecture of istio](/images/istio-architec.png)\n\nEnvoy\n\n  Envoy 被部署为 sidecar，和对应服务在同一个 Kubernetes pod 中。这允许 Istio 将大量关于流量行为的信号作为属性提取出来，而这些属性又可以在 Mixer 中用于执行策略决策，并发送给监控系统，以提供整个网格行为的信息。\n\nMixer\n\n  Mixer是一个独立于平台的组件，负责在服务网格上执行访问控制和使用策略，并从 Envoy 代理和其他服务收集遥测数据。代理提取请求级属性，发送到 Mixer 进行评估。有关属性提取和策略评估的更多信息，\n\nPilot\n\n  Pilot 为 Envoy sidecar 提供服务发现功能，为智能路由（例如 A/B 测试、金丝雀部署等）和弹性（超时、重试、熔断器等）提供流量管理功能。它将控制流量行为的高级路由规则转换为特定于 Envoy 的配置，并在运行时将它们传播到 sidecar。\n\nCitadel\n\n  通过内置身份和凭证管理赋能强大的服务间和最终用户身份验证。可用于升级服务网格中未加密的流量，并为运维人员提供基于服务标识而不是网络控制的强制执行策略的能力。从 0.5 版本开始，Istio 支持基于角色的访问控制，以控制谁可以访问您的服务，而不是基于不稳定的三层或四层网络标识。\n\nGalley\n\n  Galley 代表其他的 Istio 控制平面组件，用来验证用户编写的 Istio API 配置。随着时间的推移，Galley 将接管 Istio 获取配置、 处理和分配组件的顶级责任。它负责将其他的 Istio 组件与从底层平台（例如 Kubernetes）获取用户配置的细节隔离开来。\n\n\n控制平面组件\nkubernetes 部署下的控制平面组件如下：\n\n$ kubectl -n istio-system get pod\nNAME                                          READY     STATUS \ngrafana-5f54556df5-s4xr4                      1/1       Running\nistio-citadel-775c6cfd6b-8h5gt                1/1       Running\nistio-galley-675d75c954-kjcsg                 1/1       Running\nistio-ingressgateway-6f7b477cdd-d8zpv         1/1       Running\nistio-pilot-7dfdb48fd8-92xgt                  2/2       Running\nistio-policy-544967d75b-p6qkk                 2/2       Running\nistio-sidecar-injector-5f7894f54f-w7f9v       1/1       Running\nistio-telemetry-777876dc5d-msclx              2/2       Running\nistio-tracing-5fbc94c494-558fp                1/1       Running\nkiali-7c6f4c9874-vzb4t                        1/1       Running\nprometheus-66b7689b97-w9glt                   1/1       Running\n \n\n \n\n \n\n## 4 istio系统组件细化到进程级别:\n\n![processes of istio](/images/istio-process.jpg)\n\n说明：\n\n上图是istio组件细化到进程的结构图，在数据平面可以看到istio-ingressgateway、istio-egressgateway 内部实现是一个envoy代理，部署应用程序的pod中包含 istio-init 、user container 、istio-proxy ，其中istio-init 是初始化容器、iptables、路由。\n\n主要的服务：\n\n**Istio-telemetry** 为Envoy提供了数据上报和日志搜集服务，以用于监控告警和日志查询。（高并发下会有性能影响，会间接导致整体性能下降，业界针对这个有较多探讨；为提高性能，需要设置为多实例，防止单点；均衡流量）\n\n**Istio-sidecar-injector** 是sidecar自动注入功能组件，\n\n**Istio-policy** 用于向Envoy提供准入策略控制，黑白名单控制，速率限制等相关策略\n\n**Istio-citadel** 用于安全相关功能，为服务和用户提供认证和鉴权、管理凭据和 RBAC，挂掉则会导致认证，安全相关功能失效，如果部署了 istio-citadel，则 Envoy 每 15 分钟会进行一次重新启动来刷新证书；--set security.enabled=false如果要禁用则通过设置security，它对应的镜像就是citadel\n\n**Istio-galley** istio API配置的校验、各种配置之间统筹，为 Istio 提供配置管理服务，包含有Kubernetes CRD资源的listener，通过用Kubernetes的Webhook机制对Pilot 和 Mixer 的配置进行验证；这个服务挂掉会导致配置校验异常，是一个必须的组件；比如创建gateway、virtualService等资源，就会需要校验；如果不想校验，可以通过设置helm 的选项参数--set global.configValidation=false来关闭校验\n\n**Istio-polit** 控制sidecar中envoy的启动与参数配置；如果异常则envoy无法正常启动，应用服务的流量无法进行拦截和代理，所有配置、流量规则、策略无法生效。\n\n \n\n资料：\n\n[Istio knowledge map 知识图谱](https://github.com/servicemesher/istio-knowledge-map)\n \n\n仓库\n\nIstio项目分为多个GitHub库。\n\nistio/istio： 这是Istio的主要存储库。 它托管了Istio的核心组件，以及管理Istio开源项目的示例程序和各种文档。 这包括：\n\nsecurity：此目录包含与安全性相关的代码，包括Citadel（充当证书颁发机构），node agent。\n\npilot：此目录包含特定于平台的代码，用于填充抽象服务模型，在应用程序拓扑更改时动态重新配置代理，以及将路由规则转换为特定于代理的配置。\n\nistioctl：该目录包含istioctl命令行实用程序的代码。\n\nmixer：此目录包含用于对通过代理的流量实施各种策略以及从代理和服务收集遥测数据的代码。 有插件可与各种云平台，策略管理服务和监控服务连接。\n\nistio/API：该存储库定义了Istio平台的组件级API和通用配置格式。\n\nistio/proxy： Istio代理包含Envoy代理的扩展（以Envoy过滤器的形式），允许代理将策略执行决策委托给Mixer。\n\n\n\n## 5 Istio 安装 \n\n下载 istio 安装包 \n\ncurl -L https://git.io/getLatestIstio | ISTIO_VERSION=1.2.5 sh -\n\n配置环境变量 PATH\n\nk8s 安装，进入 安装包目录 ，执行：for i in install/kubernetes/helm/istio-init/files/crd*yaml; do kubectl apply -f $i; done\n\n选择模式 ：\n\n宽容模式 mutual TLS： kubectl apply -f install/kubernetes/istio-demo.yaml\n\n严格模式 mutual TLS：kubectl apply -f install/kubernetes/istio-demo-auth.yaml\n\n \n\nIstio + k8s部署结构图  \n\n![k8s+istio结构图](/images/k8s+istio.jpg)\n\n说明：\n\n从图中可以看出，Istio 做服务治理，K8s与istio整合，K8s做容器编排，微服务是以Docker容器的方式运行\n \n\n## 6 用户请求访问\n\n![用户请求在istio路由流程](/images/request-gateway-istio.png)\n\n说明：\n\n(1) 用户根据指定网络地址对Service X发起请求，通过外层网关服务public Ingress gateway 根据指定规则路由到目标pod，request 被代理sidecar拦截，sidecar与Service X 之间互相通信，如果在Service X 执行请求的过程中，调用了Service Y，在Service X发送调用请求后，请求会被sidecar拦截并解析，然后与Service Y的sidecar进行通信，Service Y再与它的sidecar通信，最后响应请求结束。\n\n(2) 当service mesh 中的服务需要去调用网格外的服务时，通过设置Egress gateway ，设置出口网关，路由到指定的外部服务。       \n\n\n\n服务间调用\n\n调用配置：   \n ![服务之间调用url配置](/images/invoke-service-config.png)\n\n\n \n\n调用流程图：\n\n![服务之间调用流程](/images/invoke-service-flow.png)         \n\n说明：\n\nService A 请求调用Service B,通过服务名在service name System 中获取到满足指定策略的服务地址（Ip+端口），service name System 可以当成是一个注册中心，istio中pilot 组件充当注册中心发现服务，当获取到服务的地址，就可以直接去请求Service B 的某一个节点，最后返回响应结果。\n\n\n\n## 7 总结\n\n通过了解istio 实现service mesh，对比SpringCloud可以发现，istio是将服务的治理下沉到了架构层面，在我们的服务或应用程序中不需要再去考虑服务治理相关操作，这也很好的将开发和运维剥离，同时在服务治理的层面，istio实现的粒度更加的精确，方式更加的便捷，不同于SpringCloud中我们需要在服务的配置中修改，并重启服务。springcloud 在负载均衡和熔断处理，一般都是在客户端处理，也就是调用端，而istio在负载均衡和熔断处理时，是通过Envoy代理实现。\n\nistio与k8s结合使用时，istio 服务会在每个kubelet都启用，应用部署的时候可以选择指定node，也可以指定资源条件启动，k8s会去根据自身算法寻找满足条件的node，当没有满足的node时，会启动报错，被踢除。一个 pod 可以包含一个或者多个容器，但通常是一个。而使用 Istio 的时候，需要在 pod 中主容器旁注入一个 sidecar，也就是上面提到的代理（Envoy）。\n\n最后我们通过从服务发现、负载均衡、熔断处理 、网关路由 四个方面对istio和SpringCloud做了对比：\n\n  （1）服务发现：SpringCloud 使用Eureka等注册中心，实现服务发现，应用的服务必须都指定注册中心的地址进行注册，发现服务时，通过注册中心去寻址解析到相对应得服务地址，进行请求；istio 在低版本时支持eureka 注册中心，高版本已经去除eureka，所以目前发现服务有两种方式，一种是使用k8s api-server，另一种是Consul，istio与k'8s结合的比较好，所以可以直接使用k8s的服务发现api-server，istio中的pilot组件就是和k8s api-server进行通信，实现服务发现，维护服务列表；从服务发现的层面去比较，可以看到 istio 架构中，开发不需要去考虑服务发现的过程，不需要将服务注册到指定的注册注册中心。\n\n  （2）负载均衡：SpringCloud 支持负载均衡的组件Ribbon、Feign，我们需要在代码中使用@LoadBalanced 注解开启负载均衡客户端，自定义负载均衡策略可以在配置文件中进行配置；istio 中Envoy组件配置负载均衡策略实现转发请求，当前支持的主要负载均衡算法：轮询、随机、最小连接数。通过比较可以发现，两者负载均衡的工作流程类似，但是istio 负载均衡策略配置的粒度要更小，类型更多。\n\n  （3）熔断处理：SpringCloud 熔断组件Hystrix ，可以在配置中进行开启并相关配置，并实现回调方法；istio利用Envoy网格，Envoy 在网络级别强制实现断路，而不必为每个应用程序单独配置或编程。\n\n  （4）网关：SpringCloud 有gateway网关组件，我们可以在实现组件的服务，利用过滤器和拦截器实现自定义的网关路由；istio 可以通过gateway配置ingress，并配置相关的virtualService，来实现网关路由转发。istio gateway可以实现的粒度更小，可以根据角色、用户等更小的粒度进行路由。\n\n \n\ndemo 代码地址：https://github.com/WeiLong-lee/istio-study.git\n\nistio 官网文档地址：https://istio.io/docs/  ","slug":"servicemesh/istio-and-springcloud","published":1,"updated":"2019-10-17T09:48:26.391Z","_id":"ck1uif86s000a4gqqd4378gaw","comments":1,"layout":"post","photos":[],"link":"","content":"<p>作者: 李维龙</p>\n<h2 id=\"1-Istio-是什么\"><a href=\"#1-Istio-是什么\" class=\"headerlink\" title=\"1 Istio 是什么\"></a>1 Istio 是什么</h2><p>Istio 是一个完全开源的服务网格，可以降低部署的复杂性，集成了多样化的功能保证微服务架构高效的运行，并提供保护、连接和监控微服务的统一方法。</p>\n<p>核心功能</p>\n<ul>\n<li>流量管理</li>\n</ul>\n<p>通过简单的规则配置和流量路由，您可以控制服务之间的流量和 API 调用。Istio 简化了断路器、超时和重试等服务级别属性的配置，并且可以轻松设置 A/B测试、金丝雀部署和基于百分比的流量分割的分阶段部署等重要任务。</p>\n<ul>\n<li>安全</li>\n</ul>\n<p>Istio 的安全功能使开发人员可以专注于应用程序级别的安全性。Istio 提供底层安全通信信道，并大规模管理服务通信的认证、授权和加密。</p>\n<ul>\n<li>可观察性</li>\n</ul>\n<p>Istio 强大的追踪、监控和日志记录可以深入了解服务网格部署。通过 Istio 的监控功能，可以真正了解服务性能如何影响上游和下游的功能，而其自定义仪表板可以提供对所有服务性能的可视性，并了解该性能如何影响其他进程。</p>\n<ul>\n<li>平台支持</li>\n</ul>\n<p>Istio 是独立于平台的，旨在运行在各种环境中，包括跨云、内部部署、Kubernetes、Mesos 等。您可以在 Kubernetes 上部署 Istio 或具有 Consul 的 Nomad 上部署。Istio 目前支持：Kubernetes上部署的服务/使用 Consul 注册的服务/虚拟机上部署的服务 </p>\n<ul>\n<li>集成和定制</li>\n</ul>\n<p>策略执行组件可以扩展和定制，以便与现有的 ACL、日志、监控、配额、审计等方案集成。</p>\n<h2 id=\"2-重要组件介绍\"><a href=\"#2-重要组件介绍\" class=\"headerlink\" title=\"2 重要组件介绍\"></a>2 重要组件介绍</h2><p>Istio是一个开放平台，提供统一的方式来集成微服务，管理跨微服务的流量，执行策略和汇总遥测数据。Istio的控制面板在底层集群管理平台（如Kubernetes，Mesos等）上提供了一个抽象层。</p>\n<p>Istio由以下组件组成：</p>\n<p>Envoy - 微服务的Sidecar代理，处理集群中的服务间和服务到外部服务的入口/出口流量。代理形成安全的微服务网格，提供丰富的功能，如服务发现，丰富的7层路由，熔断器，策略执行和遥测记录/报告功能。<br>Mixer - 由代理和微服务使用的集中式组件，用于执行策略，如鉴权，限流，配额，认证，请求跟踪和遥测收集等。</p>\n<p>Pilot - 负责在运行时配置代理的组件。</p>\n<p>Citadel - 负责证书颁发和轮换的集中式组件</p>\n<p>Node Agent - 负责证书颁发和轮换的每节点组件</p>\n<p>Galley - 用于在Istio中验证，摄取，聚合，转换和分发配置的中央组件。<br>Istio目前只支持Kubernetes平台和基于consul的环境</p>\n<h2 id=\"3-架构\"><a href=\"#3-架构\" class=\"headerlink\" title=\"3 架构\"></a>3 架构</h2><p>Istio 服务⽹格逻辑上分为数据平⾯和控制平⾯。</p>\n<p>数据平⾯由⼀组以 sidecar ⽅式部署的智能代理（Envoy）组成。这些代理可以调节和控制微服务<br>及 Mixer 之间所有的⽹络通信。</p>\n<p>控制平⾯负责管理和配置代理来路由流量。此外控制平⾯配置 Mixer 以实施策略和收集遥测数据。<br>  <img src=\"/images/istio-architec.png\" alt=\"architecture of istio\"></p>\n<p>Envoy</p>\n<p>  Envoy 被部署为 sidecar，和对应服务在同一个 Kubernetes pod 中。这允许 Istio 将大量关于流量行为的信号作为属性提取出来，而这些属性又可以在 Mixer 中用于执行策略决策，并发送给监控系统，以提供整个网格行为的信息。</p>\n<p>Mixer</p>\n<p>  Mixer是一个独立于平台的组件，负责在服务网格上执行访问控制和使用策略，并从 Envoy 代理和其他服务收集遥测数据。代理提取请求级属性，发送到 Mixer 进行评估。有关属性提取和策略评估的更多信息，</p>\n<p>Pilot</p>\n<p>  Pilot 为 Envoy sidecar 提供服务发现功能，为智能路由（例如 A/B 测试、金丝雀部署等）和弹性（超时、重试、熔断器等）提供流量管理功能。它将控制流量行为的高级路由规则转换为特定于 Envoy 的配置，并在运行时将它们传播到 sidecar。</p>\n<p>Citadel</p>\n<p>  通过内置身份和凭证管理赋能强大的服务间和最终用户身份验证。可用于升级服务网格中未加密的流量，并为运维人员提供基于服务标识而不是网络控制的强制执行策略的能力。从 0.5 版本开始，Istio 支持基于角色的访问控制，以控制谁可以访问您的服务，而不是基于不稳定的三层或四层网络标识。</p>\n<p>Galley</p>\n<p>  Galley 代表其他的 Istio 控制平面组件，用来验证用户编写的 Istio API 配置。随着时间的推移，Galley 将接管 Istio 获取配置、 处理和分配组件的顶级责任。它负责将其他的 Istio 组件与从底层平台（例如 Kubernetes）获取用户配置的细节隔离开来。</p>\n<p>控制平面组件<br>kubernetes 部署下的控制平面组件如下：</p>\n<p>$ kubectl -n istio-system get pod<br>NAME                                          READY     STATUS<br>grafana-5f54556df5-s4xr4                      1/1       Running<br>istio-citadel-775c6cfd6b-8h5gt                1/1       Running<br>istio-galley-675d75c954-kjcsg                 1/1       Running<br>istio-ingressgateway-6f7b477cdd-d8zpv         1/1       Running<br>istio-pilot-7dfdb48fd8-92xgt                  2/2       Running<br>istio-policy-544967d75b-p6qkk                 2/2       Running<br>istio-sidecar-injector-5f7894f54f-w7f9v       1/1       Running<br>istio-telemetry-777876dc5d-msclx              2/2       Running<br>istio-tracing-5fbc94c494-558fp                1/1       Running<br>kiali-7c6f4c9874-vzb4t                        1/1       Running<br>prometheus-66b7689b97-w9glt                   1/1       Running</p>\n<h2 id=\"4-istio系统组件细化到进程级别\"><a href=\"#4-istio系统组件细化到进程级别\" class=\"headerlink\" title=\"4 istio系统组件细化到进程级别:\"></a>4 istio系统组件细化到进程级别:</h2><p><img src=\"/images/istio-process.jpg\" alt=\"processes of istio\"></p>\n<p>说明：</p>\n<p>上图是istio组件细化到进程的结构图，在数据平面可以看到istio-ingressgateway、istio-egressgateway 内部实现是一个envoy代理，部署应用程序的pod中包含 istio-init 、user container 、istio-proxy ，其中istio-init 是初始化容器、iptables、路由。</p>\n<p>主要的服务：</p>\n<p><strong>Istio-telemetry</strong> 为Envoy提供了数据上报和日志搜集服务，以用于监控告警和日志查询。（高并发下会有性能影响，会间接导致整体性能下降，业界针对这个有较多探讨；为提高性能，需要设置为多实例，防止单点；均衡流量）</p>\n<p><strong>Istio-sidecar-injector</strong> 是sidecar自动注入功能组件，</p>\n<p><strong>Istio-policy</strong> 用于向Envoy提供准入策略控制，黑白名单控制，速率限制等相关策略</p>\n<p><strong>Istio-citadel</strong> 用于安全相关功能，为服务和用户提供认证和鉴权、管理凭据和 RBAC，挂掉则会导致认证，安全相关功能失效，如果部署了 istio-citadel，则 Envoy 每 15 分钟会进行一次重新启动来刷新证书；–set security.enabled=false如果要禁用则通过设置security，它对应的镜像就是citadel</p>\n<p><strong>Istio-galley</strong> istio API配置的校验、各种配置之间统筹，为 Istio 提供配置管理服务，包含有Kubernetes CRD资源的listener，通过用Kubernetes的Webhook机制对Pilot 和 Mixer 的配置进行验证；这个服务挂掉会导致配置校验异常，是一个必须的组件；比如创建gateway、virtualService等资源，就会需要校验；如果不想校验，可以通过设置helm 的选项参数–set global.configValidation=false来关闭校验</p>\n<p><strong>Istio-polit</strong> 控制sidecar中envoy的启动与参数配置；如果异常则envoy无法正常启动，应用服务的流量无法进行拦截和代理，所有配置、流量规则、策略无法生效。</p>\n<p>资料：</p>\n<p><a href=\"https://github.com/servicemesher/istio-knowledge-map\" target=\"_blank\" rel=\"noopener\">Istio knowledge map 知识图谱</a></p>\n<p>仓库</p>\n<p>Istio项目分为多个GitHub库。</p>\n<p>istio/istio： 这是Istio的主要存储库。 它托管了Istio的核心组件，以及管理Istio开源项目的示例程序和各种文档。 这包括：</p>\n<p>security：此目录包含与安全性相关的代码，包括Citadel（充当证书颁发机构），node agent。</p>\n<p>pilot：此目录包含特定于平台的代码，用于填充抽象服务模型，在应用程序拓扑更改时动态重新配置代理，以及将路由规则转换为特定于代理的配置。</p>\n<p>istioctl：该目录包含istioctl命令行实用程序的代码。</p>\n<p>mixer：此目录包含用于对通过代理的流量实施各种策略以及从代理和服务收集遥测数据的代码。 有插件可与各种云平台，策略管理服务和监控服务连接。</p>\n<p>istio/API：该存储库定义了Istio平台的组件级API和通用配置格式。</p>\n<p>istio/proxy： Istio代理包含Envoy代理的扩展（以Envoy过滤器的形式），允许代理将策略执行决策委托给Mixer。</p>\n<h2 id=\"5-Istio-安装\"><a href=\"#5-Istio-安装\" class=\"headerlink\" title=\"5 Istio 安装\"></a>5 Istio 安装</h2><p>下载 istio 安装包 </p>\n<p>curl -L <a href=\"https://git.io/getLatestIstio\" target=\"_blank\" rel=\"noopener\">https://git.io/getLatestIstio</a> | ISTIO_VERSION=1.2.5 sh -</p>\n<p>配置环境变量 PATH</p>\n<p>k8s 安装，进入 安装包目录 ，执行：for i in install/kubernetes/helm/istio-init/files/crd*yaml; do kubectl apply -f $i; done</p>\n<p>选择模式 ：</p>\n<p>宽容模式 mutual TLS： kubectl apply -f install/kubernetes/istio-demo.yaml</p>\n<p>严格模式 mutual TLS：kubectl apply -f install/kubernetes/istio-demo-auth.yaml</p>\n<p>Istio + k8s部署结构图  </p>\n<p><img src=\"/images/k8s+istio.jpg\" alt=\"k8s+istio结构图\"></p>\n<p>说明：</p>\n<p>从图中可以看出，Istio 做服务治理，K8s与istio整合，K8s做容器编排，微服务是以Docker容器的方式运行</p>\n<h2 id=\"6-用户请求访问\"><a href=\"#6-用户请求访问\" class=\"headerlink\" title=\"6 用户请求访问\"></a>6 用户请求访问</h2><p><img src=\"/images/request-gateway-istio.png\" alt=\"用户请求在istio路由流程\"></p>\n<p>说明：</p>\n<p>(1) 用户根据指定网络地址对Service X发起请求，通过外层网关服务public Ingress gateway 根据指定规则路由到目标pod，request 被代理sidecar拦截，sidecar与Service X 之间互相通信，如果在Service X 执行请求的过程中，调用了Service Y，在Service X发送调用请求后，请求会被sidecar拦截并解析，然后与Service Y的sidecar进行通信，Service Y再与它的sidecar通信，最后响应请求结束。</p>\n<p>(2) 当service mesh 中的服务需要去调用网格外的服务时，通过设置Egress gateway ，设置出口网关，路由到指定的外部服务。       </p>\n<p>服务间调用</p>\n<p>调用配置：<br> <img src=\"/images/invoke-service-config.png\" alt=\"服务之间调用url配置\"></p>\n<p>调用流程图：</p>\n<p><img src=\"/images/invoke-service-flow.png\" alt=\"服务之间调用流程\">         </p>\n<p>说明：</p>\n<p>Service A 请求调用Service B,通过服务名在service name System 中获取到满足指定策略的服务地址（Ip+端口），service name System 可以当成是一个注册中心，istio中pilot 组件充当注册中心发现服务，当获取到服务的地址，就可以直接去请求Service B 的某一个节点，最后返回响应结果。</p>\n<h2 id=\"7-总结\"><a href=\"#7-总结\" class=\"headerlink\" title=\"7 总结\"></a>7 总结</h2><p>通过了解istio 实现service mesh，对比SpringCloud可以发现，istio是将服务的治理下沉到了架构层面，在我们的服务或应用程序中不需要再去考虑服务治理相关操作，这也很好的将开发和运维剥离，同时在服务治理的层面，istio实现的粒度更加的精确，方式更加的便捷，不同于SpringCloud中我们需要在服务的配置中修改，并重启服务。springcloud 在负载均衡和熔断处理，一般都是在客户端处理，也就是调用端，而istio在负载均衡和熔断处理时，是通过Envoy代理实现。</p>\n<p>istio与k8s结合使用时，istio 服务会在每个kubelet都启用，应用部署的时候可以选择指定node，也可以指定资源条件启动，k8s会去根据自身算法寻找满足条件的node，当没有满足的node时，会启动报错，被踢除。一个 pod 可以包含一个或者多个容器，但通常是一个。而使用 Istio 的时候，需要在 pod 中主容器旁注入一个 sidecar，也就是上面提到的代理（Envoy）。</p>\n<p>最后我们通过从服务发现、负载均衡、熔断处理 、网关路由 四个方面对istio和SpringCloud做了对比：</p>\n<p>  （1）服务发现：SpringCloud 使用Eureka等注册中心，实现服务发现，应用的服务必须都指定注册中心的地址进行注册，发现服务时，通过注册中心去寻址解析到相对应得服务地址，进行请求；istio 在低版本时支持eureka 注册中心，高版本已经去除eureka，所以目前发现服务有两种方式，一种是使用k8s api-server，另一种是Consul，istio与k’8s结合的比较好，所以可以直接使用k8s的服务发现api-server，istio中的pilot组件就是和k8s api-server进行通信，实现服务发现，维护服务列表；从服务发现的层面去比较，可以看到 istio 架构中，开发不需要去考虑服务发现的过程，不需要将服务注册到指定的注册注册中心。</p>\n<p>  （2）负载均衡：SpringCloud 支持负载均衡的组件Ribbon、Feign，我们需要在代码中使用@LoadBalanced 注解开启负载均衡客户端，自定义负载均衡策略可以在配置文件中进行配置；istio 中Envoy组件配置负载均衡策略实现转发请求，当前支持的主要负载均衡算法：轮询、随机、最小连接数。通过比较可以发现，两者负载均衡的工作流程类似，但是istio 负载均衡策略配置的粒度要更小，类型更多。</p>\n<p>  （3）熔断处理：SpringCloud 熔断组件Hystrix ，可以在配置中进行开启并相关配置，并实现回调方法；istio利用Envoy网格，Envoy 在网络级别强制实现断路，而不必为每个应用程序单独配置或编程。</p>\n<p>  （4）网关：SpringCloud 有gateway网关组件，我们可以在实现组件的服务，利用过滤器和拦截器实现自定义的网关路由；istio 可以通过gateway配置ingress，并配置相关的virtualService，来实现网关路由转发。istio gateway可以实现的粒度更小，可以根据角色、用户等更小的粒度进行路由。</p>\n<p>demo 代码地址：<a href=\"https://github.com/WeiLong-lee/istio-study.git\" target=\"_blank\" rel=\"noopener\">https://github.com/WeiLong-lee/istio-study.git</a></p>\n<p>istio 官网文档地址：<a href=\"https://istio.io/docs/\" target=\"_blank\" rel=\"noopener\">https://istio.io/docs/</a>  </p>\n","site":{"data":{}},"excerpt":"","more":"<p>作者: 李维龙</p>\n<h2 id=\"1-Istio-是什么\"><a href=\"#1-Istio-是什么\" class=\"headerlink\" title=\"1 Istio 是什么\"></a>1 Istio 是什么</h2><p>Istio 是一个完全开源的服务网格，可以降低部署的复杂性，集成了多样化的功能保证微服务架构高效的运行，并提供保护、连接和监控微服务的统一方法。</p>\n<p>核心功能</p>\n<ul>\n<li>流量管理</li>\n</ul>\n<p>通过简单的规则配置和流量路由，您可以控制服务之间的流量和 API 调用。Istio 简化了断路器、超时和重试等服务级别属性的配置，并且可以轻松设置 A/B测试、金丝雀部署和基于百分比的流量分割的分阶段部署等重要任务。</p>\n<ul>\n<li>安全</li>\n</ul>\n<p>Istio 的安全功能使开发人员可以专注于应用程序级别的安全性。Istio 提供底层安全通信信道，并大规模管理服务通信的认证、授权和加密。</p>\n<ul>\n<li>可观察性</li>\n</ul>\n<p>Istio 强大的追踪、监控和日志记录可以深入了解服务网格部署。通过 Istio 的监控功能，可以真正了解服务性能如何影响上游和下游的功能，而其自定义仪表板可以提供对所有服务性能的可视性，并了解该性能如何影响其他进程。</p>\n<ul>\n<li>平台支持</li>\n</ul>\n<p>Istio 是独立于平台的，旨在运行在各种环境中，包括跨云、内部部署、Kubernetes、Mesos 等。您可以在 Kubernetes 上部署 Istio 或具有 Consul 的 Nomad 上部署。Istio 目前支持：Kubernetes上部署的服务/使用 Consul 注册的服务/虚拟机上部署的服务 </p>\n<ul>\n<li>集成和定制</li>\n</ul>\n<p>策略执行组件可以扩展和定制，以便与现有的 ACL、日志、监控、配额、审计等方案集成。</p>\n<h2 id=\"2-重要组件介绍\"><a href=\"#2-重要组件介绍\" class=\"headerlink\" title=\"2 重要组件介绍\"></a>2 重要组件介绍</h2><p>Istio是一个开放平台，提供统一的方式来集成微服务，管理跨微服务的流量，执行策略和汇总遥测数据。Istio的控制面板在底层集群管理平台（如Kubernetes，Mesos等）上提供了一个抽象层。</p>\n<p>Istio由以下组件组成：</p>\n<p>Envoy - 微服务的Sidecar代理，处理集群中的服务间和服务到外部服务的入口/出口流量。代理形成安全的微服务网格，提供丰富的功能，如服务发现，丰富的7层路由，熔断器，策略执行和遥测记录/报告功能。<br>Mixer - 由代理和微服务使用的集中式组件，用于执行策略，如鉴权，限流，配额，认证，请求跟踪和遥测收集等。</p>\n<p>Pilot - 负责在运行时配置代理的组件。</p>\n<p>Citadel - 负责证书颁发和轮换的集中式组件</p>\n<p>Node Agent - 负责证书颁发和轮换的每节点组件</p>\n<p>Galley - 用于在Istio中验证，摄取，聚合，转换和分发配置的中央组件。<br>Istio目前只支持Kubernetes平台和基于consul的环境</p>\n<h2 id=\"3-架构\"><a href=\"#3-架构\" class=\"headerlink\" title=\"3 架构\"></a>3 架构</h2><p>Istio 服务⽹格逻辑上分为数据平⾯和控制平⾯。</p>\n<p>数据平⾯由⼀组以 sidecar ⽅式部署的智能代理（Envoy）组成。这些代理可以调节和控制微服务<br>及 Mixer 之间所有的⽹络通信。</p>\n<p>控制平⾯负责管理和配置代理来路由流量。此外控制平⾯配置 Mixer 以实施策略和收集遥测数据。<br>  <img src=\"/images/istio-architec.png\" alt=\"architecture of istio\"></p>\n<p>Envoy</p>\n<p>  Envoy 被部署为 sidecar，和对应服务在同一个 Kubernetes pod 中。这允许 Istio 将大量关于流量行为的信号作为属性提取出来，而这些属性又可以在 Mixer 中用于执行策略决策，并发送给监控系统，以提供整个网格行为的信息。</p>\n<p>Mixer</p>\n<p>  Mixer是一个独立于平台的组件，负责在服务网格上执行访问控制和使用策略，并从 Envoy 代理和其他服务收集遥测数据。代理提取请求级属性，发送到 Mixer 进行评估。有关属性提取和策略评估的更多信息，</p>\n<p>Pilot</p>\n<p>  Pilot 为 Envoy sidecar 提供服务发现功能，为智能路由（例如 A/B 测试、金丝雀部署等）和弹性（超时、重试、熔断器等）提供流量管理功能。它将控制流量行为的高级路由规则转换为特定于 Envoy 的配置，并在运行时将它们传播到 sidecar。</p>\n<p>Citadel</p>\n<p>  通过内置身份和凭证管理赋能强大的服务间和最终用户身份验证。可用于升级服务网格中未加密的流量，并为运维人员提供基于服务标识而不是网络控制的强制执行策略的能力。从 0.5 版本开始，Istio 支持基于角色的访问控制，以控制谁可以访问您的服务，而不是基于不稳定的三层或四层网络标识。</p>\n<p>Galley</p>\n<p>  Galley 代表其他的 Istio 控制平面组件，用来验证用户编写的 Istio API 配置。随着时间的推移，Galley 将接管 Istio 获取配置、 处理和分配组件的顶级责任。它负责将其他的 Istio 组件与从底层平台（例如 Kubernetes）获取用户配置的细节隔离开来。</p>\n<p>控制平面组件<br>kubernetes 部署下的控制平面组件如下：</p>\n<p>$ kubectl -n istio-system get pod<br>NAME                                          READY     STATUS<br>grafana-5f54556df5-s4xr4                      1/1       Running<br>istio-citadel-775c6cfd6b-8h5gt                1/1       Running<br>istio-galley-675d75c954-kjcsg                 1/1       Running<br>istio-ingressgateway-6f7b477cdd-d8zpv         1/1       Running<br>istio-pilot-7dfdb48fd8-92xgt                  2/2       Running<br>istio-policy-544967d75b-p6qkk                 2/2       Running<br>istio-sidecar-injector-5f7894f54f-w7f9v       1/1       Running<br>istio-telemetry-777876dc5d-msclx              2/2       Running<br>istio-tracing-5fbc94c494-558fp                1/1       Running<br>kiali-7c6f4c9874-vzb4t                        1/1       Running<br>prometheus-66b7689b97-w9glt                   1/1       Running</p>\n<h2 id=\"4-istio系统组件细化到进程级别\"><a href=\"#4-istio系统组件细化到进程级别\" class=\"headerlink\" title=\"4 istio系统组件细化到进程级别:\"></a>4 istio系统组件细化到进程级别:</h2><p><img src=\"/images/istio-process.jpg\" alt=\"processes of istio\"></p>\n<p>说明：</p>\n<p>上图是istio组件细化到进程的结构图，在数据平面可以看到istio-ingressgateway、istio-egressgateway 内部实现是一个envoy代理，部署应用程序的pod中包含 istio-init 、user container 、istio-proxy ，其中istio-init 是初始化容器、iptables、路由。</p>\n<p>主要的服务：</p>\n<p><strong>Istio-telemetry</strong> 为Envoy提供了数据上报和日志搜集服务，以用于监控告警和日志查询。（高并发下会有性能影响，会间接导致整体性能下降，业界针对这个有较多探讨；为提高性能，需要设置为多实例，防止单点；均衡流量）</p>\n<p><strong>Istio-sidecar-injector</strong> 是sidecar自动注入功能组件，</p>\n<p><strong>Istio-policy</strong> 用于向Envoy提供准入策略控制，黑白名单控制，速率限制等相关策略</p>\n<p><strong>Istio-citadel</strong> 用于安全相关功能，为服务和用户提供认证和鉴权、管理凭据和 RBAC，挂掉则会导致认证，安全相关功能失效，如果部署了 istio-citadel，则 Envoy 每 15 分钟会进行一次重新启动来刷新证书；–set security.enabled=false如果要禁用则通过设置security，它对应的镜像就是citadel</p>\n<p><strong>Istio-galley</strong> istio API配置的校验、各种配置之间统筹，为 Istio 提供配置管理服务，包含有Kubernetes CRD资源的listener，通过用Kubernetes的Webhook机制对Pilot 和 Mixer 的配置进行验证；这个服务挂掉会导致配置校验异常，是一个必须的组件；比如创建gateway、virtualService等资源，就会需要校验；如果不想校验，可以通过设置helm 的选项参数–set global.configValidation=false来关闭校验</p>\n<p><strong>Istio-polit</strong> 控制sidecar中envoy的启动与参数配置；如果异常则envoy无法正常启动，应用服务的流量无法进行拦截和代理，所有配置、流量规则、策略无法生效。</p>\n<p>资料：</p>\n<p><a href=\"https://github.com/servicemesher/istio-knowledge-map\" target=\"_blank\" rel=\"noopener\">Istio knowledge map 知识图谱</a></p>\n<p>仓库</p>\n<p>Istio项目分为多个GitHub库。</p>\n<p>istio/istio： 这是Istio的主要存储库。 它托管了Istio的核心组件，以及管理Istio开源项目的示例程序和各种文档。 这包括：</p>\n<p>security：此目录包含与安全性相关的代码，包括Citadel（充当证书颁发机构），node agent。</p>\n<p>pilot：此目录包含特定于平台的代码，用于填充抽象服务模型，在应用程序拓扑更改时动态重新配置代理，以及将路由规则转换为特定于代理的配置。</p>\n<p>istioctl：该目录包含istioctl命令行实用程序的代码。</p>\n<p>mixer：此目录包含用于对通过代理的流量实施各种策略以及从代理和服务收集遥测数据的代码。 有插件可与各种云平台，策略管理服务和监控服务连接。</p>\n<p>istio/API：该存储库定义了Istio平台的组件级API和通用配置格式。</p>\n<p>istio/proxy： Istio代理包含Envoy代理的扩展（以Envoy过滤器的形式），允许代理将策略执行决策委托给Mixer。</p>\n<h2 id=\"5-Istio-安装\"><a href=\"#5-Istio-安装\" class=\"headerlink\" title=\"5 Istio 安装\"></a>5 Istio 安装</h2><p>下载 istio 安装包 </p>\n<p>curl -L <a href=\"https://git.io/getLatestIstio\" target=\"_blank\" rel=\"noopener\">https://git.io/getLatestIstio</a> | ISTIO_VERSION=1.2.5 sh -</p>\n<p>配置环境变量 PATH</p>\n<p>k8s 安装，进入 安装包目录 ，执行：for i in install/kubernetes/helm/istio-init/files/crd*yaml; do kubectl apply -f $i; done</p>\n<p>选择模式 ：</p>\n<p>宽容模式 mutual TLS： kubectl apply -f install/kubernetes/istio-demo.yaml</p>\n<p>严格模式 mutual TLS：kubectl apply -f install/kubernetes/istio-demo-auth.yaml</p>\n<p>Istio + k8s部署结构图  </p>\n<p><img src=\"/images/k8s+istio.jpg\" alt=\"k8s+istio结构图\"></p>\n<p>说明：</p>\n<p>从图中可以看出，Istio 做服务治理，K8s与istio整合，K8s做容器编排，微服务是以Docker容器的方式运行</p>\n<h2 id=\"6-用户请求访问\"><a href=\"#6-用户请求访问\" class=\"headerlink\" title=\"6 用户请求访问\"></a>6 用户请求访问</h2><p><img src=\"/images/request-gateway-istio.png\" alt=\"用户请求在istio路由流程\"></p>\n<p>说明：</p>\n<p>(1) 用户根据指定网络地址对Service X发起请求，通过外层网关服务public Ingress gateway 根据指定规则路由到目标pod，request 被代理sidecar拦截，sidecar与Service X 之间互相通信，如果在Service X 执行请求的过程中，调用了Service Y，在Service X发送调用请求后，请求会被sidecar拦截并解析，然后与Service Y的sidecar进行通信，Service Y再与它的sidecar通信，最后响应请求结束。</p>\n<p>(2) 当service mesh 中的服务需要去调用网格外的服务时，通过设置Egress gateway ，设置出口网关，路由到指定的外部服务。       </p>\n<p>服务间调用</p>\n<p>调用配置：<br> <img src=\"/images/invoke-service-config.png\" alt=\"服务之间调用url配置\"></p>\n<p>调用流程图：</p>\n<p><img src=\"/images/invoke-service-flow.png\" alt=\"服务之间调用流程\">         </p>\n<p>说明：</p>\n<p>Service A 请求调用Service B,通过服务名在service name System 中获取到满足指定策略的服务地址（Ip+端口），service name System 可以当成是一个注册中心，istio中pilot 组件充当注册中心发现服务，当获取到服务的地址，就可以直接去请求Service B 的某一个节点，最后返回响应结果。</p>\n<h2 id=\"7-总结\"><a href=\"#7-总结\" class=\"headerlink\" title=\"7 总结\"></a>7 总结</h2><p>通过了解istio 实现service mesh，对比SpringCloud可以发现，istio是将服务的治理下沉到了架构层面，在我们的服务或应用程序中不需要再去考虑服务治理相关操作，这也很好的将开发和运维剥离，同时在服务治理的层面，istio实现的粒度更加的精确，方式更加的便捷，不同于SpringCloud中我们需要在服务的配置中修改，并重启服务。springcloud 在负载均衡和熔断处理，一般都是在客户端处理，也就是调用端，而istio在负载均衡和熔断处理时，是通过Envoy代理实现。</p>\n<p>istio与k8s结合使用时，istio 服务会在每个kubelet都启用，应用部署的时候可以选择指定node，也可以指定资源条件启动，k8s会去根据自身算法寻找满足条件的node，当没有满足的node时，会启动报错，被踢除。一个 pod 可以包含一个或者多个容器，但通常是一个。而使用 Istio 的时候，需要在 pod 中主容器旁注入一个 sidecar，也就是上面提到的代理（Envoy）。</p>\n<p>最后我们通过从服务发现、负载均衡、熔断处理 、网关路由 四个方面对istio和SpringCloud做了对比：</p>\n<p>  （1）服务发现：SpringCloud 使用Eureka等注册中心，实现服务发现，应用的服务必须都指定注册中心的地址进行注册，发现服务时，通过注册中心去寻址解析到相对应得服务地址，进行请求；istio 在低版本时支持eureka 注册中心，高版本已经去除eureka，所以目前发现服务有两种方式，一种是使用k8s api-server，另一种是Consul，istio与k’8s结合的比较好，所以可以直接使用k8s的服务发现api-server，istio中的pilot组件就是和k8s api-server进行通信，实现服务发现，维护服务列表；从服务发现的层面去比较，可以看到 istio 架构中，开发不需要去考虑服务发现的过程，不需要将服务注册到指定的注册注册中心。</p>\n<p>  （2）负载均衡：SpringCloud 支持负载均衡的组件Ribbon、Feign，我们需要在代码中使用@LoadBalanced 注解开启负载均衡客户端，自定义负载均衡策略可以在配置文件中进行配置；istio 中Envoy组件配置负载均衡策略实现转发请求，当前支持的主要负载均衡算法：轮询、随机、最小连接数。通过比较可以发现，两者负载均衡的工作流程类似，但是istio 负载均衡策略配置的粒度要更小，类型更多。</p>\n<p>  （3）熔断处理：SpringCloud 熔断组件Hystrix ，可以在配置中进行开启并相关配置，并实现回调方法；istio利用Envoy网格，Envoy 在网络级别强制实现断路，而不必为每个应用程序单独配置或编程。</p>\n<p>  （4）网关：SpringCloud 有gateway网关组件，我们可以在实现组件的服务，利用过滤器和拦截器实现自定义的网关路由；istio 可以通过gateway配置ingress，并配置相关的virtualService，来实现网关路由转发。istio gateway可以实现的粒度更小，可以根据角色、用户等更小的粒度进行路由。</p>\n<p>demo 代码地址：<a href=\"https://github.com/WeiLong-lee/istio-study.git\" target=\"_blank\" rel=\"noopener\">https://github.com/WeiLong-lee/istio-study.git</a></p>\n<p>istio 官网文档地址：<a href=\"https://istio.io/docs/\" target=\"_blank\" rel=\"noopener\">https://istio.io/docs/</a>  </p>\n"},{"title":"Hexo安装何使用","date":"2019-10-21T06:49:52.000Z","_content":"\n1.安装Node\ncurl -LO node-v10.16.3-linux-x64.tar.xz\ntar -xf node-v10.16.3-linux-x64.tar.xz\n设置环境变量\nvim ~/.bash_profile\nexport PATH=$PATH:/home/node-v10.16.3-linux-x64/bin\nexport PATH=$PATH:/home/node_modules/bin\nsource ~/.bash_profile\n\n2.安装hexo\nnpm install -g hexo-cli\nnpm install hexo\n\n创建应用\nhexo init blog\ncd blog\nnpm install\nhexo server\nhexo generate\n\n3.安装和使用material-flow theme\ninstall dependencies\n\nnpm i -S hexo-generator-search hexo-generator-feed hexo-renderer-less hexo-autoprefixer hexo-generator-json-content\n\ndownload source\ngit clone https://github.com/stkevintan/hexo-theme-material-flow themes/material-flow\n\nChange the value of theme to material-flow in _config.yml.\nnpm install\nPut your avatar && favicon images to source/images/.\nEdit _config.yml and themes/material-flow/_config.yml for your needs.\n\n创建页面\n\nhexo new page --path about/me \"About me\"\nhexo new page --path microservices/k8s-windows \"Microservices k8s-windows\"\n\nhexo new page --path microservices/minikube\nhexo new page --path servicemesh/istio-and-springcloud\n","source":"_posts/1571643031013.md","raw":"---\ntitle: Hexo安装何使用\ndate: 2019-10-21 14:49:52\ntags:\n - hexo\n\ncategories:\n - Service-Mesh\n\n---\n\n1.安装Node\ncurl -LO node-v10.16.3-linux-x64.tar.xz\ntar -xf node-v10.16.3-linux-x64.tar.xz\n设置环境变量\nvim ~/.bash_profile\nexport PATH=$PATH:/home/node-v10.16.3-linux-x64/bin\nexport PATH=$PATH:/home/node_modules/bin\nsource ~/.bash_profile\n\n2.安装hexo\nnpm install -g hexo-cli\nnpm install hexo\n\n创建应用\nhexo init blog\ncd blog\nnpm install\nhexo server\nhexo generate\n\n3.安装和使用material-flow theme\ninstall dependencies\n\nnpm i -S hexo-generator-search hexo-generator-feed hexo-renderer-less hexo-autoprefixer hexo-generator-json-content\n\ndownload source\ngit clone https://github.com/stkevintan/hexo-theme-material-flow themes/material-flow\n\nChange the value of theme to material-flow in _config.yml.\nnpm install\nPut your avatar && favicon images to source/images/.\nEdit _config.yml and themes/material-flow/_config.yml for your needs.\n\n创建页面\n\nhexo new page --path about/me \"About me\"\nhexo new page --path microservices/k8s-windows \"Microservices k8s-windows\"\n\nhexo new page --path microservices/minikube\nhexo new page --path servicemesh/istio-and-springcloud\n","slug":"1571643031013","published":1,"updated":"2019-10-21T07:30:31.016Z","_id":"ck203ojxu00008sqqcuu9gchy","comments":1,"layout":"post","photos":[],"link":"","content":"<p>1.安装Node<br>curl -LO node-v10.16.3-linux-x64.tar.xz<br>tar -xf node-v10.16.3-linux-x64.tar.xz<br>设置环境变量<br>vim ~/.bash_profile<br>export PATH=$PATH:/home/node-v10.16.3-linux-x64/bin<br>export PATH=$PATH:/home/node_modules/bin<br>source ~/.bash_profile</p>\n<p>2.安装hexo<br>npm install -g hexo-cli<br>npm install hexo</p>\n<p>创建应用<br>hexo init blog<br>cd blog<br>npm install<br>hexo server<br>hexo generate</p>\n<p>3.安装和使用material-flow theme<br>install dependencies</p>\n<p>npm i -S hexo-generator-search hexo-generator-feed hexo-renderer-less hexo-autoprefixer hexo-generator-json-content</p>\n<p>download source<br>git clone <a href=\"https://github.com/stkevintan/hexo-theme-material-flow\" target=\"_blank\" rel=\"noopener\">https://github.com/stkevintan/hexo-theme-material-flow</a> themes/material-flow</p>\n<p>Change the value of theme to material-flow in _config.yml.<br>npm install<br>Put your avatar &amp;&amp; favicon images to source/images/.<br>Edit _config.yml and themes/material-flow/_config.yml for your needs.</p>\n<p>创建页面</p>\n<p>hexo new page –path about/me “About me”<br>hexo new page –path microservices/k8s-windows “Microservices k8s-windows”</p>\n<p>hexo new page –path microservices/minikube<br>hexo new page –path servicemesh/istio-and-springcloud</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.安装Node<br>curl -LO node-v10.16.3-linux-x64.tar.xz<br>tar -xf node-v10.16.3-linux-x64.tar.xz<br>设置环境变量<br>vim ~/.bash_profile<br>export PATH=$PATH:/home/node-v10.16.3-linux-x64/bin<br>export PATH=$PATH:/home/node_modules/bin<br>source ~/.bash_profile</p>\n<p>2.安装hexo<br>npm install -g hexo-cli<br>npm install hexo</p>\n<p>创建应用<br>hexo init blog<br>cd blog<br>npm install<br>hexo server<br>hexo generate</p>\n<p>3.安装和使用material-flow theme<br>install dependencies</p>\n<p>npm i -S hexo-generator-search hexo-generator-feed hexo-renderer-less hexo-autoprefixer hexo-generator-json-content</p>\n<p>download source<br>git clone <a href=\"https://github.com/stkevintan/hexo-theme-material-flow\" target=\"_blank\" rel=\"noopener\">https://github.com/stkevintan/hexo-theme-material-flow</a> themes/material-flow</p>\n<p>Change the value of theme to material-flow in _config.yml.<br>npm install<br>Put your avatar &amp;&amp; favicon images to source/images/.<br>Edit _config.yml and themes/material-flow/_config.yml for your needs.</p>\n<p>创建页面</p>\n<p>hexo new page –path about/me “About me”<br>hexo new page –path microservices/k8s-windows “Microservices k8s-windows”</p>\n<p>hexo new page –path microservices/minikube<br>hexo new page –path servicemesh/istio-and-springcloud</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck1uam0pk0001s8qqvfxjfma8","category_id":"ck1uam0pt0003s8qqzpser6nk","_id":"ck1uam0qg000es8qqexwpu16a"},{"post_id":"ck1uam0pq0002s8qqqyp2c595","category_id":"ck1uam0pt0003s8qqzpser6nk","_id":"ck1uam0qp000is8qquvrx2jay"},{"post_id":"ck1uam0qd000cs8qqnbi3rqip","category_id":"ck1uam0pt0003s8qqzpser6nk","_id":"ck1uam0qz000ms8qqopjirgax"},{"post_id":"ck1uam0qj000gs8qqx2f09tex","category_id":"ck1uam0pt0003s8qqzpser6nk","_id":"ck1uam0r3000ps8qq3z3164h3"},{"post_id":"ck1uam0py0005s8qqo3sw6ffe","category_id":"ck1uam0qf000ds8qqbu5xd7ul","_id":"ck1uam0rb000us8qqdrp2ismd"},{"post_id":"ck1uam0ql000hs8qqbitf0ex2","category_id":"ck1uam0qf000ds8qqbu5xd7ul","_id":"ck1uam0re000ws8qqykivlfmf"},{"post_id":"ck1uam0qv000ls8qq2pzj1xhj","category_id":"ck1uam0pt0003s8qqzpser6nk","_id":"ck1uam0rg000ys8qqoo0tawia"},{"post_id":"ck1uam0q00006s8qqg1d6qz7a","category_id":"ck1uam0qr000js8qqoouzfivn","_id":"ck1uam0ri0010s8qqpt0w8su2"},{"post_id":"ck1uam0r2000os8qq5ydbprkg","category_id":"ck1uam0qf000ds8qqbu5xd7ul","_id":"ck1uam0rk0011s8qqb9tzcrkj"},{"post_id":"ck1uam0r9000ts8qquq8cdz52","category_id":"ck1uam0qf000ds8qqbu5xd7ul","_id":"ck1uam0rm0013s8qqrve9abp3"},{"post_id":"ck1uam0q20007s8qqtjvyapn0","category_id":"ck1uam0qf000ds8qqbu5xd7ul","_id":"ck1uam0rn0014s8qqnhiw1mbq"},{"post_id":"ck1uam0q9000bs8qqidhpk7tl","category_id":"ck1uam0qf000ds8qqbu5xd7ul","_id":"ck1uam0rp0016s8qqna21m9ii"},{"post_id":"ck1uif85s00004gqqskcr3u61","category_id":"ck1uam0te0024s8qqgzm1pfyb","_id":"ck1uif86e00044gqqrl6dfs5v"},{"post_id":"ck1uif86300014gqqtjutevry","category_id":"ck1uam0tg0026s8qqqyvc61il","_id":"ck1uif86i00064gqqcgcwmok3"},{"post_id":"ck1uif86s000a4gqqd4378gaw","category_id":"ck1uam0te0024s8qqgzm1pfyb","_id":"ck1uif86x000d4gqqvrwxv2yo"},{"post_id":"ck203ojxu00008sqqcuu9gchy","category_id":"ck1uam0te0024s8qqgzm1pfyb","_id":"ck203ojy300028sqqrx2doy8i"}],"PostTag":[{"post_id":"ck1uam0pk0001s8qqvfxjfma8","tag_id":"ck1uam0pw0004s8qq5rqpv5hf","_id":"ck1uam0q8000as8qqkrdmcwch"},{"post_id":"ck1uam0pq0002s8qqqyp2c595","tag_id":"ck1uam0q50009s8qqi9md0kop","_id":"ck1uam0r0000ns8qq79ucbln9"},{"post_id":"ck1uam0pq0002s8qqqyp2c595","tag_id":"ck1uam0qh000fs8qqztv74tj2","_id":"ck1uam0r5000qs8qqouhc9s43"},{"post_id":"ck1uam0py0005s8qqo3sw6ffe","tag_id":"ck1uam0qu000ks8qqd0xybrwa","_id":"ck1uam0rc000vs8qqw8khqwcm"},{"post_id":"ck1uam0q00006s8qqg1d6qz7a","tag_id":"ck1uam0r8000ss8qqg7urk35t","_id":"ck1uam0rs0017s8qqy8a1vw9j"},{"post_id":"ck1uam0q00006s8qqg1d6qz7a","tag_id":"ck1uam0rh000zs8qqxfe49wqk","_id":"ck1uam0rt0018s8qqoh3pyvju"},{"post_id":"ck1uam0q00006s8qqg1d6qz7a","tag_id":"ck1uam0rl0012s8qqksf1w2i3","_id":"ck1uam0rw001as8qqhxkg72t9"},{"post_id":"ck1uam0q20007s8qqtjvyapn0","tag_id":"ck1uam0qu000ks8qqd0xybrwa","_id":"ck1uam0s0001ds8qqaqnwen5m"},{"post_id":"ck1uam0q20007s8qqtjvyapn0","tag_id":"ck1uam0rv0019s8qq89vmodon","_id":"ck1uam0s1001es8qqgkp0b55p"},{"post_id":"ck1uam0q20007s8qqtjvyapn0","tag_id":"ck1uam0rx001bs8qqccnr07ed","_id":"ck1uam0s3001gs8qq1gmq8k43"},{"post_id":"ck1uam0q9000bs8qqidhpk7tl","tag_id":"ck1uam0ry001cs8qqvsy6rsrs","_id":"ck1uam0sa001ks8qqjfu6ilmm"},{"post_id":"ck1uam0q9000bs8qqidhpk7tl","tag_id":"ck1uam0s2001fs8qq3rmdzqca","_id":"ck1uam0sb001ls8qqd19fss3s"},{"post_id":"ck1uam0q9000bs8qqidhpk7tl","tag_id":"ck1uam0s4001hs8qqnlc14gjm","_id":"ck1uam0sd001ns8qqiddmxprw"},{"post_id":"ck1uam0q9000bs8qqidhpk7tl","tag_id":"ck1uam0s6001is8qq4zwv3cul","_id":"ck1uam0se001os8qqykudtabz"},{"post_id":"ck1uam0qd000cs8qqnbi3rqip","tag_id":"ck1uam0s8001js8qqv5k18rwn","_id":"ck1uam0sg001qs8qqfci4zpqr"},{"post_id":"ck1uam0qj000gs8qqx2f09tex","tag_id":"ck1uam0sc001ms8qqp5lyj3ul","_id":"ck1uam0sh001rs8qqhk9n9luw"},{"post_id":"ck1uam0ql000hs8qqbitf0ex2","tag_id":"ck1uam0sf001ps8qqc4dvevvm","_id":"ck1uam0sk001us8qq4cbot6sq"},{"post_id":"ck1uam0ql000hs8qqbitf0ex2","tag_id":"ck1uam0si001ss8qq5h14jwxe","_id":"ck1uam0sm001vs8qqgnf5juxi"},{"post_id":"ck1uam0qv000ls8qq2pzj1xhj","tag_id":"ck1uam0sj001ts8qqzvtiannl","_id":"ck1uam0so001xs8qqdelw18fu"},{"post_id":"ck1uam0qv000ls8qq2pzj1xhj","tag_id":"ck1uam0pw0004s8qq5rqpv5hf","_id":"ck1uam0sp001ys8qqnxico5o4"},{"post_id":"ck1uam0r2000os8qq5ydbprkg","tag_id":"ck1uam0sn001ws8qqfsycdv8z","_id":"ck1uam0sr0020s8qqwj2is3km"},{"post_id":"ck1uam0r9000ts8qquq8cdz52","tag_id":"ck1uam0sn001ws8qqfsycdv8z","_id":"ck1uam0st0021s8qqaryvmfil"},{"post_id":"ck1uif85s00004gqqskcr3u61","tag_id":"ck1uam0rh000zs8qqxfe49wqk","_id":"ck1uif86900024gqqguia7qjt"},{"post_id":"ck1uif85s00004gqqskcr3u61","tag_id":"ck1uam0rl0012s8qqksf1w2i3","_id":"ck1uif86c00034gqqo6y4xo4h"},{"post_id":"ck1uif85s00004gqqskcr3u61","tag_id":"ck1uam0tf0025s8qq25ubfh1s","_id":"ck1uif86g00054gqqebxu2d1r"},{"post_id":"ck1uif86300014gqqtjutevry","tag_id":"ck1uam0rh000zs8qqxfe49wqk","_id":"ck1uif86k00074gqqil2sp8ch"},{"post_id":"ck1uif86300014gqqtjutevry","tag_id":"ck1uam0rl0012s8qqksf1w2i3","_id":"ck1uif86m00084gqq9ign8h8e"},{"post_id":"ck1uif86300014gqqtjutevry","tag_id":"ck1uam0tf0025s8qq25ubfh1s","_id":"ck1uif86o00094gqqhanx7lyb"},{"post_id":"ck1uif86s000a4gqqd4378gaw","tag_id":"ck1uam0rl0012s8qqksf1w2i3","_id":"ck1uif86u000b4gqq3q9daisj"},{"post_id":"ck1uif86s000a4gqqd4378gaw","tag_id":"ck1uam0tf0025s8qq25ubfh1s","_id":"ck1uif86w000c4gqqtom33zgz"},{"post_id":"ck1uif86s000a4gqqd4378gaw","tag_id":"ck1uang8p002hs8qqgsarn32g","_id":"ck1uif86y000e4gqqs7l5wwzs"},{"post_id":"ck203ojxu00008sqqcuu9gchy","tag_id":"ck203ojy000018sqqkangxuj8","_id":"ck203ojy500038sqqiwos4727"}],"Tag":[{"name":"只言片语","_id":"ck1uam0pw0004s8qq5rqpv5hf"},{"name":"algorithm","_id":"ck1uam0q50009s8qqi9md0kop"},{"name":"golang","_id":"ck1uam0qh000fs8qqztv74tj2"},{"name":"centos","_id":"ck1uam0qu000ks8qqd0xybrwa"},{"name":"meow","_id":"ck1uam0r8000ss8qqg7urk35t"},{"name":"docker","_id":"ck1uam0rh000zs8qqxfe49wqk"},{"name":"kubernetes","_id":"ck1uam0rl0012s8qqksf1w2i3"},{"name":"tmux","_id":"ck1uam0rv0019s8qq89vmodon"},{"name":"prezto","_id":"ck1uam0rx001bs8qqccnr07ed"},{"name":"deepin","_id":"ck1uam0ry001cs8qqvsy6rsrs"},{"name":"ppa","_id":"ck1uam0s2001fs8qq3rmdzqca"},{"name":"octotree","_id":"ck1uam0s4001hs8qqnlc14gjm"},{"name":"infinality fonts","_id":"ck1uam0s6001is8qq4zwv3cul"},{"name":"暴力","_id":"ck1uam0s8001js8qqv5k18rwn"},{"name":"图论","_id":"ck1uam0sc001ms8qqp5lyj3ul"},{"name":"gnome","_id":"ck1uam0sf001ps8qqc4dvevvm"},{"name":"i3wm","_id":"ck1uam0si001ss8qq5h14jwxe"},{"name":"数论","_id":"ck1uam0sj001ts8qqzvtiannl"},{"name":"DE/WM","_id":"ck1uam0sn001ws8qqfsycdv8z"},{"name":"k8s","_id":"ck1uam0tf0025s8qq25ubfh1s"},{"name":"istio","_id":"ck1uang8p002hs8qqgsarn32g"},{"name":"hexo","_id":"ck203ojy000018sqqkangxuj8"}]}}